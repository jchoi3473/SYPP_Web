[{"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\index.js":"1","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\App.js":"2","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\reportWebVitals.js":"3","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\store.js":"4","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\addApp-reducer\\addAppAction.js":"5","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_main\\MainPage.js":"6","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\application-reducer\\applicationAction.js":"7","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\root-reducer.js":"8","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\addApp-reducer\\addAppTypes.js":"9","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\application-reducer\\applicationReducer.js":"10","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\addApp-reducer\\addAppReducer.js":"11","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\ApplicationsMain.js":"12","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarMain.js":"13","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\categories-reducer\\categoriesReducer.js":"14","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\filteredProgress-reducer\\filteredProgressReducer.js":"15","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarDetail.js":"16","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\categories-reducer\\categoriesTypes.js":"17","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationList.js":"18","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\ApplicationDetail.js":"19","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationListComponents.js":"20","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationListProgress.js":"21","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\ModalBox.js":"22","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailComponents.js":"23","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\UserForm.js":"24","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\filteredProgress-reducer\\filteredProgressAction.js":"25","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\progress\\ProgressBar.js":"26","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailEvents.js":"27","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailChecklists.js":"28","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailNotes.js":"29","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailFollowUp.js":"30","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailContacts.js":"31","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\RoleLocationAdd.js":"32","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\Applied.js":"33","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\CompanyPositionAdd.js":"34","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\InterviewDate.js":"35","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NewTask.js":"36","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\page\\Page.js":"37","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\progress\\Progress.js":"38","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_note\\CreateEditNote.js":"39","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_checklist\\CreateEditChecklist.js":"40","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\CreateEditEvent.js":"41","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\CreateEditConversation.js":"42","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_contact\\CreateEditContact.js":"43","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\categories-reducer\\categoriesAction.js":"44","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NextStep.js":"45","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NewDate.js":"46","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\calendar\\CalendarComponent.js":"47","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\chip\\ChipAutocomplete.js":"48","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\radio\\RadioButtons.js":"49","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\EventDetail.js":"50","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\EventSelectDate.js":"51","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\ConversationDetail.js":"52","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\ConversationDate.js":"53","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\company-reducer\\companyReducer.js":"54","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\company-reducer\\companyAction.js":"55","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarWeekview.js":"56","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_companies\\CompanyMain.js":"57","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_companies\\company_list\\CompanyList.js":"58","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_companies\\company_detail\\CompanyDetail.js":"59","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_companies\\company_detail\\CompanyDetailComponents.js":"60"},{"size":571,"mtime":1610914124957,"results":"61","hashOfConfig":"62"},{"size":1433,"mtime":1612229058135,"results":"63","hashOfConfig":"62"},{"size":362,"mtime":499162500000,"results":"64","hashOfConfig":"62"},{"size":310,"mtime":1610913223395,"results":"65","hashOfConfig":"62"},{"size":2123,"mtime":1611985034743,"results":"66","hashOfConfig":"62"},{"size":2260,"mtime":1617610068889,"results":"67","hashOfConfig":"62"},{"size":1153,"mtime":1611992255478,"results":"68","hashOfConfig":"62"},{"size":669,"mtime":1612228958010,"results":"69","hashOfConfig":"62"},{"size":274,"mtime":1611985034745,"results":"70","hashOfConfig":"62"},{"size":1938,"mtime":1610913189755,"results":"71","hashOfConfig":"62"},{"size":2600,"mtime":1611985034744,"results":"72","hashOfConfig":"62"},{"size":3305,"mtime":1617354235416,"results":"73","hashOfConfig":"62"},{"size":6330,"mtime":1617343715359,"results":"74","hashOfConfig":"62"},{"size":672,"mtime":1611985047384,"results":"75","hashOfConfig":"62"},{"size":1549,"mtime":1610916045065,"results":"76","hashOfConfig":"62"},{"size":5683,"mtime":1614554905656,"results":"77","hashOfConfig":"62"},{"size":278,"mtime":1611985047385,"results":"78","hashOfConfig":"62"},{"size":2506,"mtime":1617354904455,"results":"79","hashOfConfig":"62"},{"size":3485,"mtime":1617615843265,"results":"80","hashOfConfig":"62"},{"size":6406,"mtime":1611698620251,"results":"81","hashOfConfig":"62"},{"size":5900,"mtime":1617355341367,"results":"82","hashOfConfig":"62"},{"size":1689,"mtime":1611987854231,"results":"83","hashOfConfig":"62"},{"size":15248,"mtime":1617615898152,"results":"84","hashOfConfig":"62"},{"size":3804,"mtime":1611987888635,"results":"85","hashOfConfig":"62"},{"size":439,"mtime":1610916045063,"results":"86","hashOfConfig":"62"},{"size":8237,"mtime":1611979568618,"results":"87","hashOfConfig":"62"},{"size":6666,"mtime":1617436108885,"results":"88","hashOfConfig":"62"},{"size":7928,"mtime":1612423211980,"results":"89","hashOfConfig":"62"},{"size":6401,"mtime":1611700211050,"results":"90","hashOfConfig":"62"},{"size":4257,"mtime":1612415805626,"results":"91","hashOfConfig":"62"},{"size":5407,"mtime":1611700422052,"results":"92","hashOfConfig":"62"},{"size":5972,"mtime":1611987870869,"results":"93","hashOfConfig":"62"},{"size":2367,"mtime":1611987514422,"results":"94","hashOfConfig":"62"},{"size":2308,"mtime":1611987908187,"results":"95","hashOfConfig":"62"},{"size":2097,"mtime":1611987921262,"results":"96","hashOfConfig":"62"},{"size":3165,"mtime":1610922551337,"results":"97","hashOfConfig":"62"},{"size":675,"mtime":1610922499997,"results":"98","hashOfConfig":"62"},{"size":6974,"mtime":1613598617001,"results":"99","hashOfConfig":"62"},{"size":11849,"mtime":1612415137557,"results":"100","hashOfConfig":"62"},{"size":13807,"mtime":1617440802345,"results":"101","hashOfConfig":"62"},{"size":11441,"mtime":1612414676737,"results":"102","hashOfConfig":"62"},{"size":10281,"mtime":1612416448414,"results":"103","hashOfConfig":"62"},{"size":11803,"mtime":1611721840240,"results":"104","hashOfConfig":"62"},{"size":115,"mtime":1611985047383,"results":"105","hashOfConfig":"62"},{"size":2213,"mtime":1610922554543,"results":"106","hashOfConfig":"62"},{"size":1282,"mtime":1610922540248,"results":"107","hashOfConfig":"62"},{"size":924,"mtime":1610921885137,"results":"108","hashOfConfig":"62"},{"size":9279,"mtime":1611984910752,"results":"109","hashOfConfig":"62"},{"size":2111,"mtime":1610921917745,"results":"110","hashOfConfig":"62"},{"size":6080,"mtime":1612415136431,"results":"111","hashOfConfig":"62"},{"size":12109,"mtime":1611719060306,"results":"112","hashOfConfig":"62"},{"size":6030,"mtime":1612415767815,"results":"113","hashOfConfig":"62"},{"size":1636,"mtime":1611436113153,"results":"114","hashOfConfig":"62"},{"size":1908,"mtime":1612228865902,"results":"115","hashOfConfig":"62"},{"size":1530,"mtime":1612229095987,"results":"116","hashOfConfig":"62"},{"size":3059,"mtime":1614563981375,"results":"117","hashOfConfig":"62"},{"size":2539,"mtime":1617611495356,"results":"118","hashOfConfig":"62"},{"size":4934,"mtime":1617615258587,"results":"119","hashOfConfig":"62"},{"size":3409,"mtime":1617615520057,"results":"120","hashOfConfig":"62"},{"size":15202,"mtime":1617615372869,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1a2el5v",{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"124"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"124"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\index.js",[],["272","273"],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\App.js",["274","275"],"import './App.css';\nimport MainPage from './sypp_main/MainPage'\nimport React, { Component } from 'react';\nimport {requestApplication} from './redux/application-reducer/applicationAction'\nimport {setSelectedCategories} from './redux/addApp-reducer/addAppAction'\nimport {requestCompany} from './redux/company-reducer/companyAction'\nimport {connect} from 'react-redux'\n\nconst mapStatetoProps = state => {\n  return{\n      apps: state.application.applications,\n      pending: state.application.isPending,\n      categories: state.categories.categories\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onRequestApplication: () => dispatch(requestApplication()),\n    setSelectedCategories: (categories) => dispatch(setSelectedCategories(categories)),\n    onRequestCompany: () => dispatch(requestCompany()),\n  }\n}\n\nclass App extends Component{\n  async componentDidMount(){\n    const apps = await this.props.onRequestApplication();\n    const companies = await this.props.onRequestCompany();\n    var newCategory = [];\n    for (var i=0;i<this.props.categories.length;i++){\n      newCategory = newCategory.concat({\n        Type : this.props.categories[i].name,\n        SuggestionsOrSeleceted : []\n      })\n    }\n    this.props.setSelectedCategories(newCategory)\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <MainPage/>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(App);\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\reportWebVitals.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\store.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\addApp-reducer\\addAppAction.js",["276"],"import AddAppTypes from './addAppTypes'\r\n\r\n\r\n//\r\n\r\nexport const setCompanyName = companyName => ({\r\n    type: 'SET_COMPANY_NAME',\r\n    payload: companyName\r\n});\r\n\r\nexport const setPositionName = positionName => ({\r\n    type: 'SET_POSITION_NAME',\r\n    payload: positionName\r\n});  \r\n\r\nexport const setSelectedCategories = (categories) => ({\r\n    type: 'SET_SELECTED_CATEGORIES',\r\n    payload: categories\r\n});  \r\n\r\nexport const setDates = (dates) => ({\r\n    type: 'SET_DATES',\r\n    payload: dates\r\n});  \r\n\r\nexport const setInterviewDate = (interviewDate) => ({\r\n    type: 'SET_INTERVIEW_DATE',\r\n    payload: interviewDate\r\n});  \r\n\r\n\r\n\r\n\r\nexport const postNewApp = (app) => (dispatch) =>{\r\n    dispatch({type: 'POST_NEWAPP_PENDING'});\r\n    // fetch('http://teamdevelopmentserver.azurewebsites.net/applications/create', {\r\n    fetch('http://localhost:3000/newapp', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        // applicationDetail: app.applicationDetail,\r\n        _id: null,\r\n        applicationID: null,\r\n        uID: null,\r\n        authID: null,\r\n        Tasks:[],\r\n        Detail:{\r\n            applicationID: null,\r\n            uID: null,\r\n            CompanyName: app.applicationDetail.companyName,\r\n            PositionName: app.applicationDetail.positionName,\r\n            IsFavorite: app.applicationDetail.pinned,\r\n            companyID: null,\r\n            positionID: null,\r\n            Status: [\r\n                {\r\n                    midTaskID: null,\r\n                    Time: app.dates[0].date,\r\n                    Title: \"Applied\",\r\n                    Status: app.dates[0].completed,\r\n                    IsFavorite : false,\r\n                    showDate: app.dates[0].showDate\r\n                }\r\n            ],\r\n            Categories: app.Categories\r\n        },       \r\n      })\r\n    })\r\n    .then(response => console.log(response.json()))\r\n    .then(() => dispatch({\r\n            type: 'POST_NEWAPP_SUCCESS',\r\n        })\r\n    )\r\n    .catch(error => dispatch({\r\n        type: 'POST_NEWAPP_FAILED',\r\n        payload: error\r\n    }))\r\n}\r\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_main\\MainPage.js",["277","278"],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\application-reducer\\applicationAction.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\root-reducer.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\addApp-reducer\\addAppTypes.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\application-reducer\\applicationReducer.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\addApp-reducer\\addAppReducer.js",["279"],"import addAppTypes from './addAppTypes'\r\n\r\nconst INITIAL_STATE = {\r\n    applicationDetail:{\r\n        companyName: '',\r\n        positionName: '',\r\n        pinned: false,\r\n        },\r\n        Categories : [\r\n            {\r\n            Type: 'Role',\r\n            SuggestionsOrSeleceted : [],\r\n            },\r\n            {\r\n            Type: 'Location',\r\n            SuggestionsOrSeleceted : [],\r\n            }\r\n        ],\r\n        archived: false, \r\n        dates :[\r\n            {key : 0, \r\n            date: new Date(), \r\n            showDate: true, \r\n            completed: true}\r\n        ],\r\n}\r\n\r\nconst addAppReducer  = (state = INITIAL_STATE, action) =>{\r\n    switch(action.type){\r\n        case 'SET_COMPANY_NAME':\r\n            return {\r\n                ...state,\r\n                applicationDetail:{\r\n                    companyName: action.payload,\r\n                    positionName: state.applicationDetail.positionName,\r\n                    pinned: state.applicationDetail.pinned,\r\n                }\r\n        };\r\n        case 'SET_POSITION_NAME':\r\n            return{\r\n                ...state,\r\n                applicationDetail:{\r\n                    companyName: state.applicationDetail.companyName,\r\n                    positionName: action.payload,\r\n                    pinned: state.applicationDetail.pinned,\r\n                }\r\n            };\r\n        case 'SET_SELECTED_CATEGORIES':\r\n            return{\r\n                ...state,\r\n                Categories: action.payload\r\n            };\r\n        case 'SET_DATES':\r\n            return{\r\n                ...state,\r\n                dates: action.payload\r\n            };\r\n        case 'SET_INTERVIEW_DATE':\r\n            return{\r\n                ...state,\r\n                interviewDate: action.payload\r\n            };\r\n\r\n        case 'POST_NEWAPP_PENDING':\r\n            return Object.assign({}, state, {isPending: true})\r\n\r\n        case 'POST_NEWAPP_SUCCESS':\r\n            return {\r\n                ...state,\r\n                applicationDetail:{\r\n                    companyName: '',\r\n                    positionName: '',\r\n                    pinned: false,\r\n                },\r\n                archived: false, \r\n                dates :[\r\n                    {key : 0, \r\n                    date: new Date(), \r\n                    showDate: true, \r\n                    completed: true}\r\n                ],\r\n            }\r\n        case 'POST_NEWAPP_FAILED':\r\n            return Object.assign({}, state, {error: action.payload, isPending: false})\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport default addAppReducer;","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\ApplicationsMain.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarMain.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\categories-reducer\\categoriesReducer.js",["280"],"import categoriesTypes from './categoriesTypes'\r\n\r\nconst INITIAL_STATE = {\r\n    categories : [\r\n        {\r\n        index: 0,\r\n        name: 'Role',\r\n        suggestions : [],\r\n        accordion: false,\r\n        },\r\n        {\r\n        index: 1,\r\n        name: 'Location',\r\n        suggestions : [],\r\n        accordion: false,\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nconst categoriesReducer  = (state = INITIAL_STATE, action) =>{\r\n    switch(action.type){\r\n        case 'SET_CATEGORIES':\r\n            return{\r\n                ...state,\r\n                categories: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport default categoriesReducer;","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\filteredProgress-reducer\\filteredProgressReducer.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarDetail.js",["281","282","283","284","285","286","287","288","289"],"import React, { Component } from \"react\";\r\n\r\nimport {setApps} from './../redux/application-reducer/applicationAction'\r\n\r\nimport './../sypp_applications/application_list/progress/ProgressBar.scss'\r\nimport './CalendarMain.scss'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Rating from 'react-rating';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n    }\r\n  }\r\n  const mapDispatchToProps = dispatch => {\r\n    return{\r\n        setApps: (applications) => dispatch(setApps(applications))\r\n    }\r\n}\r\n\r\nclass CalendarDetail extends Component {\r\n\r\n    onClickIsFavorite = (task) =>{\r\n        var apps = this.props.apps\r\n        if(task.type === 'application'){\r\n            for(var i=0; i<this.props.apps.length; i++){\r\n                if(apps[i].applicationID === task.id){\r\n                    for(var j=0;j<apps[i].tasks.length;j++){\r\n                        if(apps[i].tasks[j].midTaskID === task.Task.midTaskID){\r\n                            apps[i].tasks[j].isFavorite = !apps[i].tasks[j].isFavorite\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // for(var i =0;i<this.props.taskArray.length;i++){\r\n            if(this.props.favoriteType == \"\" && task.Task.isFavorite &&task.Task.status){\r\n                this.props.onChangefavoriteType(\"sypp-calendar-favorite-completed\")\r\n              }\r\n              else if((this.props.favoriteType == \"\"||this.props.favoriteType == \"sypp-calendar-favorite-completed\")&&task.Task.isFavorite&& !task.Task.status){\r\n                this.props.onChangefavoriteType(\"sypp-calendar-favorite-notCompleted\")\r\n              }\r\n              if(!task.Task.isFavorite){\r\n                this.props.onChangefavoriteType(\"\")\r\n              }\r\n        // }\r\n        this.props.setApps(apps)    \r\n        this.setState({})    \r\n    }\r\n\r\n    renderCalendarComponent = () =>{\r\n\r\n        if(this.props.taskArray.length !== 0){\r\n            for(var i=0;i<this.props.taskArray.length; i++){\r\n                var taskDate = new Date(this.props.taskArray[i].Task.time)\r\n                var currDate = new Date(this.props.date)\r\n                if(taskDate.getDate() === currDate.getDate() && taskDate.getMonth()+1 === currDate.getMonth()+1 && taskDate.getFullYear()===currDate.getFullYear()){\r\n                    if(this.props.favoriteType == \"\"&&this.props.taskArray[i].isFavorite && this.props.taskArray[i].Task.status){\r\n                        this.props.onChangefavoriteType(\"sypp-calendar-favorite-completed\")\r\n                        this.setState({favoriteType : \"sypp-calendar-favorite-completed\"})\r\n                      }\r\n                      else if((this.props.favoriteType == \"\"||this.props.favoriteType == \"sypp-calendar-favorite-completed\")&&this.props.taskArray[i].isFavorite&& !this.props.taskArray[i].Task.status){\r\n                        this.props.onChangefavoriteType(\"sypp-calendar-favorite-notCompleted\")\r\n                      }\r\n                    return(\r\n                        <div className = \"sypp-calendar-detail-container\">\r\n                            <div className = \"sypp-calendar-progress-container\">\r\n                                {this.props.taskArray[i].Task.status?\r\n                                <div className = \"sypp-applicationFirst sypp-completed\"></div>:\r\n                                <div className=\"sypp-applicationFirst sypp-notCompleted\"></div>\r\n                                }\r\n                                <Rating className =\"sypp-starIcon sypp-calendar-star\" applicationName = {this.props.taskArray[i].id} stop={1} initialRating = {this.props.taskArray[i].Task.isFavorite?1:0} \r\n                                onClick = {() => this.onClickIsFavorite(this.props.taskArray[i])}\r\n                                emptySymbol=\"fa fa-star-o starSize starIcon\"\r\n                                fullSymbol = \"fa fa-star starSize starIcon\"\r\n                                />\r\n                            </div>\r\n                            <div className = \"sypp-calendar-title-container\">\r\n                                {this.props.taskArray[i].CompanyName !==''?\r\n                                    <div className = \"sypp-calendarDetail-title\">{this.props.taskArray[i].CompanyName}</div>:undefined\r\n                                }\r\n                                {this.props.taskArray[i].PositionName !== ''?\r\n                                    <div className = \"sypp-calendarDetail-subTitle\">{this.props.taskArray[i].PositionName}</div>:undefined\r\n                                }\r\n                                {this.props.taskArray[i].Task.title !== ''?\r\n                                    <div className = \"sypp-calendarDetail-task-title\">{this.props.taskArray[i].Task.title}</div>:undefined\r\n                                }                                \r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {/* <span\r\n                className={\"sypp-day\" + (this.props.isToday ? \" today\" : \"\") + (this.props.isCurrentMonth ? \"\" : \" sypp-different-month\") } \r\n               >\r\n                    {this.props.number}\r\n                </span> */}\r\n                {this.renderCalendarComponent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CalendarDetail)\r\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\categories-reducer\\categoriesTypes.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationList.js",["290","291","292"],"import React, {Component} from 'react';\r\n\r\nimport {setApps} from './../../redux/application-reducer/applicationAction'\r\nimport {connect} from 'react-redux'\r\nimport ApplicationListComponents from './ApplicationListComponents'\r\nimport ApplicationListProgress from './ApplicationListProgress'\r\nimport ModalBox from './../application_add_application/ModalBox'\r\nimport './../application_add_application/Modalbox.css'\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n    }\r\n  }\r\n  const mapDispatchToProps = dispatch => {\r\n    return{\r\n        setApps: () => dispatch(setApps()),\r\n    }\r\n}\r\n\r\nclass ApplicationList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            applicationID : ''\r\n        }\r\n    }\r\n\r\n    onChange = (value) => {\r\n        console.log(value)\r\n        var boolean = true;\r\n        if (value == 1) {\r\n            boolean = true;\r\n        }\r\n        else{\r\n            boolean = false;\r\n        }   \r\n    }\r\n    //yields the info about application detail to application detail section\r\n\r\n    render(){\r\n        const radioValue =    \r\n        [ \r\n        { name: 'All', value: '0' },\r\n        { name: 'Starred', value: '1' },\r\n        ]\r\n        const categoryDivided = () =>{\r\n            var temp = []\r\n            for(var i=0; i<this.props.apps.length; i++){\r\n                for(var j=0; j<this.props.apps[i].detail.categories.length;j++){\r\n                    if(!temp.includes(this.props.apps[i].detail.categories[j].type) && this.props.apps[i].detail.categories[j].suggestionsOrSeleceted.length>0){\r\n                            temp = temp.concat(this.props.apps[i].detail.categories[j].type)}\r\n                    }\r\n            }\r\n            for(var i=0;i<temp.length;i++){\r\n                radioValue.push({\r\n                    name : temp[i],\r\n                    value: i+2+\"\"\r\n                })\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div style = {{height : '100%'}}>\r\n                {categoryDivided()}\r\n                <ApplicationListComponents options = {radioValue} onChange = {this.onChange}/>\r\n                <ApplicationListProgress onClickProgressAll = {this.props.onClickProgressAll} extended = {this.props.extended}/>\r\n                <div className = 'sypp-modalButton'>\r\n                    <ModalBox/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationList)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\ApplicationDetail.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationListComponents.js",["293","294","295"],"import React, { Component, useState } from 'react';\r\n\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\nimport ReactTooltip from \"react-tooltip\";\r\n// import './../components/radio/RadioButtons.css';\r\nimport './../../sypp_main/radio/RadioButtons.scss'\r\n\r\nimport './CategoryButtons.scss';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {updateFilteredProgress, updateFilteredProgressTitle, updateFilteredProgressButtonValue} from './../../redux/filteredProgress-reducer/filteredProgressAction'\r\n\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      apps: state.application.applications,\r\n      filteredProgress: state.filteredProgress\r\n  }\r\n}\r\nconst mapDispatchToProps= dispatch =>{\r\n  return {\r\n    updateFilteredProgress: (applications) => dispatch(updateFilteredProgress(applications)),\r\n    updateFilteredProgressTitle: (title) => dispatch(updateFilteredProgressTitle(title)),\r\n    updateButtonValue: (value) => dispatch(updateFilteredProgressButtonValue(value))\r\n  }\r\n}\r\n\r\nfunction CategoryButtons(props) {\r\n\r\n    const [radioValue, setRadioValue] = useState(props.filteredProgress.selectedButtonValue);\r\n    const radios = props.options;\r\n    const [targetName, setTargetName] = useState('');\r\n    const [targetValue, setTargetValue] = useState('0')\r\n    const [toolTip, setToolTip] = useState(false);\r\n\r\n    const [targetTitle, setTargetTitle] = useState(props.filteredProgress.selectedTitle)   \r\n\r\n    const radioChange = (e) => {\r\n        if(e.currentTarget.value==='0'||e.currentTarget.value==='1'){\r\n            e.preventDefault();\r\n            var name = ''\r\n            for(var i=0;i<radios.length;i++){\r\n                if(radios[i].value ===  e.currentTarget.value)\r\n                name = radios[i].name\r\n            }\r\n            props.onChange(name);\r\n\r\n            // setRadioValue(e.currentTarget.value)\r\n\r\n            var filtered = [] \r\n            if(e.currentTarget.value === '0'){\r\n                filtered = props.apps\r\n                props.updateFilteredProgressTitle(\"All\")\r\n                setRadioValue('0')\r\n                props.updateButtonValue('0')\r\n            }\r\n            //isFavorite = true인 case들\r\n            else if(e.currentTarget.value === '1'){\r\n                setRadioValue('1')\r\n                props.updateButtonValue('1')\r\n                props.updateFilteredProgressTitle(\"Starred\")\r\n                for(var i=0;i<props.apps.length;i++){\r\n                if(props.apps[i].detail.isFavorite) \r\n                    filtered = filtered.concat(props.apps[i])\r\n                }\r\n            }\r\n\r\n            props.updateFilteredProgress(filtered)\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) =>{\r\n      setTargetName(e.target.getAttribute('name'))\r\n      setTargetValue(e.target.getAttribute('value'))\r\n      if(e.target.getAttribute('name')!=='All'&&e.target.getAttribute('name')!=='Starred'){\r\n        setToolTip(false)\r\n      }\r\n      else{\r\n        setToolTip(true)\r\n      }\r\n    }\r\n\r\n    const categoryDivided = () =>{\r\n      var temp = []\r\n      for(var i=0; i<props.apps.length; i++){\r\n          for(var j=0; j<props.apps[i].detail.categories.length;j++){\r\n              if(props.apps[i].detail.categories[j].type === targetName){\r\n                for(var k=0; k<props.apps[i].detail.categories[j].suggestionsOrSeleceted.length;k++){\r\n                  if(!temp.includes(props.apps[i].detail.categories[j].suggestionsOrSeleceted[k])){\r\n                    temp = temp.concat(props.apps[i].detail.categories[j].suggestionsOrSeleceted[k])\r\n                  }\r\n                }    \r\n              }\r\n          }\r\n      }\r\n\r\n    return(\r\n      <div className = \"sypp-tooltip-container\">\r\n      { \r\n        temp.map((entity) => (\r\n        <button className = \"sypp-subCategory-button\" name = {entity} onClick ={e => onClickButton(e)}>{entity}</button>\r\n        ))\r\n      }\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n    const onClickButton = (e) =>{\r\n      setRadioValue(targetValue)\r\n      props.updateButtonValue(targetValue)\r\n      props.updateFilteredProgressTitle(e.target.getAttribute('name'))\r\n      setTargetTitle(e.target.getAttribute('name'))\r\n      filterProgress(e)\r\n    }\r\n\r\n    const filterProgress = (e) =>{\r\n      var filtered = [] \r\n      for(var i=0; i<props.apps.length ;i++){\r\n        //save i as an index\r\n        for(var j=0;j<props.apps[i].detail.categories.length;j++){\r\n          if(props.apps[i].detail.categories[j].type === targetName){\r\n            for(var k=0; k<props.apps[i].detail.categories[j].suggestionsOrSeleceted.length;k++){\r\n              if(e.target.getAttribute('name') === props.apps[i].detail.categories[j].suggestionsOrSeleceted[k]){\r\n                filtered = filtered.concat(props.apps[i])\r\n              }\r\n            }\r\n          }\r\n       }\r\n    }\r\n      props.updateFilteredProgress(filtered)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <ButtonGroup toggle className = \"sypp-applicationList-radio-container\">\r\n          {radios.map((radio, idx) => (\r\n                <ToggleButton\r\n                className={\"sypp-colorChange2 sypp-activeChange sypp-hoverChange sypp-text1\"}\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => radioChange(e, radioValue)}\r\n                data-for=\"radioTip\"\r\n                data-tip = ''\r\n                onMouseEnter = {e => handleChange(e)}\r\n                >\r\n                  <div className = \"sypp-category-radio-padding\" name = {radio.name} value = {radio.value}>\r\n                    {radio.name}\r\n                  </div>\r\n                </ToggleButton>\r\n\r\n          ))}\r\n          <ReactTooltip\r\n                  id={(radioValue !== 0&&radioValue.value !== 1)?\"radioTip\":\"\"}\r\n                  className = \"sypp-CategoryBox sypp-colorFix sypp-colorFixBottom sypp-colorFixBottomBefore sypp-colorFixBottomAfter\"\r\n                  effect='solid'\r\n                  delayHide={20}\r\n                  place={'bottom'}\r\n                  disable={toolTip}\r\n                  >\r\n                    {categoryDivided()}\r\n                </ReactTooltip>\r\n        </ButtonGroup>\r\n        </div>\r\n    );\r\n  }\r\n  export default connect(mapStatetoProps, mapDispatchToProps)(CategoryButtons);\r\n\r\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationListProgress.js",["296","297","298"],"import React, { Component } from 'react';\r\nimport ProgressBar from './progress/ProgressBar'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './progress/Progress.css'\r\nimport './progress/ProgressBar.scss'\r\n\r\nimport './ApplicationList.scss'\r\n// import Rating from \"@material-ui/lab/Rating\";\r\n import Rating from 'react-rating';\r\nimport {setApps} from './../../redux/application-reducer/applicationAction'\r\nimport {connect} from 'react-redux'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        filteredProgress: state.filteredProgress.applications,\r\n        selectedTitle: state.filteredProgress.selectedTitle\r\n    }\r\n}\r\nconst mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps: (applications) => dispatch(setApps(applications)),\r\n    }\r\n}\r\n\r\n\r\nexport class Progress extends Component{\r\n    constructor(){\r\n        super();\r\n        this.handleMouseHover = this.handleMouseHover.bind(this);\r\n\r\n        this.state =  {\r\n            searchField:'',\r\n            isHovering : false,\r\n        }\r\n    }\r\n    handleMouseHover(){\r\n        this.setState(this.toggleHoverState);\r\n    }\r\n    toggleHoverState(state) {\r\n        return{\r\n            isHovering: !state.isHovering,\r\n        };\r\n    }\r\n    //UID, APP ID, TASK use post call\r\n    //return task with id\r\n    onClickIsFavorite = (applicationID) =>{\r\n        var apps = this.props.apps\r\n\r\n        for(var i=0; i<apps.length;i++){\r\n            if(apps[i].applicationID+\"\" === applicationID+\"\"){\r\n                apps[i].detail.isFavorite = !apps[i].detail.isFavorite\r\n                break;\r\n            }\r\n        }\r\n        this.props.setApps(apps)\r\n        this.setState({})\r\n    }\r\n    //mid task add, need to make fetch call\r\n    onClickAdd = (applicationID, title, date, isVisible) => {\r\n        const apps = this.props.apps\r\n        apps.map((data) => {\r\n            if(data.applicationID === applicationID){\r\n                data.tasks = data.tasks.concat({\r\n                    time: date,\r\n                    title: title,\r\n                    isVisible : isVisible,\r\n                    status: false\r\n                })\r\n            }\r\n        })\r\n        this.props.setApps(apps)\r\n        this.setState({})\r\n    }\r\n\r\n    onSearchChange = (e) =>{\r\n        this.setState({\r\n            searchField: e.target.value\r\n        })\r\n        console.log(this.state.searchField)\r\n    }\r\n    onClickDelete = () =>{\r\n        console.log(\"trigger Trash Can\")\r\n    }\r\n\r\n    render(){\r\n        const searchFilteredProgress = this.props.filteredProgress.filter(application => {\r\n            return (application.detail.companyName.toLowerCase().includes(this.state.searchField.toLowerCase())||application.detail.positionName.toLowerCase().includes(this.state.searchField.toLowerCase()) )\r\n        })\r\n\r\n        return(\r\n            <div  style = {{height : '100%'}}>\r\n            <div className =\"sypp-searchBox-container\">\r\n            <input \r\n            className =\"sypp-applicationlist-searchBox\"\r\n            type='search' \r\n            placeholder = '  Search application'\r\n            onChange = {e => this.onSearchChange(e)}\r\n            value = {this.state.searchField}\r\n            />\r\n            </div>\r\n            {this.props.selectedTitle !== \"\"? <div className =\"sypp-selectedTitle\">{this.props.selectedTitle}</div>:undefined}\r\n            <div className = \"sypp-task-sortby\">Testing</div>\r\n            <div className = \"sypp-taskTitles\">\r\n                <div className=\"sypp-taskEntity\">Apply</div>\r\n                <div className=\"sypp-taskEntity\">Task</div>\r\n                <div className=\"sypp-taskEntity\">Result</div>\r\n            </div>\r\n                <div className = \"sypp-applicationList-container\" style={this.props.extended?{overflowY: 'scroll', height: '80%'}:{overflowY: 'scroll', height: '75%'}}>\r\n                {\r\n                (searchFilteredProgress.length > 0)?\r\n                searchFilteredProgress.map((data) => (\r\n                        <div className = \"sypp-progress-all sypp-trashIcon-Hover\">\r\n                            <div className = \"sypp-starContainer\">\r\n                            <Rating className =\"sypp-starIcon\" applicationName = {data.applicationID} stop={1} initialRating = {data.detail.isFavorite?1:0} onClick = {() => this.onClickIsFavorite(data.applicationID)}\r\n                            emptySymbol=\"fa fa-star-o starSize starIcon\"\r\n                            fullSymbol = \"fa fa-star starSize starIcon\"\r\n                                />\r\n                            </div>\r\n                                <div className = \"sypp-application-name\" onClick = {() => this.props.onClickProgressAll(data.applicationID)}>\r\n                                <div className = \"sypp-appilication-name-container\" >\r\n                                    <div className = \"sypp-progress-company\"  >{data.detail.companyName}</div>\r\n                                    <FontAwesomeIcon className = \"sypp-trashIcon sypp-trashIcon-Hover\" icon={faTrashAlt} onClick = {this.onClickDelete}/>\r\n                                </div>\r\n                                <div className = \"sypp-progress-position\" >{data.detail.positionName}</div>\r\n                                </div>\r\n                            <ProgressBar applicationID = {data.applicationID} applied = {data.applied} dates = {data.tasks} details = {data.detail.status[0]} onClickAdd = {this.onClickAdd}/>\r\n                        </div>\r\n                        )):undefined\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchToProps)(Progress);","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\ModalBox.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailComponents.js",["299"],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\UserForm.js",["300","301","302"],"import React, {Component} from 'react';\r\nimport RoleLocationAdd from './RoleLocationAdd';\r\nimport Applied from './Applied';\r\nimport CompanyPositionAdd from './CompanyPositionAdd';\r\nimport InterviewDate from './InterviewDate';\r\nimport Page from './../../components/page/Page'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {postNewApp, setSelectedCategories} from './../../redux/addApp-reducer/addAppAction'\r\nimport {requestApplication} from './../../redux/application-reducer/applicationAction'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        addApp: state.addApp,\r\n        categories: state.categories.categories\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps= dispatch =>{\r\n    return {\r\n        onRequestApplication: () => dispatch(requestApplication()),        \r\n        postNewApp: (app) => dispatch(postNewApp(app)),\r\n        setSelectedCategories: (categories) => dispatch(setSelectedCategories(categories))\r\n    }\r\n}\r\n\r\n\r\nexport class UserForm extends Component {\r\n    state = {\r\n        step: 1,\r\n    }\r\n\r\n    //Send Post request, close modal(save button)\r\n    onSaveButton = async() => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n        console.log(\"Triggered\")\r\n        const app = await this.props.postNewApp(this.props.addApp)\r\n        console.log(\"Triggered\")\r\n        const app2 = setTimeout(()=> this.props.onRequestApplication(), 500) \r\n        var newCategory = this.props.addApp.Categories;\r\n        for (var i=0;i<this.props.addApp.Categories.length;i++){\r\n        console.log(this.props.categories[i])\r\n        newCategory[i].SuggestionsOrSeleceted = []\r\n        }\r\n        this.props.setSelectedCategories(newCategory)\r\n        this.props.handleClose()\r\n    }\r\n\r\n\r\n\r\n\r\n    nextStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n\r\n    \r\n    render(){\r\n        const{step} = this.state;\r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <div>\r\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\r\n                        <CompanyPositionAdd \r\n                            nextStep = {this.nextStep}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div>\r\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\r\n                        <RoleLocationAdd\r\n                        nextStep = {this.nextStep}\r\n                        prevStep = {this.prevStep}\r\n                        />\r\n                    </div>\r\n                )\r\n            case 3:\r\n                return (\r\n                    <div>\r\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\r\n                        <Applied\r\n                        nextStep = {this.nextStep}\r\n                        prevStep = {this.prevStep}\r\n                        />\r\n                    </div>\r\n                )\r\n                //can use save button here. Send info from this save?\r\n            case 4:\r\n                return (\r\n                    <div>\r\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\r\n                        <InterviewDate \r\n                        />\r\n                        <div className=\"sypp-next-button-container\">\r\n                            <button className = \"sypp-button-next\" onClick={this.onSaveButton}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchToProps)(UserForm)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\filteredProgress-reducer\\filteredProgressAction.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\progress\\ProgressBar.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailEvents.js",["303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState, convertFromRaw, contentBlocks} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './ApplicationDetailNotes.scss'\r\nimport './../ApplicationDetail.scss'\r\nimport './ApplicationDetailEvents.scss'\r\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Moment from 'moment';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport CreateEditEvent from './../../../components/create_edit_components/create_edit_event/CreateEditEvent'\r\n// import CreateEditEvent from './../create_edit_applications_components/create_edit_event/CreateEditEvent'\r\n\r\nimport {getDefaultKeyBinding, KeyBindingUtil, getSelection, getCurrentContent, editorState, changeDepth, keyBindingFn} from 'draft-js';\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        // pending: state.progress.isPending,\r\n        // categories: state.categories.categories, \r\n        // applicationDetail : state.applicationDetail.application\r\n    }\r\n  }\r\nconst {hasCommandModifier} = KeyBindingUtil;\r\n  \r\n\r\nclass ApplicationDetailEvents extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const contentBlocksArray = []\r\n        for (var i=0;i<this.props.Event.contents.length;i++){\r\n            if(this.props.Event.contents.length !== 0){\r\n                contentBlocksArray.push(\r\n                    new ContentBlock({\r\n                        key: this.props.Event.contents[i].noteContentsID,\r\n                        type: 'unordered-list-item',\r\n                        depth: 0,\r\n                        text: this.props.Event.contents[i].header\r\n                      })\r\n                )\r\n                for(var j=0;j<this.props.Event.contents[i].contents_Text.length;j++){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: genKey(),\r\n                            type: 'unordered-list-item',\r\n                            depth: 1,\r\n                            text: this.props.Event.contents[i].contents_Text[j]\r\n                          })\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        this.state = {\r\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\r\n          show : false\r\n        };\r\n      }\r\n      currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n      currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n      myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n              }\r\n            }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({ editorState});\r\n      }\r\n    }\r\n \r\n\r\n    handleClose = () => {\r\n      this.setState({\r\n        show:false\r\n      })\r\n    }\r\n    handleOpen = (e) =>{\r\n      e.preventDefault()\r\n      this.setState({\r\n        show:true\r\n      })\r\n    }\r\n  \r\n      render() {\r\n        return (\r\n          <div className=\"sypp-ApplicationDetailNote-container sypp-EventContainer\">\r\n            <div className = \"sypp-EventDetailContainer\"  onClick={e => this.handleOpen(e)}>\r\n            {/* <div className=\"ApplicationDetailNote-title-container\"> */}\r\n              <div className = \"sypp-applicationDetailTextTitle\">{this.props.Event.detail.title}</div>\r\n              <div className = \"sypp-EventDateTime\">{Moment(this.props.Event.detail.time).format('MMM DD, YYYY - h:mma')}</div>\r\n              <div className = \"sypp-EventDateTime\">{this.props.Event.detail.location}</div>\r\n            {/* </div> */}\r\n            {/* <Editor \r\n              toolbarHidden\r\n              editorClassName=\"sypp-editor-class\"\r\n              editorState={this.state.editorState}\r\n              onEditorStateChange={this._handleChange}\r\n              keyBindingFn={this.myKeyBindingFn}\r\n            /> */}\r\n            {\r\n              this.props.Event.contents.map((data) => (\r\n                <div>\r\n                <div className = \"sypp-note-text-header\">{' • ' +data.header}</div>\r\n                {\r\n                  data.contents_Text.length != 0 ?  \r\n                    data.contents_Text.map((subText)=>(\r\n                      <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\r\n                    ))\r\n                  : undefined\r\n                }\r\n                </div>\r\n              ))\r\n\r\n            }\r\n            </div>\r\n\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditEvent onSaveEventNote = {this.props.onSaveEventNote} _handleChange = {this._handleChange}  Event = {this.props.Event} handleClose = {this.handleClose} editorState = {this.state.editorState} applicationID = {this.props.applicationID} type ={this.props.type} companyID = {this.props.companyID}/>\r\n                </div>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default connect(mapStatetoProps, null)(ApplicationDetailEvents)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailChecklists.js",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CharacterMetadata, RichUtils, ContentBlock, genKey, ContentState, EditorState, convertFromRaw, contentBlocks} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './ApplicationDetailNotes.scss'\r\nimport './../ApplicationDetail.scss'\r\nimport './ApplicationDetailChecklists.scss'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { faListAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSquare, faCheckSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n// import { Checkbox } from 'semantic-ui-react'\r\nimport CreateEditChecklist from './../../../components/create_edit_components/create_edit_checklist/CreateEditChecklist'\r\n// import CreateEditChecklist from './../create_edit_applications_components/create_edit_checklist/CreateEditChecklist'\r\n\r\nimport {getDefaultKeyBinding, KeyBindingUtil, getSelection, getCurrentContent, editorState, changeDepth, keyBindingFn} from 'draft-js';\r\nimport {connect} from 'react-redux'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {setCompany} from './../../../redux/company-reducer/companyAction'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n\r\n\r\n  const {hasCommandModifier} = KeyBindingUtil;\r\n  const mapStatetoProps = state => {\r\n    return{\r\n        companies: state.companies.companies,\r\n        apps: state.application.applications,\r\n        // pending: state.progress.isPending,\r\n        // categories: state.categories.categories, \r\n        // applicationDetail : state.applicationDetail.application\r\n    }\r\n  }\r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        setCompany : (companies) => dispatch(setCompany(companies)),\r\n    }\r\n  }\r\n\r\nclass ApplicationDetailChecklists extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          editorState: '',\r\n          checkboxState : '',\r\n          show : false\r\n        };\r\n      }\r\n\r\n    //API calls here, need to save the checkbox status to the application\r\n    // onCheckBoxClick = (checkboxID) => {\r\n    //     var tempCheckbox = this.state.checkboxState\r\n    //     for(var i=0;i<this.state.checkboxState.length;i++){\r\n    //         if(checkboxID === this.state.checkboxState[i].checklistID){\r\n    //             tempCheckbox[i].checkboxBoolean = !tempCheckbox[i].checkboxBoolean\r\n    //         }\r\n    //         this.setState({\r\n    //             checkboxState : tempCheckbox \r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    onCheckBoxClick = (checkboxArray, checklistID) =>{\r\n      if(this.props.type === 'application'){\r\n        var apps = this.props.apps\r\n        for(var i=0;i<this.props.apps.length;i++){\r\n          if(this.props.apps[i].applicationID === this.props.applicationID){\r\n            for(var j=0;j<this.props.apps[i].checklists.length;j++){\r\n              if(this.props.apps[i].checklists[j].checklistID === this.props.Checklist.checklistID){\r\n                for(var k=0;k<this.props.apps[i].checklists[j].files.length;k++){\r\n                  if(checkboxArray[k].checklistID === checklistID){\r\n                    apps[i].checklists[j].files[k].isChecked = !apps[i].checklists[j].files[k].isChecked\r\n                  }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.props.setApps(apps)\r\n      }\r\n      if(this.props.type === 'company'){\r\n        var companies = this.props.companies\r\n        for(var i=0;i<this.props.companies.length;i++){\r\n          if(this.props.companies[i].companyID === this.props.companyID){\r\n            for(var j=0;j<this.props.companies[i].checklists.length;j++){\r\n              if(this.props.companies[i].checklists[j].checklistID === this.props.Checklist.checklistID){\r\n                for(var k=0;k<this.props.companies[i].checklists[j].files.length;k++){\r\n                  if(checkboxArray[k].checklistID === checklistID){\r\n                  companies[i].checklists[j].files[k].isChecked = !companies[i].checklists[j].files[k].isChecked\r\n                  }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.props.setCompany(companies)\r\n    }\r\n    this.setState({})\r\n  }\r\n    _handleChange = (editorState) =>{\r\n      this.setState({\r\n        editorState: editorState\r\n      })\r\n    }\r\n    handleClose = () => {\r\n      this.setState({\r\n        show:false\r\n      })\r\n    }\r\n    handleOpen = (e) =>{\r\n      e.preventDefault()\r\n      this.setState({\r\n          show:true\r\n      })\r\n    }\r\n\r\n    handleCheckbox = (checkboxState) =>{\r\n      this.setState({\r\n        checkboxState : checkboxState\r\n      })\r\n    }\r\n\r\n    checkboxDisplay = () =>{\r\n      var checkboxArray =[]\r\n      for (var i=0;i<this.props.Checklist.files.length;i++){\r\n        var checklistID = genKey();\r\n          checkboxArray.push({\r\n            checklistID : checklistID,\r\n            checkboxBoolean: this.props.Checklist.files[i].isChecked\r\n        })\r\n      }\r\n      return(\r\n        <div>\r\n        {\r\n          checkboxArray.map((checkbox) => (\r\n            <div className = \"sypp-checkbox-container\">\r\n            <FormControlLabel \r\n              className = \"sypp-FormRoot\"\r\n              control = {\r\n              <Checkbox \r\n              icon=  {<FontAwesomeIcon className = \"sypp-CheckBox-icon\" icon={faSquare}/> }\r\n              checkedIcon= {<FontAwesomeIcon className = \"sypp-CheckBox-icon sypp-checked\" icon={faCheckSquare}/> }\r\n              className = \"sypp-Checkbox-padding sypp-Checkbox-padding2\"\r\n              checked = {checkbox.checkboxBoolean} \r\n              onChange = {() => this.onCheckBoxClick(checkboxArray, checkbox.checklistID)}/>}\r\n              />\r\n            </div> \r\n          ))\r\n        }\r\n        </div>\r\n      )\r\n    }\r\n     \r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"sypp-ApplicationDetailNote-container\">\r\n            <div className=\"sypp-ApplicationDetailNote-title-container\">\r\n            <div className = \"sypp-applicationDetailTextTitle\">{this.props.Checklist.type}</div>\r\n            </div>\r\n            <div className = \"sypp-ApplicationDetailChecklists-container\">\r\n            <div className = \"sypp-CheckList-Container\">\r\n              {\r\n                  this.checkboxDisplay()\r\n              }\r\n            </div>\r\n            <div className = \"sypp-Editor-Container\" onClick = {this.handleOpen}>\r\n            {\r\n              this.props.Checklist.files.map((data) => (\r\n                <div className = \"sypp-checklist-body\">{data.title}</div>\r\n              ))\r\n            }\r\n            </div>\r\n            </div>\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditChecklist onSaveChecklist = {this.props.onSaveChecklist} _handleChange = {this._handleChange} handleCheckbox = {this.handleCheckbox} Checklist = {this.props.Checklist} handleClose = {this.handleClose} type ={this.props.type} companyID = {this.props.companyID} applicationID = {this.props.applicationID}\r\n                    checkboxState = {this.state.checkboxState} editorState = {this.state.editorState}/>\r\n                </div>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationDetailChecklists)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailNotes.js",["338","339","340","341","342","343","344","345","346"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './ApplicationDetailNotes.scss'\r\nimport './../ApplicationDetail.scss'\r\n\r\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\nimport {connect} from 'react-redux'\r\n// import { setCompany } from '../redux/company-reducer/companyAction';\r\nimport Modal from 'react-bootstrap/Modal';\r\n// import CreateEditNote from './../create_edit_applications_components/create_edit_note/CreateEditNote'\r\nimport CreateEditNote from './../../../components/create_edit_components/create_edit_note/CreateEditNote'\r\n\r\nconst {hasCommandModifier} = KeyBindingUtil;\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      apps: state.application.applications,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps= dispatch =>{\r\n  return {\r\n      setApps: (applications) => dispatch(setApps(applications)),\r\n      // setCompany : (companies) => dispatch(setCompany(companies))\r\n  }\r\n}\r\n\r\n\r\nclass ApplicationDetailNotes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const contentBlocksArray = []\r\n        for (var i=0;i<this.props.Note.contents.length;i++){\r\n            if(this.props.Note.contents.length !== 0){\r\n                contentBlocksArray.push(\r\n                    new ContentBlock({\r\n                        key: this.props.Note.contents[i].noteContentsID,\r\n                        type: 'unordered-list-item',\r\n                        depth: 0,\r\n                        text: this.props.Note.contents[i].header\r\n                      })\r\n                )\r\n                for(var j=0;j<this.props.Note.contents[i].contents_Text.length;j++){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: genKey(),\r\n                            type: 'unordered-list-item',\r\n                            depth: 1,\r\n                            text: this.props.Note.contents[i].contents_Text[j]\r\n                          })\r\n                    )\r\n                }\r\n            }\r\n        }\r\n          this.state = {\r\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\r\n          show : false\r\n\r\n        };\r\n      }\r\n      currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n      currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n      myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({ editorState});\r\n      }\r\n    }\r\n\r\n    handleClose = () => {\r\n      this.setState({\r\n        show:false\r\n      })\r\n    }\r\n    handleOpen = (e) =>{\r\n      e.preventDefault()\r\n      this.setState({\r\n        show:true\r\n      })\r\n    }\r\n     \r\n    \r\n      render() {\r\n        return (\r\n          <div className= \"sypp-ApplicationDetailNote-container\">\r\n            <div className=\"sypp-ApplicationDetailNote-title-container\" onClick = {this.handleOpen}>\r\n            <div className = \"sypp-ApplicationDetailNote-title\">\r\n            <div className = \"sypp-applicationDetailTextTitle\">{this.props.Note.detail.title}</div>\r\n            </div>\r\n            <div>\r\n            {\r\n              this.props.Note.contents.map((data) => (\r\n                <div>\r\n                <div className = \"sypp-note-text-header\">{' • ' +data.header}</div>\r\n                {\r\n                  data.contents_Text.length != 0 ?  \r\n                    data.contents_Text.map((subText)=>(\r\n                      <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\r\n                    ))\r\n                  : undefined\r\n                }\r\n                </div>\r\n              ))\r\n            }\r\n            {/* <Editor \r\n              toolbarHidden\r\n              editorClassName=\"sypp-editor-class\"\r\n              editorState={this.state.editorState}\r\n              onEditorStateChange={this._handleChange}\r\n              keyBindingFn={this.myKeyBindingFn}\r\n            /> */}\r\n            </div>\r\n            </div>\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditNote  _handleChange = {this._handleChange} onSaveNote = {this.props.onSaveNote} Note = {this.props.Note} handleClose = {this.handleClose} editorState = {this.state.editorState} applicationID = {this.props.applicationID} type ={this.props.type} companyID = {this.props.companyID}/>\r\n                </div>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationDetailNotes)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailFollowUp.js",["347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CharacterMetadata, RichUtils, ContentBlock, genKey, ContentState, EditorState, convertFromRaw, contentBlocks} from 'draft-js';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, getSelection, getCurrentContent, editorState, changeDepth, keyBindingFn} from 'draft-js';\r\n\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './ApplicationDetailNotes.scss'\r\nimport './../ApplicationDetail.scss'\r\n\r\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Moment from 'moment';\r\nimport {connect} from 'react-redux'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport CreateEditConversation from './../../../components/create_edit_components/create_edit_conversation/CreateEditConversation'\r\n\r\nclass ApplicationDetailFollowUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n            show: false,\r\n            editorState : ''\r\n        };\r\n    }\r\n    _handleChange = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n    this.setState({\r\n        show:false\r\n    })\r\n    }\r\n    handleOpen = (e) =>{\r\n    e.preventDefault()\r\n    this.setState({\r\n        show:true\r\n    })\r\n    }\r\n    days_between = (date1) => {\r\n\r\n        // The number of milliseconds in one day\r\n        var date2 = new Date();\r\n        // Convert both dates to milliseconds\r\n\r\n        var Difference_In_Time = date2.getTime() - date1.getTime(); \r\n  \r\n        // To calculate the no. of days between two dates \r\n        var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);   \r\n        // Calculate the difference in milliseconds\r\n\r\n        return Difference_In_Days\r\n    }\r\n      \r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"sypp-ApplicationDetailNote-container\">\r\n            <div onClick = {this.handleOpen}>\r\n                <div className=\"sypp-ApplicationDetailFollowup-title-container\">\r\n                    <div className = \"sypp-applicationDetailTextTitle\">{this.props.FollowUp.personnel.firstname +\" \"+this.props.FollowUp.personnel.lastname}</div>\r\n                    <div className = \"sypp-applicationDetailTextSubTitle\">{this.props.FollowUp.personnel.title}</div>\r\n                    <div className = \"sypp-EventDateTime\">{Moment(this.props.FollowUp.time).format('MMM DD, YYYY') + \" (\" +(Math.ceil((new Date().getTime() -new Date(this.props.FollowUp.time).getTime())/(1000*3600*24)))+\" days ago)\" }</div>\r\n                </div>\r\n                    {\r\n                        this.props.FollowUp.description.map((data) => (\r\n                        <div>\r\n                        <div className = \"sypp-note-text-header\">{' • ' +data.header}</div>\r\n                        {\r\n                            data.contents_Text.length != 0 ?  \r\n                            data.contents_Text.map((subText)=>(\r\n                                <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\r\n                            ))\r\n                            : undefined\r\n                        }\r\n                        </div>\r\n                        ))\r\n                    }\r\n            </div>\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditConversation _handleChange = {this._handleChange} FollowUp = {this.props.FollowUp} onSaveConversation = {this.props.onSaveConversation} FollowUp = {this.props.FollowUp} handleClose = {this.handleClose} type ={this.props.type} applicationID = {this.props.applicationID} companyID = {this.props.companyID}/>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(null, null)(ApplicationDetailFollowUp)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailContacts.js",["368","369","370"],"import React, {Component, useState} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\nimport './../ApplicationDetail.scss'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport CreateEditContact from './../../../components/create_edit_components/create_edit_contact/CreateEditContact'\r\n// import CreateEditContact from './../../../components/create_edit_components/create_edit_contact/CreateEditContact'\r\n\r\n\r\nclass ApplicationDetailContacts extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            radioValue : '0',\r\n            show : false\r\n        }\r\n    }\r\n\r\n    radioChange = (e) =>{\r\n        this.setState({\r\n            radioValue : e.target.value\r\n        })\r\n    }\r\n\r\n    display = () =>{\r\n        switch(this.state.radioValue) {\r\n            case '0' :\r\n                return(\r\n                    <div className = \"sypp-applicationDetailTextBody\">\r\n                        {this.props.contact.email.email}\r\n                    </div>\r\n                )\r\n            case '1' :\r\n                return(\r\n                    <div className = \"sypp-applicationDetailTextBody\">\r\n                        {this.props.contact.phone.phoneNumber}\r\n                    </div>\r\n                )\r\n            case '2' :\r\n                return(\r\n                    <div className = \"sypp-applicationDetailTextBody\">\r\n                        {\r\n                        this.props.contact.convo.map((data) => (\r\n                            <div>\r\n                            <div className = \"sypp-note-text-header\">{' • ' +data.header}</div>\r\n                            {\r\n                            data.contents_Text.length != 0 ?  \r\n                                data.contents_Text.map((subText)=>(\r\n                                <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\r\n                                ))\r\n                            : undefined\r\n                            }\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n          show:false\r\n        })\r\n      }\r\n    handleOpen = (e) =>{\r\n    e.preventDefault()\r\n    this.setState({\r\n        show:true\r\n    })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className = \"sypp-applicationDetailContactsContainer\"  >\r\n                    <div>\r\n                        <div className = \"sypp-applicationDetailContactsTitle\">\r\n                            <div className = \"sypp-applicationDetailTextTitle\">{this.props.contact.personalDetail.firstname}</div>\r\n                            <div className = \"sypp-applicationDetailTextTitle-body\">{this.props.contact.personalDetail.title}</div>\r\n                        </div>\r\n                        <ButtonGroup toggle className = {this.props.classContainerProps}>\r\n                        {radios.map((radio, idx) => (\r\n                            <div className=\"sypp-button-container-applicationDetail\">\r\n                                <ToggleButton\r\n                                className={\"sypp-applicationDetialButtonGroups sypp-activeChange sypp-hoverChange sypp-text\"}\r\n                                key={idx}\r\n                                type=\"radio\"\r\n                                variant=\"secondary\"\r\n                                name={radio.name}\r\n                                value={radio.value}\r\n                                checked={this.state.radioValue === radio.value}\r\n                                onChange={(e) => this.radioChange(e, this.state.radioValue)}\r\n                                >\r\n                                <div className = \"sypp-radio-button-container-applicationDetail\" name = {radio.name} value = {radio.value}>\r\n                                    {radio.name}\r\n                                </div>\r\n                                </ToggleButton>\r\n                                </div>\r\n                        ))}\r\n                            </ButtonGroup>\r\n                        </div>\r\n                        <div onClick = {this.handleOpen}>\r\n                            {this.display()}\r\n                        </div>\r\n                </div>\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditContact onSaveContactNote = {this.props.onSaveContactNote} Contact = {this.props.contact} handleClose = {this.handleClose} type ={this.props.type} companyID = {this.props.companyID} applicationID = {this.props.applicationID}/>\r\n                </div>\r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null,null)(ApplicationDetailContacts)\r\nconst radios = \r\n        [\r\n            { name: 'a', value: '0' },\r\n            { name: 'b', value: '1' },\r\n            { name: 'c', value: '2' },\r\n        ]","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\RoleLocationAdd.js",["371","372"],"import React, {Component} from 'react';\r\nimport ChipAutocomplete from './../../components/chip/ChipAutocomplete'\r\nimport './Modalbox.css';\r\nimport './Modalbox.scss';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport {connect} from 'react-redux'\r\nimport { setSelectedCategories } from './../../redux/addApp-reducer/addAppAction';\r\nimport { setCategories } from './../../redux/categories-reducer/categoriesAction';\r\n\r\n\r\n//Make independent server call here. Need to save these properties globally\r\n\r\nexport class RoleLocationAdd extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userInput : '',\r\n            show : false,\r\n        };\r\n    }\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n        \r\n        const category =  this.props.categories;\r\n        for(var i=0;i<category.length;i++){\r\n                category[i].accordion = false;\r\n        }\r\n        this.props.setCategories(category)\r\n    };\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    };\r\n    handleClose = () => {\r\n        this.setState({show: false});\r\n    }\r\n    handleShow = () => {\r\n        this.setState({show: true});\r\n    }\r\n    onChange = (e) =>{\r\n        this.setState({\r\n            userInput: e.currentTarget.value\r\n        })\r\n    }\r\n    onClick = () => {\r\n        this.handleSave(this.state.userInput)\r\n        this.setState({\r\n            show:false\r\n        })\r\n    }\r\n\r\n    handleSave = (input) =>{\r\n        const index = this.props.categories.length\r\n        const {categories} = {...this.props}\r\n        const category = categories\r\n        for(var i=0;i<category.length;i++){\r\n            category[i].accordion = false;\r\n            this.props.setCategories(category)\r\n        }\r\n        const newCategory = this.props.categories.concat({\r\n            index: index,\r\n            name: input,\r\n            suggestions : [],\r\n            accordion : true,\r\n        })\r\n        const newSelectCategory = this.props.selectedCategories.concat({\r\n            Type: input,\r\n            SuggestionsOrSeleceted : []\r\n        })\r\n        this.props.setSelectedCategories(newSelectCategory)\r\n        this.props.setCategories(newCategory)\r\n        this.setState({})\r\n    }\r\n\r\n    \r\n    handleAccordion = (index) => {\r\n        const category =  this.props.categories;\r\n        if(category[index].accordion == false){\r\n            category[index].accordion = true;\r\n        }\r\n        for(var i=0;i<category.length;i++){\r\n            if(index != category[i].index){\r\n                category[i].accordion = false;\r\n    \r\n            }\r\n            this.props.setCategories(category)\r\n        }\r\n        this.setState({})\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className =\"sypp-category-container\">\r\n                    <div className=\"sypp-modal-text\">Let's categorize this applicaiton!</div>\r\n                    <div className=\"sypp-modal-text\">Feel free to leave categories empty if desired!</div>\r\n                    <div className = \"sypp-scroll\" style={{overflowY: 'scroll', height: '160px'}}>\r\n                    {   \r\n                        this.props.categories.map((data) => (\r\n                        <div>\r\n                            <ChipAutocomplete\r\n                            className =\"sypp-modal-input sypp-position\"\r\n                            name = {data.name}\r\n                            key = {data.index}\r\n                            index = {data.index}\r\n                            accordion = {data.accordion}\r\n                            handleAccordion = {this.handleAccordion}\r\n                        />\r\n                        </div>\r\n                        ))\r\n                    }\r\n                    <button className =\"sypp-create-category\" onClick = {this.handleShow}>\r\n                        + New Category\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n                <Modal \r\n                    show={this.state.show}\r\n                    onHide={this.handleClose}\r\n                    centered\r\n                    dialogClassName = \"sypp-Modal-Category\"\r\n                >\r\n                    <div className =\"sypp-submodal-container\">\r\n                        <div className=\"sypp-modal-text\">What's your new category?</div>\r\n                        <input \r\n                        className =\"sypp-modal-input sypp-newCategory\"\r\n                        placeholder = \"Category Name\"\r\n                        value={this.state.userInput}\r\n                        onChange = {this.onChange}\r\n                        />\r\n                        <div className=\"sypp-next-button-container\">\r\n                            <button className =\"sypp-button-next\" \r\n                            onClick = {this.onClick}\r\n                            disabled = {this.state.userInput.length<1}>\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <div className = \"sypp-next-button-container\">\r\n                <button className = \"sypp-button-prev\" onClick = {this.back}>\r\n                    Prev\r\n                </button>\r\n                <button className =\"sypp-button-next\" onClick = {this.continue}>\r\n                    Next\r\n                </button>\r\n                </div>\r\n                \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        categories: state.categories.categories,\r\n        selectedCategories: state.addApp.Categories\r\n    }\r\n}\r\nconst mapDispatchToProps= dispatch =>{\r\n    return {\r\n      setCategories: (category) => dispatch(setCategories(category)),   \r\n      setSelectedCategories: (category) => dispatch(setSelectedCategories(category))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStatetoProps,mapDispatchToProps)(RoleLocationAdd)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\Applied.js",["373","374"],"import React, {Component} from 'react';\r\nimport './Modalbox.css';\r\nimport './Modalbox.scss';\r\nimport MuiButton from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core';\r\nimport RadioButtons from './../../components/radio/RadioButtons'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {setDates} from './../../redux/addApp-reducer/addAppAction'\r\n\r\n\r\n//{key : 1, date: new Date('2020-01-16'), showDate: true, completed: true},\r\n\r\n\r\nexport class Applied extends Component{\r\n    state = {\r\n        option: '1'\r\n        }\r\n\r\n    onChange = (value) => {\r\n        var boolean = true;\r\n        if (value === 1) {\r\n            boolean = true;\r\n        }\r\n        else{\r\n            boolean = false;\r\n        }\r\n        const newDates = this.props.dates\r\n        newDates[0].completed = boolean\r\n        this.props.setDates(newDates)\r\n    }\r\n    \r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    };\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    };\r\n\r\n    render(){\r\n        const radioValue =    \r\n            [ \r\n            { name: 'Yes', value: '1' },\r\n            { name: 'No', value: '2' },\r\n            ]\r\n        return(\r\n            <div>\r\n                <div className =\"sypp-applied-container\">\r\n                    <div className=\"sypp-modal-text sypp-modal-newapp-applied\">Have you applied yet?</div>\r\n                    <div className = \"sypp-radio-container\">\r\n                    <RadioButtons options = {radioValue} onChange = {this.onChange} isDisabled = {false}/>\r\n                    </div>\r\n                </div>\r\n            <br/>\r\n            <div className =\"sypp-next-button-container\">\r\n                <button className = \"sypp-button-prev\" onClick = {this.back}>\r\n                    Prev\r\n                </button>\r\n                <button className =\"sypp-button-next\" onClick = {this.continue}>\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        dates: state.addApp.dates,\r\n    }\r\n  }\r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n      setDates: (date) => dispatch(setDates(date)),   \r\n    }\r\n  }\r\n\r\nexport default connect(mapStatetoProps,mapDispatchToProps)(Applied)\r\n//Add x button bootstrap or material-ui x ","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\CompanyPositionAdd.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_add_application\\InterviewDate.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NewTask.js",["375","376"],"import React, {Component} from 'react';\r\nimport NextStep from './NextStep';\r\nimport NewDate from './NewDate';\r\nimport Page from './../../../components/page/Page'\r\nimport './NewTask.css'\r\nimport './NewTask.scss'\r\n\r\n\r\n\r\nexport class NewTask extends Component {\r\n    state = {\r\n        step: 1,\r\n        title: \"Interview\",\r\n        date: new Date(),\r\n        showDate: true\r\n    }\r\n\r\n    nextStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    calendarChange = date => {\r\n        this.setState({\r\n            date: date\r\n        });\r\n    }\r\n\r\n    onChangeOptions = (value) => {\r\n        if(value === '1'){\r\n            this.setState({\r\n                title: \"Interview\"\r\n            })\r\n        }\r\n        else if(value === '2'){\r\n            this.setState({\r\n                title: \"Challenge\"\r\n            })\r\n        }\r\n        else if(value === '3'){\r\n            this.setState({\r\n                title:\"Test\"\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                title: value\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeOption = (value) => {\r\n        var boolean = true;\r\n        if (value == 1) {\r\n            boolean = true;\r\n        }\r\n        else{\r\n            boolean = false;\r\n        }\r\n        return boolean;\r\n    }\r\n    onInterviewOptionChange = (value) => {\r\n        this.setState({\r\n            showDate: this.onChangeOption(value)\r\n        })\r\n    }\r\n    onClick = e => {\r\n        e.preventDefault();\r\n        this.props.onClickSave(this.state.title, this.state.date, this.state.showDate)\r\n    }\r\n\r\n    render(){\r\n        const{step} = this.state;\r\n        \r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <div>\r\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2]}/>\r\n                        <NextStep \r\n                            nextStep = {this.nextStep}\r\n                            onChangeOption = {this.onChangeOptions}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div>\r\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2]}/>\r\n                        <NewDate\r\n                        onSaveButton = {this.onSaveButton}\r\n                        calendarChange = {this.calendarChange}\r\n                        date = {this.state.date}\r\n                        onInterviewOptionChange = {this.onInterviewOptionChange}\r\n                        title = {this.state.title}\r\n                        />\r\n                        <div className=\"sypp-next-button-container\">\r\n                            <button className = \"sypp-button-next\" \r\n                            onClick={this.onClick} >\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\nexport default NewTask","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\page\\Page.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\progress\\Progress.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_note\\CreateEditNote.js",["377","378","379","380","381","382","383","384","385","386","387","388","389","390"],"import React, {Component} from 'react';\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n// import {setCompany} from './../../redux/company-reducer/companyAction'\r\n\r\nimport '../create_edit_event/CreateEvent.scss'\r\nimport '../CreateEditDetail.scss'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,       \r\n        companies: state.companies.companies,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        // setCompany : (companies) => dispatch(setCompany(companies)),\r\n    }\r\n  }\r\n\r\n\r\nexport class CreateEditNote extends Component {\r\n    state = {\r\n        type: '',\r\n        noteID : '',\r\n        noteDate : new Date(),\r\n        noteName : '',\r\n        editorState : ''\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        var editorState = ''\r\n        if(this.props.Note !== ''){\r\n            const contentBlocksArray = []\r\n            for (var i=0;i<this.props.Note.contents.length;i++){\r\n                if(this.props.Note.contents.length !== 0){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: this.props.Note.contents[i].noteContentsID,\r\n                            type: 'unordered-list-item',\r\n                            depth: 0,\r\n                            text: this.props.Note.contents[i].header\r\n                          })\r\n                    )\r\n                    for(var j=0;j<this.props.Note.contents[i].contents_Text.length;j++){\r\n                        contentBlocksArray.push(\r\n                            new ContentBlock({\r\n                                key: genKey(),\r\n                                type: 'unordered-list-item',\r\n                                depth: 1,\r\n                                text: this.props.Note.contents[i].contents_Text[j]\r\n                              })\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n              this.setState({\r\n              editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),    \r\n            });\r\n        }\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.Note !== ''){\r\n            this.setState({\r\n                noteID: this.props.Note.noteID,\r\n                noteName : this.props.Note.detail.title,\r\n                noteDate : this.props.Note.detail.time,\r\n            })\r\n        }\r\n    }\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n    onSaveButton = () => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n        var newNoteContent = []\r\n        if(this.state.editorState !== ''){\r\n            var newNoteContent = [{\r\n            noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\r\n            header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\r\n            contents_Text : []\r\n        }];\r\n            var tracker = 0;\r\n            for(var i=1;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n                if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\r\n                    tracker++;\r\n                    newNoteContent.push({\r\n                    noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n                    header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n                    contents_Text : []\r\n                    })\r\n                }\r\n                else{\r\n                    newNoteContent[tracker].contents_Text.push(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\r\n                }\r\n            }\r\n        }\r\n\r\n        //Creating a new event\r\n        if(this.state.noteID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    apps[i].notes.push(  \r\n                        {\r\n                            noteID: key,\r\n                            detail: {\r\n                                noteID: key,\r\n                                time: this.state.noteDate,\r\n                                title: this.state.noteName\r\n                            },\r\n                            contents: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.noteID !== '' && this.state.type ==='application'){\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].notes.length;j++){\r\n                        if(this.props.apps[i].notes[j].noteID === this.state.noteID){\r\n                            apps[i].notes[j] = {\r\n                                noteID: this.state.noteID,\r\n                                detail: {\r\n                                    noteID: this.state.noteID,\r\n                                    time: this.state.noteDate,\r\n                                    title: this.state.noteName\r\n                                },\r\n                                contents: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props._handleChange(this.state.editorState)\r\n            this.props.onSaveNote()\r\n        }\r\n        //company detail fixing part, when it doesnt exist \r\n        \r\n        else if(this.state.noteID === '' && this.state.type ==='company'){\r\n            var companies = this.props.companies\r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    const key = genKey()\r\n                    console.log(\"this one is triggeredd...\")\r\n                    companies[i].Notes.push(  \r\n                        {\r\n                            noteID: key,\r\n                            Detail: {\r\n                                noteID: key,\r\n                                Time: this.state.noteDate,\r\n                                Title: this.state.noteName\r\n                            },\r\n                            Contents: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n        }\r\n        else if(this.state.noteID !== '' && this.state.type ==='company'){\r\n            var companies = this.props.companies \r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                console.log(\"this one is triggeredd?\")\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    for(var j=0; j<this.props.companies[i].Notes.length;j++){\r\n                        if(this.props.companies[i].Notes[j].noteID === this.state.noteID){\r\n                            companies[i].Notes[j] = {\r\n                                noteID: this.state.noteID,\r\n                                Detail: {\r\n                                    noteID: this.state.noteID,\r\n                                    Time: this.state.noteDate,\r\n                                    Title: this.state.noteName\r\n                                },\r\n                                Contents: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props._handleChange(this.state.editorState)\r\n            this.props.setCompany(companies)\r\n            this.props.onSaveNote()\r\n        }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeName = (e) =>{\r\n        this.setState({\r\n            noteName : e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    handleEditorState = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      console.log(this.state.editorState)\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({editorState});\r\n      }\r\n    }\r\n\r\n    \r\n    render(){\r\n       return (\r\n        <div>\r\n            <div className = \"sypp-create-edit-detail-container\">\r\n            <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Note Title Here\"\r\n                onChange={e => this.onChangeName(e)}\r\n                value={this.state.noteName}\r\n                />\r\n             <div className =\"sypp-event-seperateLine\"></div>\r\n            <div className = \"sypp-event-title\">Notes</div>\r\n            <Editor \r\n                placeholder = \"      Text Here\"\r\n                toolbarHidden\r\n                editorClassName=\"sypp-editor-class\"\r\n                editorState={this.state.editorState}\r\n                onEditorStateChange={this._handleChange}\r\n                keyBindingFn={this.myKeyBindingFn}\r\n            />\r\n            </div>\r\n            <div className = \"sypp-event-bottom-options-container\">\r\n                <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSaveButton}>Save</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n            </div>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditNote)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_checklist\\CreateEditChecklist.js",["391","392","393","394","395","396","397","398","399","400","401","402","403","404"],"import React, {Component} from 'react';\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\nimport {setCompany} from './../../../redux/company-reducer/companyAction'\r\nimport './../create_edit_event/CreateEvent.scss'\r\nimport './../CreateEditDetail.scss'\r\n\r\n\r\nimport { faListAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSquare, faCheckSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        // pending: state.progress.isPending,\r\n        // categories: state.categories.categories, \r\n        companies: state.companies.companies,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        setCompany : (companies) => dispatch(setCompany(companies)),\r\n\r\n    }\r\n  }\r\n\r\n\r\nexport class CreateEditChecklist extends Component {\r\n    state = {\r\n        type: '',\r\n        checkListsID : '',\r\n        Title : '',\r\n        Time : '',\r\n        editorState : '',\r\n        checkboxState : []\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        console.log(this.props.companyID)\r\n        console.log(this.props.Checklist)\r\n        console.log(this.props.checkboxState)\r\n\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.Checklist !== ''){\r\n            const contentBlocksArray = []\r\n            const checkboxArray =[]\r\n            for (var i=0;i<this.props.Checklist.files.length;i++){\r\n              var checklistID = genKey();\r\n                if(this.props.Checklist.files.length !== 0){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: checklistID,\r\n                            type: 'unstyled',\r\n                            depth: 0,\r\n                            text: this.props.Checklist.files[i].title\r\n                          })\r\n                    )\r\n                }\r\n                checkboxArray.push({\r\n                    checklistID : checklistID,\r\n                    checkboxBoolean: this.props.Checklist.files[i].isChecked\r\n                })\r\n            }\r\n            this.setState({\r\n                checkListsID : this.props.Checklist.checklistID,\r\n                Title : this.props.Checklist.type,\r\n                editorState : EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\r\n                checkboxState : checkboxArray\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n    onSaveButton = () => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n        var newNoteContent = []\r\n        if(this.state.editorState !== ''){\r\n            for(var i=0;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n                newNoteContent.push({\r\n                    // checklistID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n                    title : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n                    isChecked : this.state.checkboxState[i].checkboxBoolean,\r\n                    contents : 'null'\r\n                })\r\n            }\r\n        }\r\n        //Creating a new event\r\n        if(this.state.checkListsID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    apps[i].checklists.push(  \r\n                        {\r\n                            checklistsID: key,\r\n                            submission : false, \r\n                            type : this.state.Title,\r\n                            files: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.checkListsID !== '' && this.state.type ==='application'){\r\n            this.props.handleCheckbox(this.state.checkboxState)\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].checklists.length;j++){\r\n                        if(this.props.apps[i].checklists[j].checklistID === this.state.checkListsID){\r\n                            apps[i].checklists[j] = {\r\n                                checklistsID: this.state.checkListsID,\r\n                                submission : false,\r\n                                type : this.state.Title,\r\n                                files: newNoteContent\r\n                            }                \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props._handleChange(this.state.editorState)\r\n            this.props.onSaveChecklist()\r\n        }\r\n        //company detail fixing part, when it doesnt exist \r\n        else if(this.state.checkListsID === '' && this.state.type ==='company'){\r\n            var companies = this.props.companies\r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    const key = genKey()\r\n                    companies[i].checklists.push(  \r\n                        {\r\n                            checklistID: key,\r\n                            submission : false, \r\n                            type : this.state.Title,\r\n                            files: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n        }\r\n        else if(this.state.checkListsID !== '' && this.state.type ==='company'){\r\n            this.props.handleCheckbox(this.state.checkboxState)\r\n            var companies = this.props.companies \r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    for(var j=0; j<this.props.companies[i].checklists.length;j++){\r\n                        if(this.props.companies[i].checklists[j].checklistID === this.state.checkListsID){\r\n                            companies[i].checklists[j] = {\r\n                                checklistID: this.state.checkListsID,\r\n                                submission : false,\r\n                                type : this.state.Title,\r\n                                files: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n            this.props._handleChange(this.state.editorState)\r\n            this.props.onSaveChecklist()\r\n        }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeTitle = (e) =>{\r\n        this.setState({\r\n            Title : e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    handleEditorState = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    _handleChange = (editorState) => {      \r\n            this.setState({editorState});\r\n            if(this.state.editorState!==''){\r\n            if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length > this.state.checkboxState.length){\r\n                var tempCheckbox = \r\n                [\r\n                    ...this.state.checkboxState.slice(0, this.currentBlockIndex()),\r\n                    {\r\n                        checklistID: this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][0],\r\n                        checkboxBoolean: false\r\n                    },\r\n                    ...this.state.checkboxState.slice(this.currentBlockIndex())\r\n                ]\r\n               this.setState({\r\n                checkboxState : tempCheckbox\r\n               })\r\n               console.log(this.state.checkboxState)\r\n            }\r\n            else if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length < this.state.checkboxState.length){\r\n                var tempCheckbox = []\r\n                for(var i = 0; i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n                    for(var j=0;j< this.state.checkboxState.length;j++){\r\n                        if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0]===this.state.checkboxState[j].checklistID){\r\n                            tempCheckbox.push(this.state.checkboxState[j])\r\n                        }\r\n                    }\r\n                }\r\n               this.setState({\r\n                checkboxState : tempCheckbox\r\n               })\r\n            }\r\n        }\r\n            this.setState({})\r\n        }\r\n\r\n    onCheckBoxClick = (checkboxID) => {\r\n        var tempCheckbox = this.state.checkboxState\r\n        for(var i=0;i<this.state.checkboxState.length;i++){\r\n            if(checkboxID === this.state.checkboxState[i].checklistID){\r\n                tempCheckbox[i].checkboxBoolean = !tempCheckbox[i].checkboxBoolean\r\n            }\r\n            this.setState({\r\n                checkboxState : tempCheckbox \r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n       return (\r\n        <div>\r\n            <div className = \"sypp-create-edit-detail-container\">\r\n            <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Checklist Name\"\r\n                onChange={e => this.onChangeTitle(e)}\r\n                value={this.state.Title}\r\n                />\r\n             <div className =\"sypp-event-seperateLine\"></div>\r\n            <div className = \"sypp-ApplicationDetailChecklists-container\" style={{overflowY: 'scroll', height: '340px'}}>\r\n            <div className = \"sypp-CheckList-Container\">\r\n            {\r\n                this.state.checkboxState.length === 0 ? \r\n                <div className = \"sypp-emptybody-checkbox-container\">\r\n                    <FormControlLabel \r\n                    className = \"sypp-FormRoot\"\r\n                    control = {\r\n                    <Checkbox \r\n                    icon=  {<FontAwesomeIcon className = \"sypp-CheckBox-icon\" icon={faSquare}/> }\r\n                    checkedIcon= {<FontAwesomeIcon className = \" sypp-checked sypp-emptybody-checkbox\" icon={faCheckSquare}/> }\r\n                    className = \"sypp-Checkbox-padding sypp-Checkbox-padding2\"\r\n                    checked = {true} \r\n                    />}\r\n                    />\r\n                </div>\r\n                :this.state.checkboxState.map((checkbox) => (\r\n                    // <FormGroup row>\r\n                    <div className = \"sypp-checkbox-container\">\r\n                    <FormControlLabel \r\n                    className = \"sypp-FormRoot\"\r\n                    control = {\r\n                    <Checkbox \r\n                    icon=  {<FontAwesomeIcon className = \"sypp-CheckBox-icon\" icon={faSquare}/> }\r\n                    checkedIcon= {<FontAwesomeIcon className = \"sypp-CheckBox-icon sypp-checked\" icon={faCheckSquare}/> }\r\n                    className = \"sypp-Checkbox-padding sypp-Checkbox-padding2\"\r\n                    checked = {checkbox.checkboxBoolean} \r\n                    onChange = {() => this.onCheckBoxClick(checkbox.checklistID)}/>}\r\n                    />\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n            <div className = \"sypp-Editor-Container\">\r\n                <Editor \r\n                toolbarHidden\r\n                editorClassName=\"sypp-editor-class sypp-checkbox-editorState\"\r\n                placeholder = \"Checklist Items\"\r\n                editorState={this.state.editorState}\r\n                onEditorStateChange={this._handleChange}\r\n                //   keyBindingFn={this.myKeyBindingFn}\r\n                />\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className = \"sypp-event-bottom-options-container\">\r\n                <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSaveButton}>Save</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n            </div>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditChecklist)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\CreateEditEvent.js",["405","406","407","408","409","410","411","412","413","414","415","416"],"import React, {Component} from 'react';\r\nimport EventDetail from './EventDetail'\r\nimport EventSelectDate from './EventSelectDate'\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n// import {setCompany} from './../../redux/company-reducer/companyAction'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        // companies: state.companies.companies,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        // setCompany : (companies) => dispatch(setCompany(companies)),\r\n        // updateApplicationDetail: (applications) => dispatch(updateApplicationDetail(applications)),\r\n    }\r\n  }\r\n\r\n\r\nexport class CreateEditEvent extends Component {\r\n    state = {\r\n        type: '',\r\n        step: 1,\r\n        eventID : '',\r\n        eventName : '',\r\n        eventLocation :'',\r\n        eventNote : '',\r\n        eventDate : '',\r\n        eventHour : 0,\r\n        eventMinute : 0,\r\n        eventTimeConvert : '',\r\n        editorState : ''\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.Event !== ''){            \r\n            this.setState({\r\n                eventID: this.props.Event.eventID,\r\n                eventName : this.props.Event.detail.title,\r\n                eventLocation :this.props.Event.detail.location,\r\n                eventNote : '',\r\n                eventDate : this.props.Event.detail.time,\r\n                eventHour : 0,\r\n                eventMinute : 0,\r\n                eventTimeConvert : '',\r\n                editorState : this.props.editorState\r\n            })\r\n        }\r\n    }\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n    onSaveButton = (editorState) => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n    var newNoteContent = []\r\n    if(editorState !== ''){\r\n        newNoteContent = [{\r\n            noteContentsID : editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\r\n            header : editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\r\n            contents_Text : []\r\n      }];\r\n      var tracker = 0;\r\n        for(var i=1;i<editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n          if(editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\r\n            tracker++;\r\n            newNoteContent.push({\r\n                noteContentsID : editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n                header : editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n                contents_Text : []\r\n            })\r\n          }\r\n          else{\r\n            newNoteContent[tracker].contents_Text.push(editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\r\n          }\r\n        }\r\n    }\r\n        //Creating a new event\r\n        if(this.state.eventID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    apps[i].events.push(  \r\n                        {\r\n                            eventID: key,\r\n                            detail: {\r\n                                eventID: key,\r\n                                applicationID: this.props.applicationID,\r\n                                time: this.state.eventDate,\r\n                                location: this.state.eventLocation,\r\n                                title: this.state.eventName\r\n                            },\r\n                            contents: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.eventID !== '' && this.state.type ==='application'){\r\n            console.log(this.state.eventID)\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].events.length;j++){\r\n                        if(this.props.apps[i].events[j].eventID === this.state.eventID){\r\n                            console.log(\"this one is triggeredd?\")\r\n                            apps[i].events[j] = {\r\n                                eventID: this.state.eventID,\r\n                                detail: {\r\n                                    eventID: this.state.eventID,\r\n                                    applicationID: this.props.applicationID,\r\n                                    time: this.state.eventDate,\r\n                                    location: this.state.eventLocation,\r\n                                    title: this.state.eventName\r\n                                },\r\n                                contents: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props.onSaveEventNote()\r\n            this.props._handleChange(editorState)\r\n        }\r\n        //Company save function\r\n\r\n        // else if(this.state.eventID === '' && this.state.type ==='company'){\r\n        //     var companies = this.props.companies\r\n        //     for(var i=0;i<this.props.companies.length;i++){\r\n        //         if(this.props.companies[i].companyID === this.props.companyID){\r\n        //             const key = genKey()\r\n        //             companies[i].Events.push(  \r\n        //                 {\r\n        //                     eventID: key,\r\n        //                     Detail: {\r\n        //                         eventID: key,\r\n        //                         applicationID: this.props.companyID,\r\n        //                         Time: this.state.eventDate,\r\n        //                         Location: this.state.eventLocation,\r\n        //                         Title: this.state.eventName\r\n        //                     },\r\n        //                     Contents: newNoteContent\r\n        //                 }\r\n        //             )\r\n        //         }\r\n        //     }\r\n        //     this.props.onSaveEventNote()\r\n        //     this.props.setCompany(companies)\r\n        //     this.setState({})\r\n        // }\r\n        // else if(this.state.eventID !== '' && this.state.type ==='company'){\r\n        //     console.log(this.state.eventID)\r\n        //     var companies = this.props.companies \r\n        //     for(var i=0;i<this.props.companies.length;i++){\r\n        //         if(this.props.companies[i].companyID === this.props.companyID){\r\n        //             for(var j=0; j<this.props.companies[i].Events.length;j++){\r\n        //                 if(this.props.companies[i].Events[j].eventID === this.state.eventID){\r\n        //                     console.log(\"this one is triggeredd?\")\r\n        //                     companies[i].Events[j] = {\r\n        //                         eventID: this.state.eventID,\r\n        //                         Detail: {\r\n        //                             eventID: this.state.eventID,\r\n        //                             applicationID: this.props.companyID,\r\n        //                             Time: this.state.eventDate,\r\n        //                             Location: this.state.eventLocation,\r\n        //                             Title: this.state.eventName\r\n        //                         },\r\n        //                         Contents: newNoteContent\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     this.props.setCompany(companies)\r\n        //     this.props.onSaveEventNote()\r\n        //     this.props._handleChange(editorState)\r\n        //     this.setState({})\r\n        // }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeName = (e) =>{\r\n        this.setState({\r\n            eventName : e.currentTarget.value\r\n        })\r\n        console.log(this.state.eventName)\r\n    }\r\n    onChangeLocation = (e) =>{\r\n        this.setState({\r\n            eventLocation : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangeDate = (date) =>{\r\n        this.setState({\r\n            eventDate : date\r\n        })\r\n        console.log(date)\r\n    }\r\n    onChangeHour = (hour) =>{\r\n        this.setState({\r\n            eventHour : hour\r\n        })\r\n    }\r\n    onChangeMinute = (minute) =>{\r\n        this.setState({\r\n            eventMinute : minute\r\n        })\r\n    }\r\n    nextStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n    prevStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    handleEditorState = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    render(){\r\n        const{step} = this.state;\r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <div>\r\n                        <EventDetail \r\n                            nextStep = {this.nextStep}\r\n                            eventName = {this.state.eventName}\r\n                            onChangeName = {this.onChangeName}\r\n                            eventLocation = {this.state.eventLocation}\r\n                            onChangeLocation = {this.onChangeLocation}\r\n                            handleClose = {this.props.handleClose}\r\n                            eventDate = {this.state.eventDate}\r\n                            editorState = {this.props.editorState}\r\n                            handleEditorState = {this.handleEditorState}\r\n                            onSaveButton = {this.onSaveButton}\r\n                            Event = {this.props.Event}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div>\r\n                        <EventSelectDate\r\n                        prevStep = {this.prevStep}\r\n                        onChangeDate = {this.onChangeDate}\r\n                        onChangeHour = {this.onChangeHour}\r\n                        onChangeMinute = {this.onChangeMinute}\r\n                        handleClose = {this.props.handleClose}\r\n                        eventDate = {this.state.eventDate}\r\n                        eventHour = {this.state.eventHour}\r\n                        eventMinute = {this.state.eventMinute}\r\n                        />\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditEvent)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\CreateEditConversation.js",["417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432"],"import React, {Component} from 'react';\r\nimport ConversationDetail from './ConversationDetail'\r\nimport ConversationDate from './ConversationDate'\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n\r\n// import {setCompany} from '../../redux/company-reducer/companyAction'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n    \r\n        // companies: state.companies.companies,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        // setCompany : (companies) => dispatch(setCompany(companies)),\r\n        // updateApplicationDetail: (applications) => dispatch(updateApplicationDetail(applications)),\r\n    }\r\n  }\r\nexport class CreateEditConversation extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = \r\n        {\r\n            step : 1,\r\n            type: '',\r\n            followUpID : '',\r\n            time : '',\r\n            name : '',\r\n            position : '',\r\n            editorState : ''\r\n        }\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.FollowUp !== ''){  \r\n            this.setState({\r\n                followUpID : this.props.FollowUp.followUpID,\r\n                name : this.props.FollowUp.personnel.firstname,\r\n                time : this.props.FollowUp.time,\r\n                position : this.props.FollowUp.personnel.company,\r\n            })\r\n        }\r\n}\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n    onSaveButton = () => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n    var newNoteContent = []\r\n    if(this.state.editorState !== ''){\r\n        newNoteContent = [{\r\n        noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\r\n        Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\r\n        Contents_Text : []\r\n      }];\r\n      var tracker = 0;\r\n        for(var i=1;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n          if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\r\n            tracker++;\r\n            newNoteContent.push({\r\n            noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n              Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n              Contents_Text : []\r\n            })\r\n          }\r\n          else{\r\n            newNoteContent[tracker].Contents_Text.push(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\r\n          }\r\n        }\r\n    }\r\n        //Creating a new event\r\n        if(this.state.followUpID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    apps[i].FollowUps.push(  \r\n                        {\r\n                            followUpID : key,\r\n                            Time : this.state.time,\r\n                            Personnel: {\r\n                                followUpID : key,\r\n                                Name: this.state.name,\r\n                                Position: this.state.position,\r\n                            },\r\n                            Description: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.followUpID !== '' && this.state.type ==='application'){\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].FollowUps.length;j++){\r\n                        if(this.props.apps[i].FollowUps[j].followUpID === this.state.followUpID){\r\n                            console.log(\"this one is triggeredd?\")\r\n                            apps[i].FollowUps[j] = {\r\n                                followUpID: this.state.followUpID,\r\n                                Time : this.state.time,\r\n                                    Personnel: {\r\n                                        followUpID : this.state.followUpID,\r\n                                        Name: this.state.name,\r\n                                        Position: this.state.position,\r\n                                    },\r\n                                Description: newNoteContent\r\n                                }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props.onSaveConversation()\r\n            this.props._handleChange(this.state.editorState)\r\n            this.setState({})\r\n        }\r\n        else if(this.state.followUpID === '' && this.state.type ==='company'){\r\n            var companies = this.props.companies\r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    const key = genKey()\r\n                    companies[i].FollowUps.push(  \r\n                        {\r\n                            followUpID : key,\r\n                            Time : this.state.time,\r\n                            Personnel: {\r\n                                followUpID : key,\r\n                                Name: this.state.name,\r\n                                Position: this.state.position,\r\n                            },\r\n                            Description: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n            this.setState({})\r\n        }\r\n        else if(this.state.followUpID !== '' && this.state.type ==='company'){\r\n            console.log(this.state.eventID)\r\n            var companies = this.props.companies \r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    for(var j=0; j<this.props.companies[i].FollowUps.length;j++){\r\n                        if(this.props.companies[i].FollowUps[j].followUpID === this.state.followUpID){\r\n                            console.log(\"this one is triggeredd?\")\r\n                            companies[i].FollowUps[j] = {\r\n                                followUpID : this.state.followUpID,\r\n                                Time : this.state.time,\r\n                                Personnel: {\r\n                                    followUpID : this.state.followUpID,\r\n                                    Name: this.state.name,\r\n                                    Position: this.state.position,\r\n                                },\r\n                                Description: newNoteContent\r\n                                }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n            this.props.onSaveConversation()\r\n            this.props._handleChange(this.state.editorState)\r\n            this.setState({})\r\n        }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeName = (e) =>{\r\n        this.setState({\r\n            name : e.currentTarget.value\r\n        })\r\n        console.log(this.state.eventName)\r\n    }\r\n    onChangePosition = (e) =>{\r\n        this.setState({\r\n            position : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangeDate = (date) =>{\r\n        this.setState({\r\n            time : date\r\n        })\r\n    }\r\n    nextStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n    prevStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    handleEditorState = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const{step} = this.state;\r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <div>\r\n                        <ConversationDetail \r\n                            nextStep = {this.nextStep}\r\n                            name = {this.state.name}\r\n                            onChangeName = {this.onChangeName}\r\n                            position = {this.state.position}\r\n                            onChangePosition = {this.onChangePosition}\r\n                            handleClose = {this.props.handleClose}\r\n                            time = {this.state.time}\r\n                            handleEditorState = {this.handleEditorState}\r\n                            onSaveButton = {this.onSaveButton}\r\n                            FollowUp = {this.props.FollowUp}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div>\r\n                        <ConversationDate\r\n                        prevStep = {this.prevStep}\r\n                        onChangeDate = {this.onChangeDate}\r\n                        handleClose = {this.props.handleClose}\r\n                        time = {this.state.time}\r\n                        />\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditConversation)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_contact\\CreateEditContact.js",["433","434","435","436","437","438","439","440"],"import React, {Component} from 'react';\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n\r\n// import {setCompany} from './../../redux/company-reducer/companyAction'\r\n\r\n\r\nimport './../create_edit_event/CreateEvent.scss'\r\nimport './../CreateEditDetail.scss'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        // setCompany : (companies) => dispatch(setCompany(companies)),\r\n    }\r\n  }\r\n\r\n\r\nexport class CreateEditContact extends Component {\r\n    state = {\r\n        type: '',\r\n        contactID : '',\r\n        Firstname : '',\r\n        Title : '',\r\n        Email : '',\r\n        emailID : '',\r\n        PhoneNumber : '',\r\n        phoneID: '',\r\n        editorState : '',\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.Contact !== ''){\r\n            const contentBlocksArray = []\r\n            for (var i=0;i<this.props.Contact.convo.length;i++){\r\n            if(this.props.Contact.convo.length !== 0){\r\n                contentBlocksArray.push(\r\n                    new ContentBlock({\r\n                        key: this.props.Contact.convo[i].noteContentsID,\r\n                        type: 'unordered-list-item',\r\n                        depth: 0,\r\n                        text: this.props.Contact.convo[i].header\r\n                      })\r\n                )\r\n                for(var j=0;j<this.props.Contact.convo[i].contents_Text.length;j++){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: genKey(),\r\n                            type: 'unordered-list-item',\r\n                            depth: 1,\r\n                            text: this.props.Contact.convo[i].contents_Text[j]\r\n                          })\r\n                    )\r\n                }\r\n            }\r\n        }\r\n            this.setState({\r\n                contactID : this.props.Contact.contactID,\r\n                Firstname : this.props.Contact.personalDetail.firstname,\r\n                Title : this.props.Contact.personalDetail.title,\r\n                Email : this.props.Contact.email.email,\r\n                emailID : this.props.Contact.email.emailID,\r\n                PhoneNumber : this.props.Contact.phone.phoneNumber,\r\n                phoneID: this.props.Contact.phone.phoneID,\r\n                editorState : EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray))\r\n            })\r\n        }\r\n    }\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n\r\n    onSaveButton = () => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n        console.log(this.state.editorState)\r\n        var newNoteContent = []\r\n        if(this.state.editorState !== ''){\r\n        newNoteContent = [{\r\n        noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\r\n        header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\r\n        contents_Text : []\r\n      }];\r\n      var tracker = 0;\r\n        for(var i=1;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n          if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\r\n            tracker++;\r\n            newNoteContent.push({\r\n              noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n              header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n              contents_Text : []\r\n            })\r\n          }\r\n          else{\r\n            newNoteContent[tracker].contents_Text.push(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\r\n          }\r\n        }\r\n        }\r\n\r\n        //Creating a new event\r\n        if(this.state.contactID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    console.log(\"this one is triggeredd...\")\r\n                    apps[i].contacts.push(  \r\n                        {\r\n                            contactID: key,\r\n                            personalDetail: {\r\n                                contactID: key,\r\n                                title: this.state.Title,\r\n                                firstname : this.state.Firstname,\r\n                            },\r\n                            email: {\r\n                                email: this.state.Email,\r\n                                emailID : genKey()\r\n                            },\r\n                            phone: {\r\n                                phoneNumber : this.state.PhoneNumber,\r\n                                phoneID : genKey()\r\n                            },\r\n                            convo: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.contactID !== '' && this.state.type ==='application'){\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].contacts.length;j++){\r\n                        if(this.props.apps[i].contacts[j].contactID === this.state.contactID){\r\n                            apps[i].contacts[j] = {\r\n                                contactID: this.state.contactID,\r\n                                personalDetail: {\r\n                                    contactID: this.state.contactID,\r\n                                    title: this.state.Title,\r\n                                    firstname : this.state.Firstname,\r\n                                },\r\n                                email: {\r\n                                    email: this.state.Email,\r\n                                    emailID : this.state.emailID\r\n                                },\r\n                                phone: {\r\n                                    phoneNumber : this.state.PhoneNumber,\r\n                                    phoneID : this.state.phoneID\r\n                                },\r\n                                convo: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props.onSaveContactNote()\r\n        }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeName = (e) =>{\r\n        this.setState({\r\n            Firstname : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangePosition = (e) =>{\r\n        this.setState({\r\n            Title : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangeEmail = (e) =>{\r\n        this.setState({\r\n            Email : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangePhoneNumber = (e) =>{\r\n        this.setState({\r\n            PhoneNumber : e.currentTarget.value\r\n        })\r\n    }\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      console.log(this.state.editorState)\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({editorState});\r\n      }\r\n    }\r\n\r\n    \r\n    render(){\r\n       return (\r\n        <div>\r\n            <div className = \"sypp-create-edit-detail-container\">\r\n            <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.onChangeName(e)}\r\n                value={this.state.Firstname}\r\n                />\r\n                <input\r\n                className = \"sypp-contact-name-subTitle\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.onChangePosition(e)}\r\n                value={this.state.Title}\r\n                />\r\n             <div className =\"sypp-event-seperateLine\"></div>\r\n            <div className = \"sypp-event-title\">Email</div>\r\n            <input\r\n                className = \"sypp-contact-name-body\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.onChangeEmail(e)}\r\n                value={this.state.Email}\r\n            />\r\n            <div className = \"sypp-event-title\">PhoneNumber</div>\r\n            <input\r\n                className = \"sypp-contact-name-body\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.onChangePhoneNumber(e)}\r\n                value={this.state.PhoneNumber}\r\n            />\r\n            <div className = \"sypp-event-title\">Notes</div>\r\n\r\n            <div style={{overflowY: 'scroll', height: '170px'}}>\r\n                <Editor \r\n                    placeholder = \"      Text Here\"\r\n                    toolbarHidden\r\n                    editorClassName=\"sypp-editor-class\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this._handleChange}\r\n                    keyBindingFn={this.myKeyBindingFn}\r\n                />\r\n            </div>\r\n            </div>\r\n            <div className = \"sypp-event-bottom-options-container\">\r\n                <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSaveButton}>Save</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n            </div>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditContact)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\categories-reducer\\categoriesAction.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NextStep.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NewDate.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\calendar\\CalendarComponent.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\chip\\ChipAutocomplete.js",["441","442","443","444","445","446","447","448","449","450"],"import React, { Component, useState } from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport './ChipAutocomplete.css';\r\nimport './ChipAutocomplete.scss';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiButtonBase from '@material-ui/core/ButtonBase';\r\nimport MuiChipInput from 'material-ui-chip-input'\r\n\r\nimport {connect} from 'react-redux'\r\nimport { setCategories } from '../../redux/categories-reducer/categoriesAction';\r\nimport { setSelectedCategories } from '../../redux/addApp-reducer/addAppAction';\r\n\r\n\r\n\r\nconst ButtonBase = withStyles({\r\n  root: {\r\n    padding: '0px',\r\n    margin: '0px'\r\n  },\r\n})(MuiButtonBase);\r\n\r\nconst ChipInput = withStyles({\r\n  inputRoot: {\r\n    flexWrap: 'wrap',\r\n    fontSize :'5',\r\n    maxWidth: 150,\r\n    color: \"white\",\r\n    '&$outlined,&$filled': {\r\n      boxSizing: 'border-box'\r\n    },\r\n  },\r\n  chipContainer: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    cursor: 'text',\r\n    width: '100%' ,\r\n    marginBottom: -2,\r\n    minHeight: 30,\r\n    '&$labeled&$standard': {\r\n      marginTop: 5\r\n    }\r\n  },\r\n  chip:{\r\n    background : \"#5E6A7E\",\r\n    marginTop: '5px',\r\n    marginBottom:'3px',\r\n    fontSize : '10px',\r\n    height : '20px',\r\n    color :\"#C2DBFF\",\r\n  },\r\n})(MuiChipInput);\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    minHeight: '0',\r\n    margin: 0,\r\n    padding: 0,\r\n    border: '0px solid rgba(0, 0, 0, 0)',\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    '&$expanded': {\r\n      margin: '0px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    display: 'block',\r\n    margin: '0px 0',\r\n    backgroundColor: 'transparent',\r\n    '&$expanded': {\r\n      margin: '0px 0',\r\n      minHeight: 0,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0)',\r\n      margin: '5px 0px'\r\n    },\r\n  },\r\n  expanded: {},\r\n  focused: {    \r\n    '&$focused': {\r\n    backgroundColor: 'transparent',\r\n    },\r\n  },\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    marginTop: 1\r\n  },\r\n}))(MuiAccordionDetails);\r\n\r\nexport class ChipAutocomplete extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: '',\r\n      disabled: false\r\n    };\r\n  }\r\n  \r\n  onClick = (e) => {\r\n    const newSelectedCategory = this.props.selectedCategories\r\n    for (var i =0;i<newSelectedCategory.length;i++){\r\n      if(newSelectedCategory[i].Type === this.props.name){\r\n        newSelectedCategory[i].SuggestionsOrSeleceted = newSelectedCategory[i].SuggestionsOrSeleceted.concat(e.currentTarget.innerText)\r\n      }\r\n    }\r\n    // newSelectedCategory[this.props.index].selectedCategory = newSelectedCategory[this.props.index].selectedCategory.concat(e.currentTarget.innerText)\r\n    this.props.setSelectedCategories(newSelectedCategory)\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: '',\r\n      disabled: true\r\n    });\r\n    console.log(this.state.disabled)\r\n  };\r\n\r\n  newSuggestion = e => {\r\n    this.handleSuggestion(this.props.index, this.state.userInput);\r\n    const newSelectedCategory = this.props.selectedCategories\r\n    for (var i =0;i<newSelectedCategory.length;i++){\r\n      if(newSelectedCategory[i].Type === this.props.name){\r\n        newSelectedCategory[i].SuggestionsOrSeleceted = newSelectedCategory[i].SuggestionsOrSeleceted.concat(this.state.userInput)\r\n      }\r\n    }\r\n     \r\n    // newSelectedCategory[this.props.index].selectedCategory = newSelectedCategory[this.props.index].selectedCategory.concat(this.state.userInput)\r\n    this.props.setSelectedCategories(newSelectedCategory)\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: '',\r\n      disabled: true\r\n    });  }\r\n\r\n\r\n\r\n  onChange = (e) => {\r\n    const { suggestions } = this.props.categories[this.props.index];\r\n    const userInput = e.currentTarget.value;\r\n    const filteredSuggestions = suggestions.filter(\r\n      (suggestion) =>\r\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n      if(this.state.disabled){\r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          filteredSuggestions,\r\n          showSuggestions: false,\r\n          userInput: '',\r\n        });\r\n      }\r\n      else{\r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          filteredSuggestions,\r\n          showSuggestions: true,\r\n          userInput: e.currentTarget.value,\r\n        });\r\n    }\r\n  };\r\n\r\n  handleDeleteTags = (tag) => {\r\n   \r\n    const delectedCategory = this.props.selectedCategories[this.props.index].SuggestionsOrSeleceted.filter(state => state !== tag)\r\n    const newSelectedCategory = this.props.selectedCategories\r\n    newSelectedCategory[this.props.index].SuggestionsOrSeleceted = this.props.selectedCategories[this.props.index].SuggestionsOrSeleceted.filter(state => state !== tag)\r\n    this.props.setSelectedCategories(newSelectedCategory)\r\n    console.log(newSelectedCategory)\r\n    this.setState({\r\n      disabled: false\r\n    })\r\n  };\r\n\r\n  handleSuggestion = (index, newSuggestion) => {\r\n    var boolTest = true\r\n    this.props.categories[index].suggestions.map((suggestion) => {\r\n        if(newSuggestion == suggestion){\r\n            boolTest = false;\r\n        }\r\n    })\r\n    if(boolTest){\r\n        const {categories} = {...this.props}\r\n        const category = categories;\r\n        category[index].suggestions = this.props.categories[index].suggestions.concat(newSuggestion)\r\n        this.props.setCategories(category)\r\n    }\r\n  }\r\n\r\n  onClickAccordion = (e) => {\r\n    this.props.handleAccordion(this.props.index)\r\n  }\r\n\r\n  static defaultProperty={\r\n    suggestions: []\r\n  };\r\n  disableEvents = true;\r\n\r\n  /* Dynamically compute style for wrapper components \r\n      to control mouse interactivity */\r\n  wrapperStyle = e => { \r\n  };\r\n\r\n  render(){\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput,\r\n        chip\r\n      }\r\n    } = this;\r\n    let suggestionsListComponent;\r\n      if (showSuggestions && userInput) {\r\n        if (filteredSuggestions.length) {\r\n          suggestionsListComponent = (\r\n            <ul className = \"sypp-ul\">\r\n              {filteredSuggestions.map((suggestion, index) => {\r\n                return (\r\n                  <div class =\"sypp-suggestion sypp-chipbutton\">\r\n                  <button  key={suggestion} onClick={onClick}>\r\n                    {suggestion}\r\n                  </button>\r\n                  <div>X</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </ul>\r\n          );\r\n        } \r\n      }\r\n\r\n    return (\r\n      <div>\r\n        <Accordion expanded = {this.props.accordion} \r\n        TransitionProps={{\r\n          timeout: 600\r\n        }}>\r\n          <AccordionSummary>\r\n            <div className = \"sypp-accoridon-container\">\r\n                <div className = 'sypp-label-container'>\r\n                  <div className=\"sypp-label-text\">{this.props.name}</div>\r\n                </div>\r\n                <div className =\"sypp-border\" onClick = {this.onClickAccordion}>\r\n                    <ChipInput\r\n                    value={this.props.selectedCategories[this.props.selectedCategories.map(\r\n                      function(e){\r\n                        return e.Type\r\n                    }).indexOf(this.props.name)].SuggestionsOrSeleceted}\r\n                    placeholder=\"Assign Tag\"\r\n                    onDelete={(tag) => this.handleDeleteTags(tag)}\r\n                    onUpdateInput={this.onChange}\r\n                    disableUnderline = {true}\r\n                    fullWidthInput = {false}\r\n                    fullWidth = {false}\r\n                    inputValue = {this.state.disabled?'':this.state.userInput}\r\n                    />\r\n                </div>\r\n            </div>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <div className = \"sypp-container-suggestion\">\r\n                <button className = \"sypp-suggestion\" \r\n                  onClick={this.newSuggestion}\r\n                  disabled = {this.state.userInput.length<1}\r\n                >Create</button>\r\n                {suggestionsListComponent}\r\n                </div>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      categories: state.categories.categories,\r\n      selectedCategories: state.addApp.Categories\r\n  }\r\n}\r\nconst mapDispatchToProps= dispatch =>{\r\n  return {\r\n    setCategories: (category) => dispatch(setCategories(category)),   \r\n    setSelectedCategories: (category) => dispatch(setSelectedCategories(category))\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ChipAutocomplete);\r\n\r\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\radio\\RadioButtons.js",["451","452","453","454","455"],"import React, { Component, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport './RadioButtons.css';\r\n\r\n\r\n\r\nfunction RadioButtons(props) {\r\n    const [checked, setChecked] = useState(false);\r\n    const [radioValue, setRadioValue] = useState('1');\r\n    const radios = props.options;\r\n\r\n    const radioChange = (e) => {\r\n      e.preventDefault();\r\n      props.onChange(e.currentTarget.value);\r\n      setRadioValue(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <ButtonGroup toggle className = {props.classContainerProps}>\r\n          {radios.map((radio, idx) => (\r\n              <div className=\"sypp-button-container sypp-button-towButtons-container\">\r\n                {props.isDisabled?\r\n                <ToggleButton\r\n                className={\"sypp-colorChange sypp-activeChange sypp-hoverChange sypp-text1 sypp-twoButtons \" + props.buttonContainerProps}\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => radioChange(e, radioValue)}\r\n                disabled\r\n                >\r\n                {radio.name}\r\n                </ToggleButton>:\r\n                <ToggleButton\r\n                className={\"sypp-colorChange sypp-activeChange sypp-hoverChange sypp-text1 sypp-twoButtons \" + props.buttonContainerProps}\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => radioChange(e, radioValue)}\r\n                >\r\n                {radio.name}\r\n                </ToggleButton>\r\n                }\r\n            </div>\r\n          ))}\r\n        </ButtonGroup>\r\n    );\r\n  }\r\n  export default RadioButtons;\r\n\r\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\EventDetail.js",["456","457","458","459"],"import React, {Component} from 'react';\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\nimport Moment from 'moment';\r\n\r\n\r\nclass EventDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n          editorState: ''\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.Event !== ''){\r\n          const contentBlocksArray = []\r\n          for (var i=0;i<this.props.Event.contents.length;i++){\r\n              if(this.props.Event.contents.length !== 0){\r\n                  contentBlocksArray.push(\r\n                      new ContentBlock({\r\n                          key: this.props.Event.contents[i].noteContentsID,\r\n                          type: 'unordered-list-item',\r\n                          depth: 0,\r\n                          text: this.props.Event.contents[i].header\r\n                        })\r\n                  )\r\n                  for(var j=0;j<this.props.Event.contents[i].contents_Text.length;j++){\r\n                      contentBlocksArray.push(\r\n                          new ContentBlock({\r\n                              key: genKey(),\r\n                              type: 'unordered-list-item',\r\n                              depth: 1,\r\n                              text: this.props.Event.contents[i].contents_Text[j]\r\n                            })\r\n                      )\r\n                  }\r\n              }\r\n          }\r\n          this.setState({\r\n            editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\r\n          });\r\n        }\r\n    }\r\n    onSave = () =>{\r\n      this.props.handleEditorState(this.state.editorState);\r\n      this.props.onSaveButton(this.state.editorState);\r\n      console.log(this.state.editorState)\r\n    }\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      console.log(this.state.editorState)\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({editorState});\r\n      }\r\n    }\r\n    render(){\r\n        return(\r\n            <div >\r\n                <div className = \"sypp-event-detail-container\">\r\n                <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Event Name Here\"\r\n                onChange={e => this.props.onChangeName(e)}\r\n                value={this.props.eventName}\r\n                />\r\n                <div className =\"sypp-event-seperateLine\"></div>\r\n                <div className = \"sypp-event-title\">Date and Time</div>\r\n                {this.props.eventDate === ''?                 \r\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\r\n                    Select Date and Time\r\n                </button>:\r\n                <div className = \"sypp-event-datepick-resultDate-container\">\r\n                <div className = \"sypp-event-datepick-resultDate\">{Moment(this.props.eventDate).format('MMM DD, YYYY • h:mma')}</div>\r\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\r\n                Edit Date and Time\r\n                </button>\r\n                </div>\r\n                }\r\n                <div className = \"sypp-event-title\">Location</div>                \r\n                <input\r\n                className = \"sypp-event-location\"\r\n                placeholder=\"Location Here\"\r\n                onChange={e => this.props.onChangeLocation(e)}\r\n                value={this.props.eventLocation}\r\n                />  \r\n                <div className =\"sypp-event-seperateLine\"></div>\r\n\r\n                <div className = \"sypp-event-title\">Note</div>    \r\n                <div style={{overflowY: 'scroll', height: '165px'}}>            \r\n                <Editor \r\n                  placeholder = \"      Text Here\"\r\n                  toolbarHidden\r\n                  editorClassName=\"sypp-editor-class\"\r\n                  editorState={this.state.editorState}\r\n                  onEditorStateChange={this._handleChange}\r\n                  keyBindingFn={this.myKeyBindingFn}\r\n                />\r\n                </div>\r\n                </div>\r\n                <div className = \"sypp-event-bottom-options-container\">\r\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSave}>Save</button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EventDetail","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\EventSelectDate.js",["460","461","462","463"],"import React, {Component} from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport CalendarComponent from './../../calendar/CalendarComponent';\r\n// import { Dropdown } from 'semantic-ui-react'\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport './CreateEvent.scss'\r\nimport { min } from 'moment';\r\n\r\nclass EventSelectDate extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            visible : true,\r\n            hourDropDown: false,\r\n            minuteDropDown: false,\r\n            hour : '',\r\n            minute : '',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.eventHour != 0){\r\n            this.setState({\r\n                hour : this.props.eventHour\r\n            })\r\n        }\r\n        if(this.props.eventMinute != 0){\r\n            this.setState({\r\n                minute : this.props.eventMinute\r\n            })\r\n        }\r\n    }\r\n\r\n    expandCalendar = () =>{\r\n        this.setState({\r\n            visible : true,\r\n            hourDropDown : false,\r\n            minuteDropDown: false,\r\n        })\r\n    }\r\n    onClickDropDownHour = () =>{\r\n        this.setState({\r\n            visible : false\r\n        })\r\n        if(!this.state.hourDropDown){\r\n        this.setState({\r\n            hourDropDown : true,\r\n        })\r\n        }\r\n        else{\r\n            this.setState({\r\n                hourDropDown : false,\r\n            })\r\n        }\r\n    }\r\n    onClickDropDownMin = () =>{\r\n        this.setState({\r\n            visible : false\r\n        })\r\n        if(!this.state.minuteDropDown){\r\n        this.setState({\r\n            minuteDropDown : true,\r\n        })\r\n        }\r\n        else{\r\n            this.setState({\r\n                minuteDropDown : false,\r\n            })\r\n        }\r\n    }\r\n    onSelectHour = (e) =>{\r\n        console.log('triggered?')\r\n        this.setState({\r\n            hour: e.target.getAttribute('value')\r\n        })\r\n    }\r\n    onSelectMin = (e) =>{\r\n        console.log('triggered?')\r\n        this.setState({\r\n            minute: e.target.getAttribute('value')\r\n        })\r\n    }\r\n    onChangeTime = (e) => {\r\n        this.setState({\r\n            hour : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangeMinute = (e) => {\r\n        this.setState({\r\n            minute : e.currentTarget.value\r\n        })\r\n    }\r\n    onClickSelectDate = () => {\r\n        var hour = this.state.hour\r\n        var minute = this.state.minute\r\n        if(this.state.hour === ''){\r\n            hour = 0\r\n        }\r\n        if(this.state.minute === ''){\r\n            minute = 0\r\n        }\r\n        var date = new Date(this.props.eventDate);\r\n        if(this.props.eventDate === ''){\r\n            date = new Date()\r\n        }\r\n        date.setHours(hour);\r\n        date.setMinutes(minute)\r\n        const time = hour +\":\"+ minute\r\n        console.log(time)\r\n        this.props.onChangeHour(this.state.hour)\r\n        this.props.onChangeMinute(this.state.minute)\r\n        this.props.onChangeDate(date)\r\n        this.props.prevStep();\r\n    }\r\n    onClickRemoveSelection = () => {\r\n        this.setState({\r\n            hour:'',\r\n            minute: ''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className = \"sypp-event-date-title\">Date</div>\r\n                <div className = \"sypp-event-calendar\">\r\n                {this.state.visible?<CalendarComponent calendarChange = {this.props.onChangeDate}/> : <div className = \"sypp-event-calendar-collapsed\" onClick = {this.expandCalendar}>...</div> }\r\n                </div>\r\n                <div className = \"sypp-event-date-title2\">Time</div>\r\n                <div  className = \"sypp-time-container\">\r\n                <div className = \"sypp-time-hour-container\">\r\n                    <input placeholder = \"HH\" value = {this.state.hour} className = \"sypp-time-inputfield\" onChange = {e => this.onChangeTime(e)}/> \r\n                    {/* <button onClick = {this.onClickDropDownHour}>D</button> */}\r\n                    <FontAwesomeIcon className =\"sypp-event-dropdown-button\" icon={faCaretUp} onClick = {this.onClickDropDownHour}/>  \r\n                    {this.state.hourDropDown? \r\n                        <div className = \"sypp-dropdown-container\" style={{overflowY: 'scroll', height: '200px'}}>\r\n                        {(hour.map((data) => (\r\n                        <button className = \"sypp-timepicking-button\" onClick = {e => this.onSelectHour(e)} value = {data.value}> {data.text} </button>\r\n                        )))}\r\n                        </div> :undefined\r\n                    }\r\n                    </div>\r\n                    <div>\r\n                    <input placeholder = \"MM\" value = {this.state.minute} className = \"sypp-time-inputfield\" onChange = {e => this.onChangeMinute(e)}/> \r\n                    {/* <button onClick = {this.onClickDropDownMin}>D</button> */}\r\n                    <FontAwesomeIcon className =\"sypp-event-dropdown-button\" icon={faCaretUp} onClick = {this.onClickDropDownMin}/>  \r\n\r\n                    {this.state.minuteDropDown? \r\n                        <div className = \"sypp-dropdown-container\" style={{overflowY: 'scroll', height: '200px'}}>\r\n                        {(minute.map((data) => (\r\n                        <button className = \"sypp-timepicking-button\" onClick = {e => this.onSelectMin(e)} value = {data.value}> {data.text} </button>\r\n                        )))}\r\n                        </div> :undefined\r\n                    }\r\n                    </div>\r\n                </div>\r\n                <div className = \"sypp-event-bottom-options-container\">\r\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page2\" onClick = {this.onClickRemoveSelection}>\r\n                        Remove Selection\r\n                    </button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page2\" onClick = {this.onClickSelectDate}>\r\n                        {\"Select Date & Time\"}\r\n                    </button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page2\" onClick = {e => this.props.handleClose()}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EventSelectDate\r\n\r\nconst hour = [\r\n    {\r\n    key: '0',\r\n    text: '0',\r\n    value: '0',\r\n    },\r\n    {\r\n    key: '1',\r\n    text: '1',\r\n    value: '1',\r\n    },\r\n    {\r\n    key: '2',\r\n    text: '2',\r\n    value: '2',\r\n    },\r\n    {\r\n    key: '3',\r\n    text: '3',\r\n    value: '3',\r\n    },\r\n    {\r\n    key: '4',\r\n    text: '4',\r\n    value: '4',\r\n    },\r\n    {\r\n    key: '5',\r\n    text: '5',\r\n    value: '5',\r\n    },\r\n    {\r\n    key: '6',\r\n    text: '6',\r\n    value: '6',\r\n    },\r\n    {\r\n    key: '7',\r\n    text: '7',\r\n    value: '7',\r\n    },\r\n    {\r\n    key: '8',\r\n    text: '8',\r\n    value: '8',\r\n    },\r\n    {\r\n    key: '9',\r\n    text: '9',\r\n    value: '9',\r\n    },\r\n    {\r\n    key: '10',\r\n    text: '10',\r\n    value: '0',\r\n    },\r\n    {\r\n    key: '11',\r\n    text: '11',\r\n    value: '11',\r\n    },\r\n    {\r\n    key: '12',\r\n    text: '12',\r\n    value: '12',\r\n    },\r\n    {\r\n    key: '13',\r\n    text: '13',\r\n    value: '13',\r\n    },\r\n    {\r\n    key: '14',\r\n    text: '14',\r\n    value: '14',\r\n    },\r\n    {\r\n    key: '15',\r\n    text: '15',\r\n    value: '15',\r\n    },\r\n    {\r\n    key: '16',\r\n    text: '16',\r\n    value: '16',\r\n    },\r\n    {\r\n    key: '17',\r\n    text: '17',\r\n    value: '17',\r\n    },\r\n    {\r\n    key: '18',\r\n    text: '18',\r\n    value: '18',\r\n    },\r\n    {\r\n    key: '19',\r\n    text: '19',\r\n    value: '19',\r\n    },\r\n    {\r\n    key: '20',\r\n    text: '20',\r\n    value: '20',\r\n    },\r\n    {\r\n    key: '21',\r\n    text: '21',\r\n    value: '21',\r\n    },\r\n    {\r\n    key: '22',\r\n    text: '22',\r\n    value: '22',\r\n    },\r\n    {\r\n    key: '23',\r\n    text: '23',\r\n    value: '23',\r\n    },\r\n    {\r\n    key: '24',\r\n    text: '24',\r\n    value: '24',\r\n    },\r\n]\r\n\r\nconst minute = [\r\n    {\r\n    key: '0',\r\n    text: '0',\r\n    value: '0',\r\n    },\r\n    {\r\n    key: '1',\r\n    text: '1',\r\n    value: '1',\r\n    },\r\n    {\r\n    key: '2',\r\n    text: '2',\r\n    value: '2',\r\n    },\r\n    {\r\n    key: '3',\r\n    text: '3',\r\n    value: '3',\r\n    },\r\n    {\r\n    key: '4',\r\n    text: '4',\r\n    value: '4',\r\n    },\r\n    {\r\n    key: '5',\r\n    text: '5',\r\n    value: '5',\r\n    },\r\n    {\r\n    key: '6',\r\n    text: '6',\r\n    value: '6',\r\n    },\r\n    {\r\n    key: '7',\r\n    text: '7',\r\n    value: '7',\r\n    },\r\n    {\r\n    key: '8',\r\n    text: '8',\r\n    value: '8',\r\n    },\r\n    {\r\n    key: '9',\r\n    text: '9',\r\n    value: '9',\r\n    },\r\n    {\r\n    key: '10',\r\n    text: '10',\r\n    value: '10',\r\n    },\r\n    {\r\n    key: '11',\r\n    text: '11',\r\n    value: '11',\r\n    },\r\n    {\r\n    key: '12',\r\n    text: '12',\r\n    value: '12',\r\n    },\r\n    {\r\n    key: '13',\r\n    text: '13',\r\n    value: '13',\r\n    },\r\n    {\r\n    key: '14',\r\n    text: '14',\r\n    value: '14',\r\n    },\r\n    {\r\n    key: '15',\r\n    text: '15',\r\n    value: '15',\r\n    },\r\n    {\r\n    key: '16',\r\n    text: '16',\r\n    value: '16',\r\n    },\r\n    {\r\n    key: '17',\r\n    text: '17',\r\n    value: '17',\r\n    },\r\n    {\r\n    key: '18',\r\n    text: '18',\r\n    value: '18',\r\n    },\r\n    {\r\n    key: '19',\r\n    text: '19',\r\n    value: '19',\r\n    },\r\n    {\r\n    key: '20',\r\n    text: '20',\r\n    value: '20',\r\n    },\r\n    {\r\n    key: '21',\r\n    text: '21',\r\n    value: '21',\r\n    },\r\n    {\r\n    key: '22',\r\n    text: '22',\r\n    value: '22',\r\n    },\r\n    {\r\n    key: '23',\r\n    text: '23',\r\n    value: '23',\r\n    },\r\n    {\r\n    key: '24',\r\n    text: '24',\r\n    value: '24',\r\n    },\r\n    {\r\n    key: '25',\r\n    text: '25',\r\n    value: '25',\r\n    },\r\n    {\r\n    key: '26',\r\n    text: '26',\r\n    value: '26',\r\n    },\r\n    {\r\n    key: '27',\r\n    text: '27',\r\n    value: '27',\r\n    },\r\n    {\r\n    key: '28',\r\n    text: '28',\r\n    value: '28',\r\n    },\r\n    {\r\n    key: '29',\r\n    text: '29',\r\n    value: '29',\r\n    },\r\n    {\r\n    key: '30',\r\n    text: '30',\r\n    value: '30',\r\n    },\r\n    {\r\n    key: '31',\r\n    text: '31',\r\n    value: '31',\r\n    },\r\n    {\r\n    key: '32',\r\n    text: '32',\r\n    value: '32',\r\n    },\r\n    {\r\n    key: '33',\r\n    text: '33',\r\n    value: '33',\r\n    },\r\n    {\r\n    key: '34',\r\n    text: '34',\r\n    value: '34',\r\n    },\r\n    {\r\n    key: '35',\r\n    text: '35',\r\n    value: '35',\r\n    },\r\n    {\r\n    key: '35',\r\n    text: '36',\r\n    value: '36',\r\n    },\r\n    {\r\n    key: '37',\r\n    text: '37',\r\n    value: '37',\r\n    },\r\n    {\r\n    key: '38',\r\n    text: '38',\r\n    value: '38',\r\n    },\r\n    {\r\n    key: '39',\r\n    text: '39',\r\n    value: '39',\r\n    },\r\n    {\r\n    key: '40',\r\n    text: '40',\r\n    value: '40',\r\n    },\r\n    {\r\n    key: '41',\r\n    text: '41',\r\n    value: '41',\r\n    },\r\n    {\r\n    key: '42',\r\n    text: '42',\r\n    value: '42',\r\n    },\r\n    {\r\n    key: '43',\r\n    text: '43',\r\n    value: '43',\r\n    },\r\n    {\r\n    key: '44',\r\n    text: '44',\r\n    value: '44',\r\n    },\r\n    {\r\n    key: '45',\r\n    text: '45',\r\n    value: '45',\r\n    },\r\n    {\r\n    key: '46',\r\n    text: '46',\r\n    value: '46',\r\n    },\r\n    {\r\n    key: '47',\r\n    text: '47',\r\n    value: '47',\r\n    },\r\n    {\r\n    key: '48',\r\n    text: '48',\r\n    value: '48',\r\n    },\r\n    {\r\n    key: '49',\r\n    text: '49',\r\n    value: '49',\r\n    },\r\n    {\r\n    key: '50',\r\n    text: '50',\r\n    value: '50',\r\n    },\r\n    {\r\n    key: '51',\r\n    text: '51',\r\n    value: '51',\r\n    },\r\n    {\r\n    key: '52',\r\n    text: '52',\r\n    value: '52',\r\n    },\r\n    {\r\n    key: '53',\r\n    text: '53',\r\n    value: '53',\r\n    },\r\n    {\r\n    key: '54',\r\n    text: '54',\r\n    value: '54',\r\n    },\r\n    {\r\n    key: '55',\r\n    text: '55',\r\n    value: '55',\r\n    },\r\n    {\r\n    key: '56',\r\n    text: '56',\r\n    value: '56',\r\n    },\r\n    {\r\n    key: '57',\r\n    text: '57',\r\n    value: '57',\r\n    },\r\n    {\r\n    key: '58',\r\n    text: '58',\r\n    value: '58',\r\n    },\r\n    {\r\n    key: '59',\r\n    text: '59',\r\n    value: '59',\r\n    },\r\n    {\r\n    key: '60',\r\n    text: '60',\r\n    value: '60',\r\n    },\r\n]","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\ConversationDetail.js",["464","465","466","467"],"import React, {Component} from 'react';\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\nimport Moment from 'moment';\r\n\r\n\r\nclass ConversationDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n          editorState: ''\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.FollowUp !== ''){\r\n          const contentBlocksArray = []\r\n            for (var i=0;i<this.props.FollowUp.description.length;i++){\r\n                if(this.props.FollowUp.description.length !== 0){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: this.props.FollowUp.description[i].noteContentsID,\r\n                            type: 'unordered-list-item',\r\n                            depth: 0,\r\n                            text: this.props.FollowUp.description[i].header\r\n                        })\r\n                    )\r\n                    for(var j=0;j<this.props.FollowUp.description[i].contents_Text.length;j++){\r\n                        contentBlocksArray.push(\r\n                            new ContentBlock({\r\n                                key: genKey(),\r\n                                type: 'unordered-list-item',\r\n                                depth: 1,\r\n                                text: this.props.FollowUp.description[i].contents_Text[j]\r\n                            })\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                editorState : EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray))\r\n            })\r\n        }\r\n    }\r\n\r\n    onSave = () =>{\r\n      this.props.onSaveButton(this.state.editorState);\r\n    }\r\n\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    \r\n    _handleChange = (editorState) => {\r\n      console.log(this.state.editorState)\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({editorState});\r\n      }\r\n      this.props.handleEditorState(this.state.editorState);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div >\r\n                <div className = \"sypp-event-detail-container\">\r\n                <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.props.onChangeName(e)}\r\n                value={this.props.name}\r\n                />\r\n                <input\r\n                className = \"sypp-contact-name-subTitle\"\r\n                placeholder=\"Contact Position Here\"\r\n                onChange={e => this.props.onChangePosition(e)}\r\n                value={this.props.position}\r\n                />\r\n                <div className =\"sypp-event-seperateLine\"></div>\r\n                <div className = \"sypp-event-title\">Conversation Date</div>\r\n                {this.props.time === ''?                 \r\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\r\n                    Select Date\r\n                </button>:\r\n                <div className = \"sypp-event-datepick-resultDate-container\">\r\n                <div className = \"sypp-event-datepick-resultDate\">{Moment(this.props.time).format('MMM DD, YYYY • h:mma')}</div>\r\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\r\n                Edit Date\r\n                </button>\r\n                </div>\r\n                }\r\n                <div className =\"sypp-event-seperateLine\"></div>\r\n\r\n                <div className = \"sypp-event-title\">Note</div>  \r\n                <div style={{overflowY: 'scroll', height: '200px'}}>\r\n                  <Editor \r\n                  placeholder = \"      Text Here\"\r\n                  toolbarHidden\r\n                  editorClassName=\"sypp-editor-class\"\r\n                  editorState={this.state.editorState}\r\n                  onEditorStateChange={this._handleChange}\r\n                  keyBindingFn={this.myKeyBindingFn}\r\n                  />\r\n                </div>\r\n                </div>\r\n                <div className = \"sypp-event-bottom-options-container\">\r\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSave}>Save</button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ConversationDetail","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\ConversationDate.js",["468","469","470","471"],"import React, {Component} from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport CalendarComponent from './../../calendar/CalendarComponent';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport './CreateEditConversation.scss'\r\nimport { min } from 'moment';\r\n\r\nclass ConversationDate extends Component {\r\n\r\n    onClickRemoveSelection = () => {\r\n        this.setState({})\r\n        this.props.onChangeDate(new Date())\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className = \"sypp-event-date-title\">Date</div>\r\n                <div className = \"sypp-event-calendar\">\r\n                <CalendarComponent calendarChange = {this.props.onChangeDate}/> \r\n                </div>\r\n                <div className = \"sypp-event-bottom-options-container\">\r\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page2\" onClick = {this.onClickRemoveSelection}>\r\n                        Remove Date\r\n                    </button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page2\" onClick = {this.props.prevStep}>\r\n                        {\"Select Date\"}\r\n                    </button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page2\" onClick = {this.props.handleClose}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ConversationDate","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\company-reducer\\companyReducer.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\company-reducer\\companyAction.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarWeekview.js",["472"],"import React, {Component} from 'react';\r\nimport Moment from 'moment';\r\nimport CalendarDetail from './CalendarDetail'\r\nimport './CalendarMain.scss'\r\nimport './../sypp_applications/ApplicationsMain.scss'\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n    }\r\n}\r\n  \r\n\r\nfunction addDays(date, days) {\r\n    var result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n}\r\n\r\nclass ApplicationWeekview extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n          favoriteType : \"\"\r\n        }\r\n      }\r\n      onChangefavoriteType = (favType) =>{\r\n        this.setState({\r\n          favoriteType : favType\r\n        })\r\n      }\r\n    // dateDisplay = () => {\r\n\r\n    //     return (\r\n\r\n    //     )\r\n    // }\r\n    render(){\r\n        var date = new Date();\r\n        var taskArray = []\r\n        let weekDays = [];\r\n\r\n        for(var i=0; i<this.props.apps.length; i++){\r\n          if(this.props.apps[i].tasks.length !== 0){\r\n            for(var j=0;j<this.props.apps[i].tasks.length;j++){\r\n              taskArray.push({\r\n                CompanyName : this.props.apps[i].detail.companyName,\r\n                PositionName : this.props.apps[i].detail.positionName,\r\n                Task : this.props.apps[i].tasks[j],\r\n                Time : this.props.apps[i].tasks[j].time,\r\n                type : 'application',\r\n                id : this.props.apps[i].applicationID,\r\n                isFavorite : this.props.apps[i].tasks[j].isFavorite\r\n              })\r\n            }    \r\n          }\r\n        }\r\n        for (var i = 0; i < 7; i++) {\r\n            weekDays.push(\r\n                <Weekday date = {addDays(date,i)} taskArray = {taskArray} number = {addDays(date,i).getDate()} key = {addDays(date,i).toString()} isToday = {true} isCurrentMonth = {true}/>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div className = \"sypp-weeklyDeadline-container\">\r\n                {weekDays}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStatetoProps, null)(ApplicationWeekview)\r\n\r\nclass Weekday extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n          favoriteType : \"\"\r\n        }\r\n      }\r\n      onChangefavoriteType = (favType) =>{\r\n        this.setState({\r\n          favoriteType : favType\r\n        })\r\n      }\r\n      render(){\r\n          return(\r\n            <div className = {\"sypp-weeklyDealine-individual \" + (this.state.favoriteType)}>\r\n                <div className = \"sypp-weekday-day\">{Moment(addDays(this.props.date,0)).format('ddd(MMM DD)')}</div>\r\n                <CalendarDetail date ={this.props.date} taskArray = {this.props.taskArray} number = {this.props.number} key = {this.props.key} isToday = {this.props.isToday} \r\n                isCurrentMonth = {this.props.isCurrentMonth} favoriteType = {this.state.favoriteType} onChangefavoriteType = {this.onChangefavoriteType}/>\r\n            </div>\r\n          );\r\n      }\r\n}","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_companies\\CompanyMain.js",["473","474"],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_companies\\company_list\\CompanyList.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_companies\\company_detail\\CompanyDetail.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_companies\\company_detail\\CompanyDetailComponents.js",["475"],{"ruleId":"476","replacedBy":"477"},{"ruleId":"478","replacedBy":"479"},{"ruleId":"480","severity":1,"message":"481","line":27,"column":11,"nodeType":"482","messageId":"483","endLine":27,"endColumn":15},{"ruleId":"480","severity":1,"message":"484","line":28,"column":11,"nodeType":"482","messageId":"483","endLine":28,"endColumn":20},{"ruleId":"480","severity":1,"message":"485","line":1,"column":8,"nodeType":"482","messageId":"483","endLine":1,"endColumn":19},{"ruleId":"480","severity":1,"message":"486","line":1,"column":17,"nodeType":"482","messageId":"483","endLine":1,"endColumn":26},{"ruleId":"480","severity":1,"message":"487","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":25},{"ruleId":"480","severity":1,"message":"488","line":1,"column":8,"nodeType":"482","messageId":"483","endLine":1,"endColumn":19},{"ruleId":"480","severity":1,"message":"489","line":1,"column":8,"nodeType":"482","messageId":"483","endLine":1,"endColumn":23},{"ruleId":"480","severity":1,"message":"490","line":12,"column":10,"nodeType":"482","messageId":"483","endLine":12,"endColumn":20},{"ruleId":"480","severity":1,"message":"491","line":13,"column":10,"nodeType":"482","messageId":"483","endLine":13,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":42,"column":40,"nodeType":"494","messageId":"495","endLine":42,"endColumn":42},{"ruleId":"492","severity":1,"message":"493","line":45,"column":48,"nodeType":"494","messageId":"495","endLine":45,"endColumn":50},{"ruleId":"492","severity":1,"message":"493","line":45,"column":79,"nodeType":"494","messageId":"495","endLine":45,"endColumn":81},{"ruleId":"492","severity":1,"message":"493","line":63,"column":48,"nodeType":"494","messageId":"495","endLine":63,"endColumn":50},{"ruleId":"492","severity":1,"message":"493","line":67,"column":56,"nodeType":"494","messageId":"495","endLine":67,"endColumn":58},{"ruleId":"492","severity":1,"message":"493","line":67,"column":87,"nodeType":"494","messageId":"495","endLine":67,"endColumn":89},{"ruleId":"496","severity":1,"message":"497","line":78,"column":44,"nodeType":"498","messageId":"499","endLine":78,"endColumn":97},{"ruleId":"492","severity":1,"message":"493","line":34,"column":19,"nodeType":"494","messageId":"495","endLine":34,"endColumn":21},{"ruleId":"480","severity":1,"message":"500","line":38,"column":13,"nodeType":"482","messageId":"483","endLine":38,"endColumn":20},{"ruleId":"501","severity":1,"message":"502","line":57,"column":21,"nodeType":"482","messageId":"503","endLine":57,"endColumn":22},{"ruleId":"480","severity":1,"message":"486","line":1,"column":17,"nodeType":"482","messageId":"483","endLine":1,"endColumn":26},{"ruleId":"480","severity":1,"message":"504","line":39,"column":12,"nodeType":"482","messageId":"483","endLine":39,"endColumn":23},{"ruleId":"501","severity":1,"message":"502","line":65,"column":25,"nodeType":"482","messageId":"503","endLine":65,"endColumn":26},{"ruleId":"480","severity":1,"message":"505","line":3,"column":8,"nodeType":"482","messageId":"483","endLine":3,"endColumn":11},{"ruleId":"480","severity":1,"message":"506","line":4,"column":8,"nodeType":"482","messageId":"483","endLine":4,"endColumn":15},{"ruleId":"507","severity":1,"message":"508","line":69,"column":25,"nodeType":"498","messageId":"509","endLine":69,"endColumn":27},{"ruleId":"510","severity":1,"message":"511","line":142,"column":13,"nodeType":"512","messageId":"513","endLine":256,"endColumn":14},{"ruleId":"480","severity":1,"message":"514","line":37,"column":15,"nodeType":"482","messageId":"483","endLine":37,"endColumn":18},{"ruleId":"480","severity":1,"message":"515","line":39,"column":15,"nodeType":"482","messageId":"483","endLine":39,"endColumn":19},{"ruleId":"510","severity":1,"message":"511","line":70,"column":9,"nodeType":"512","messageId":"513","endLine":112,"endColumn":10},{"ruleId":"480","severity":1,"message":"516","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":16},{"ruleId":"480","severity":1,"message":"517","line":3,"column":70,"nodeType":"482","messageId":"483","endLine":3,"endColumn":84},{"ruleId":"480","severity":1,"message":"518","line":3,"column":86,"nodeType":"482","messageId":"483","endLine":3,"endColumn":99},{"ruleId":"480","severity":1,"message":"519","line":4,"column":10,"nodeType":"482","messageId":"483","endLine":4,"endColumn":16},{"ruleId":"480","severity":1,"message":"520","line":9,"column":10,"nodeType":"482","messageId":"483","endLine":9,"endColumn":19},{"ruleId":"480","severity":1,"message":"491","line":10,"column":10,"nodeType":"482","messageId":"483","endLine":10,"endColumn":25},{"ruleId":"480","severity":1,"message":"521","line":18,"column":47,"nodeType":"482","messageId":"483","endLine":18,"endColumn":59},{"ruleId":"480","severity":1,"message":"522","line":18,"column":61,"nodeType":"482","messageId":"483","endLine":18,"endColumn":78},{"ruleId":"480","severity":1,"message":"523","line":18,"column":80,"nodeType":"482","messageId":"483","endLine":18,"endColumn":91},{"ruleId":"480","severity":1,"message":"524","line":18,"column":93,"nodeType":"482","messageId":"483","endLine":18,"endColumn":104},{"ruleId":"480","severity":1,"message":"525","line":18,"column":106,"nodeType":"482","messageId":"483","endLine":18,"endColumn":118},{"ruleId":"480","severity":1,"message":"526","line":29,"column":8,"nodeType":"482","messageId":"483","endLine":29,"endColumn":26},{"ruleId":"492","severity":1,"message":"493","line":70,"column":41,"nodeType":"494","messageId":"495","endLine":70,"endColumn":43},{"ruleId":"527","severity":1,"message":"528","line":86,"column":11,"nodeType":"529","messageId":"530","endLine":87,"endColumn":44},{"ruleId":"492","severity":1,"message":"531","line":135,"column":45,"nodeType":"494","messageId":"495","endLine":135,"endColumn":47},{"ruleId":"480","severity":1,"message":"516","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":16},{"ruleId":"480","severity":1,"message":"532","line":3,"column":10,"nodeType":"482","messageId":"483","endLine":3,"endColumn":27},{"ruleId":"480","severity":1,"message":"533","line":3,"column":29,"nodeType":"482","messageId":"483","endLine":3,"endColumn":38},{"ruleId":"480","severity":1,"message":"534","line":3,"column":40,"nodeType":"482","messageId":"483","endLine":3,"endColumn":52},{"ruleId":"480","severity":1,"message":"535","line":3,"column":62,"nodeType":"482","messageId":"483","endLine":3,"endColumn":74},{"ruleId":"480","severity":1,"message":"536","line":3,"column":76,"nodeType":"482","messageId":"483","endLine":3,"endColumn":87},{"ruleId":"480","severity":1,"message":"517","line":3,"column":89,"nodeType":"482","messageId":"483","endLine":3,"endColumn":103},{"ruleId":"480","severity":1,"message":"518","line":3,"column":105,"nodeType":"482","messageId":"483","endLine":3,"endColumn":118},{"ruleId":"480","severity":1,"message":"519","line":4,"column":10,"nodeType":"482","messageId":"483","endLine":4,"endColumn":16},{"ruleId":"480","severity":1,"message":"520","line":12,"column":10,"nodeType":"482","messageId":"483","endLine":12,"endColumn":19},{"ruleId":"480","severity":1,"message":"537","line":21,"column":9,"nodeType":"482","messageId":"483","endLine":21,"endColumn":29},{"ruleId":"480","severity":1,"message":"521","line":21,"column":47,"nodeType":"482","messageId":"483","endLine":21,"endColumn":59},{"ruleId":"480","severity":1,"message":"522","line":21,"column":61,"nodeType":"482","messageId":"483","endLine":21,"endColumn":78},{"ruleId":"480","severity":1,"message":"523","line":21,"column":80,"nodeType":"482","messageId":"483","endLine":21,"endColumn":91},{"ruleId":"480","severity":1,"message":"524","line":21,"column":93,"nodeType":"482","messageId":"483","endLine":21,"endColumn":104},{"ruleId":"480","severity":1,"message":"525","line":21,"column":106,"nodeType":"482","messageId":"483","endLine":21,"endColumn":118},{"ruleId":"480","severity":1,"message":"526","line":28,"column":10,"nodeType":"482","messageId":"483","endLine":28,"endColumn":28},{"ruleId":"501","severity":1,"message":"502","line":88,"column":17,"nodeType":"482","messageId":"503","endLine":88,"endColumn":18},{"ruleId":"501","severity":1,"message":"538","line":90,"column":21,"nodeType":"482","messageId":"503","endLine":90,"endColumn":22},{"ruleId":"501","severity":1,"message":"539","line":92,"column":25,"nodeType":"482","messageId":"503","endLine":92,"endColumn":26},{"ruleId":"480","severity":1,"message":"516","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":16},{"ruleId":"480","severity":1,"message":"519","line":4,"column":10,"nodeType":"482","messageId":"483","endLine":4,"endColumn":16},{"ruleId":"480","severity":1,"message":"520","line":9,"column":10,"nodeType":"482","messageId":"483","endLine":9,"endColumn":19},{"ruleId":"480","severity":1,"message":"491","line":10,"column":10,"nodeType":"482","messageId":"483","endLine":10,"endColumn":25},{"ruleId":"480","severity":1,"message":"525","line":12,"column":47,"nodeType":"482","messageId":"483","endLine":12,"endColumn":59},{"ruleId":"480","severity":1,"message":"526","line":20,"column":8,"nodeType":"482","messageId":"483","endLine":20,"endColumn":26},{"ruleId":"492","severity":1,"message":"493","line":74,"column":41,"nodeType":"494","messageId":"495","endLine":74,"endColumn":43},{"ruleId":"527","severity":1,"message":"528","line":90,"column":11,"nodeType":"529","messageId":"530","endLine":91,"endColumn":44},{"ruleId":"492","severity":1,"message":"531","line":131,"column":45,"nodeType":"494","messageId":"495","endLine":131,"endColumn":47},{"ruleId":"480","severity":1,"message":"516","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":16},{"ruleId":"480","severity":1,"message":"532","line":3,"column":10,"nodeType":"482","messageId":"483","endLine":3,"endColumn":27},{"ruleId":"480","severity":1,"message":"533","line":3,"column":29,"nodeType":"482","messageId":"483","endLine":3,"endColumn":38},{"ruleId":"480","severity":1,"message":"534","line":3,"column":40,"nodeType":"482","messageId":"483","endLine":3,"endColumn":52},{"ruleId":"480","severity":1,"message":"540","line":3,"column":54,"nodeType":"482","messageId":"483","endLine":3,"endColumn":60},{"ruleId":"480","severity":1,"message":"535","line":3,"column":62,"nodeType":"482","messageId":"483","endLine":3,"endColumn":74},{"ruleId":"480","severity":1,"message":"536","line":3,"column":76,"nodeType":"482","messageId":"483","endLine":3,"endColumn":87},{"ruleId":"480","severity":1,"message":"517","line":3,"column":89,"nodeType":"482","messageId":"483","endLine":3,"endColumn":103},{"ruleId":"480","severity":1,"message":"518","line":3,"column":105,"nodeType":"482","messageId":"483","endLine":3,"endColumn":118},{"ruleId":"480","severity":1,"message":"537","line":4,"column":9,"nodeType":"482","messageId":"483","endLine":4,"endColumn":29},{"ruleId":"480","severity":1,"message":"541","line":4,"column":31,"nodeType":"482","messageId":"483","endLine":4,"endColumn":45},{"ruleId":"480","severity":1,"message":"521","line":4,"column":47,"nodeType":"482","messageId":"483","endLine":4,"endColumn":59},{"ruleId":"480","severity":1,"message":"522","line":4,"column":61,"nodeType":"482","messageId":"483","endLine":4,"endColumn":78},{"ruleId":"480","severity":1,"message":"523","line":4,"column":80,"nodeType":"482","messageId":"483","endLine":4,"endColumn":91},{"ruleId":"480","severity":1,"message":"524","line":4,"column":93,"nodeType":"482","messageId":"483","endLine":4,"endColumn":104},{"ruleId":"480","severity":1,"message":"525","line":4,"column":106,"nodeType":"482","messageId":"483","endLine":4,"endColumn":118},{"ruleId":"480","severity":1,"message":"519","line":6,"column":10,"nodeType":"482","messageId":"483","endLine":6,"endColumn":16},{"ruleId":"480","severity":1,"message":"520","line":11,"column":10,"nodeType":"482","messageId":"483","endLine":11,"endColumn":19},{"ruleId":"480","severity":1,"message":"491","line":12,"column":10,"nodeType":"482","messageId":"483","endLine":12,"endColumn":25},{"ruleId":"492","severity":1,"message":"531","line":74,"column":55,"nodeType":"494","messageId":"495","endLine":74,"endColumn":57},{"ruleId":"542","severity":1,"message":"543","line":93,"column":168,"nodeType":"544","endLine":93,"endColumn":200},{"ruleId":"480","severity":1,"message":"545","line":1,"column":27,"nodeType":"482","messageId":"483","endLine":1,"endColumn":35},{"ruleId":"510","severity":1,"message":"511","line":28,"column":9,"nodeType":"512","messageId":"513","endLine":60,"endColumn":10},{"ruleId":"492","severity":1,"message":"531","line":49,"column":55,"nodeType":"494","messageId":"495","endLine":49,"endColumn":57},{"ruleId":"492","severity":1,"message":"493","line":80,"column":38,"nodeType":"494","messageId":"495","endLine":80,"endColumn":40},{"ruleId":"492","severity":1,"message":"531","line":84,"column":22,"nodeType":"494","messageId":"495","endLine":84,"endColumn":24},{"ruleId":"480","severity":1,"message":"546","line":4,"column":8,"nodeType":"482","messageId":"483","endLine":4,"endColumn":17},{"ruleId":"480","severity":1,"message":"547","line":5,"column":10,"nodeType":"482","messageId":"483","endLine":5,"endColumn":20},{"ruleId":"492","severity":1,"message":"493","line":63,"column":19,"nodeType":"494","messageId":"495","endLine":63,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":84,"column":9,"nodeType":"512","messageId":"513","endLine":114,"endColumn":10},{"ruleId":"480","severity":1,"message":"541","line":5,"column":31,"nodeType":"482","messageId":"483","endLine":5,"endColumn":45},{"ruleId":"480","severity":1,"message":"525","line":5,"column":47,"nodeType":"482","messageId":"483","endLine":5,"endColumn":59},{"ruleId":"480","severity":1,"message":"548","line":8,"column":16,"nodeType":"482","messageId":"483","endLine":8,"endColumn":22},{"ruleId":"480","severity":1,"message":"549","line":43,"column":13,"nodeType":"482","messageId":"483","endLine":43,"endColumn":24},{"ruleId":"501","severity":1,"message":"550","line":91,"column":17,"nodeType":"482","messageId":"503","endLine":91,"endColumn":31},{"ruleId":"501","severity":1,"message":"502","line":115,"column":21,"nodeType":"482","messageId":"503","endLine":115,"endColumn":22},{"ruleId":"501","severity":1,"message":"551","line":135,"column":17,"nodeType":"482","messageId":"503","endLine":135,"endColumn":21},{"ruleId":"501","severity":1,"message":"502","line":136,"column":21,"nodeType":"482","messageId":"503","endLine":136,"endColumn":22},{"ruleId":"501","severity":1,"message":"502","line":161,"column":21,"nodeType":"482","messageId":"503","endLine":161,"endColumn":22},{"ruleId":"501","severity":1,"message":"552","line":181,"column":17,"nodeType":"482","messageId":"503","endLine":181,"endColumn":26},{"ruleId":"501","severity":1,"message":"502","line":182,"column":21,"nodeType":"482","messageId":"503","endLine":182,"endColumn":22},{"ruleId":"501","severity":1,"message":"538","line":185,"column":29,"nodeType":"482","messageId":"503","endLine":185,"endColumn":30},{"ruleId":"492","severity":1,"message":"493","line":225,"column":41,"nodeType":"494","messageId":"495","endLine":225,"endColumn":43},{"ruleId":"527","severity":1,"message":"528","line":241,"column":11,"nodeType":"529","messageId":"530","endLine":242,"endColumn":44},{"ruleId":"480","severity":1,"message":"533","line":3,"column":10,"nodeType":"482","messageId":"483","endLine":3,"endColumn":19},{"ruleId":"480","severity":1,"message":"537","line":5,"column":9,"nodeType":"482","messageId":"483","endLine":5,"endColumn":29},{"ruleId":"480","severity":1,"message":"541","line":5,"column":31,"nodeType":"482","messageId":"483","endLine":5,"endColumn":45},{"ruleId":"480","severity":1,"message":"525","line":5,"column":47,"nodeType":"482","messageId":"483","endLine":5,"endColumn":59},{"ruleId":"480","severity":1,"message":"548","line":8,"column":16,"nodeType":"482","messageId":"483","endLine":8,"endColumn":22},{"ruleId":"480","severity":1,"message":"520","line":16,"column":10,"nodeType":"482","messageId":"483","endLine":16,"endColumn":19},{"ruleId":"501","severity":1,"message":"502","line":109,"column":21,"nodeType":"482","messageId":"503","endLine":109,"endColumn":22},{"ruleId":"501","severity":1,"message":"551","line":127,"column":17,"nodeType":"482","messageId":"503","endLine":127,"endColumn":21},{"ruleId":"501","severity":1,"message":"502","line":128,"column":21,"nodeType":"482","messageId":"503","endLine":128,"endColumn":22},{"ruleId":"501","severity":1,"message":"502","line":149,"column":21,"nodeType":"482","messageId":"503","endLine":149,"endColumn":22},{"ruleId":"501","severity":1,"message":"552","line":166,"column":17,"nodeType":"482","messageId":"503","endLine":166,"endColumn":26},{"ruleId":"501","severity":1,"message":"502","line":167,"column":21,"nodeType":"482","messageId":"503","endLine":167,"endColumn":22},{"ruleId":"501","severity":1,"message":"538","line":169,"column":29,"nodeType":"482","messageId":"503","endLine":169,"endColumn":30},{"ruleId":"501","severity":1,"message":"553","line":222,"column":21,"nodeType":"482","messageId":"503","endLine":222,"endColumn":33},{"ruleId":"480","severity":1,"message":"533","line":5,"column":10,"nodeType":"482","messageId":"483","endLine":5,"endColumn":19},{"ruleId":"480","severity":1,"message":"534","line":5,"column":21,"nodeType":"482","messageId":"483","endLine":5,"endColumn":33},{"ruleId":"480","severity":1,"message":"535","line":5,"column":43,"nodeType":"482","messageId":"483","endLine":5,"endColumn":55},{"ruleId":"480","severity":1,"message":"536","line":5,"column":57,"nodeType":"482","messageId":"483","endLine":5,"endColumn":68},{"ruleId":"480","severity":1,"message":"519","line":6,"column":10,"nodeType":"482","messageId":"483","endLine":6,"endColumn":16},{"ruleId":"480","severity":1,"message":"537","line":7,"column":9,"nodeType":"482","messageId":"483","endLine":7,"endColumn":29},{"ruleId":"480","severity":1,"message":"541","line":7,"column":31,"nodeType":"482","messageId":"483","endLine":7,"endColumn":45},{"ruleId":"480","severity":1,"message":"525","line":7,"column":47,"nodeType":"482","messageId":"483","endLine":7,"endColumn":59},{"ruleId":"501","severity":1,"message":"502","line":96,"column":21,"nodeType":"482","messageId":"503","endLine":96,"endColumn":22},{"ruleId":"501","severity":1,"message":"551","line":119,"column":17,"nodeType":"482","messageId":"503","endLine":119,"endColumn":21},{"ruleId":"501","severity":1,"message":"502","line":120,"column":21,"nodeType":"482","messageId":"503","endLine":120,"endColumn":22},{"ruleId":"510","severity":1,"message":"511","line":251,"column":9,"nodeType":"512","messageId":"513","endLine":285,"endColumn":10},{"ruleId":"480","severity":1,"message":"533","line":5,"column":10,"nodeType":"482","messageId":"483","endLine":5,"endColumn":19},{"ruleId":"480","severity":1,"message":"534","line":5,"column":21,"nodeType":"482","messageId":"483","endLine":5,"endColumn":33},{"ruleId":"480","severity":1,"message":"535","line":5,"column":43,"nodeType":"482","messageId":"483","endLine":5,"endColumn":55},{"ruleId":"480","severity":1,"message":"536","line":5,"column":57,"nodeType":"482","messageId":"483","endLine":5,"endColumn":68},{"ruleId":"480","severity":1,"message":"519","line":6,"column":10,"nodeType":"482","messageId":"483","endLine":6,"endColumn":16},{"ruleId":"480","severity":1,"message":"537","line":7,"column":9,"nodeType":"482","messageId":"483","endLine":7,"endColumn":29},{"ruleId":"480","severity":1,"message":"541","line":7,"column":31,"nodeType":"482","messageId":"483","endLine":7,"endColumn":45},{"ruleId":"480","severity":1,"message":"525","line":7,"column":47,"nodeType":"482","messageId":"483","endLine":7,"endColumn":59},{"ruleId":"501","severity":1,"message":"502","line":92,"column":21,"nodeType":"482","messageId":"503","endLine":92,"endColumn":22},{"ruleId":"501","severity":1,"message":"551","line":113,"column":17,"nodeType":"482","messageId":"503","endLine":113,"endColumn":21},{"ruleId":"501","severity":1,"message":"502","line":114,"column":21,"nodeType":"482","messageId":"503","endLine":114,"endColumn":22},{"ruleId":"501","severity":1,"message":"502","line":140,"column":21,"nodeType":"482","messageId":"503","endLine":140,"endColumn":22},{"ruleId":"501","severity":1,"message":"552","line":162,"column":17,"nodeType":"482","messageId":"503","endLine":162,"endColumn":26},{"ruleId":"501","severity":1,"message":"502","line":163,"column":21,"nodeType":"482","messageId":"503","endLine":163,"endColumn":22},{"ruleId":"501","severity":1,"message":"538","line":165,"column":29,"nodeType":"482","messageId":"503","endLine":165,"endColumn":30},{"ruleId":"510","severity":1,"message":"511","line":227,"column":9,"nodeType":"512","messageId":"513","endLine":256,"endColumn":10},{"ruleId":"480","severity":1,"message":"541","line":5,"column":31,"nodeType":"482","messageId":"483","endLine":5,"endColumn":45},{"ruleId":"480","severity":1,"message":"525","line":5,"column":47,"nodeType":"482","messageId":"483","endLine":5,"endColumn":59},{"ruleId":"480","severity":1,"message":"548","line":8,"column":16,"nodeType":"482","messageId":"483","endLine":8,"endColumn":22},{"ruleId":"501","severity":1,"message":"502","line":122,"column":21,"nodeType":"482","messageId":"503","endLine":122,"endColumn":22},{"ruleId":"501","severity":1,"message":"551","line":151,"column":17,"nodeType":"482","messageId":"503","endLine":151,"endColumn":21},{"ruleId":"501","severity":1,"message":"502","line":152,"column":21,"nodeType":"482","messageId":"503","endLine":152,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":210,"column":41,"nodeType":"494","messageId":"495","endLine":210,"endColumn":43},{"ruleId":"527","severity":1,"message":"528","line":226,"column":11,"nodeType":"529","messageId":"530","endLine":227,"endColumn":44},{"ruleId":"480","severity":1,"message":"545","line":1,"column":28,"nodeType":"482","messageId":"483","endLine":1,"endColumn":36},{"ruleId":"480","severity":1,"message":"554","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":12},{"ruleId":"480","severity":1,"message":"555","line":18,"column":7,"nodeType":"482","messageId":"483","endLine":18,"endColumn":17},{"ruleId":"480","severity":1,"message":"556","line":181,"column":11,"nodeType":"482","messageId":"483","endLine":181,"endColumn":27},{"ruleId":"507","severity":1,"message":"508","line":193,"column":63,"nodeType":"498","messageId":"509","endLine":193,"endColumn":65},{"ruleId":"492","severity":1,"message":"493","line":194,"column":26,"nodeType":"494","messageId":"495","endLine":194,"endColumn":28},{"ruleId":"480","severity":1,"message":"557","line":222,"column":7,"nodeType":"482","messageId":"483","endLine":222,"endColumn":15},{"ruleId":"480","severity":1,"message":"558","line":224,"column":7,"nodeType":"482","messageId":"483","endLine":224,"endColumn":16},{"ruleId":"480","severity":1,"message":"559","line":226,"column":9,"nodeType":"482","messageId":"483","endLine":226,"endColumn":25},{"ruleId":"480","severity":1,"message":"560","line":230,"column":9,"nodeType":"482","messageId":"483","endLine":230,"endColumn":13},{"ruleId":"480","severity":1,"message":"486","line":1,"column":17,"nodeType":"482","messageId":"483","endLine":1,"endColumn":26},{"ruleId":"480","severity":1,"message":"561","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":14},{"ruleId":"480","severity":1,"message":"487","line":3,"column":8,"nodeType":"482","messageId":"483","endLine":3,"endColumn":25},{"ruleId":"480","severity":1,"message":"562","line":11,"column":12,"nodeType":"482","messageId":"483","endLine":11,"endColumn":19},{"ruleId":"480","severity":1,"message":"563","line":11,"column":21,"nodeType":"482","messageId":"483","endLine":11,"endColumn":31},{"ruleId":"480","severity":1,"message":"541","line":4,"column":31,"nodeType":"482","messageId":"483","endLine":4,"endColumn":45},{"ruleId":"480","severity":1,"message":"525","line":4,"column":47,"nodeType":"482","messageId":"483","endLine":4,"endColumn":59},{"ruleId":"492","severity":1,"message":"493","line":58,"column":41,"nodeType":"494","messageId":"495","endLine":58,"endColumn":43},{"ruleId":"527","severity":1,"message":"528","line":74,"column":11,"nodeType":"529","messageId":"530","endLine":75,"endColumn":44},{"ruleId":"480","severity":1,"message":"564","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":16},{"ruleId":"480","severity":1,"message":"565","line":11,"column":10,"nodeType":"482","messageId":"483","endLine":11,"endColumn":13},{"ruleId":"492","severity":1,"message":"531","line":25,"column":33,"nodeType":"494","messageId":"495","endLine":25,"endColumn":35},{"ruleId":"492","severity":1,"message":"531","line":30,"column":35,"nodeType":"494","messageId":"495","endLine":30,"endColumn":37},{"ruleId":"480","severity":1,"message":"541","line":4,"column":31,"nodeType":"482","messageId":"483","endLine":4,"endColumn":45},{"ruleId":"480","severity":1,"message":"525","line":4,"column":47,"nodeType":"482","messageId":"483","endLine":4,"endColumn":59},{"ruleId":"492","severity":1,"message":"493","line":58,"column":41,"nodeType":"494","messageId":"495","endLine":58,"endColumn":43},{"ruleId":"527","severity":1,"message":"528","line":74,"column":11,"nodeType":"529","messageId":"530","endLine":75,"endColumn":44},{"ruleId":"480","severity":1,"message":"564","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":16},{"ruleId":"480","severity":1,"message":"566","line":6,"column":10,"nodeType":"482","messageId":"483","endLine":6,"endColumn":19},{"ruleId":"480","severity":1,"message":"491","line":7,"column":10,"nodeType":"482","messageId":"483","endLine":7,"endColumn":25},{"ruleId":"480","severity":1,"message":"565","line":10,"column":10,"nodeType":"482","messageId":"483","endLine":10,"endColumn":13},{"ruleId":"501","severity":1,"message":"502","line":59,"column":18,"nodeType":"482","messageId":"503","endLine":59,"endColumn":19},{"ruleId":"480","severity":1,"message":"567","line":6,"column":9,"nodeType":"482","messageId":"483","endLine":6,"endColumn":16},{"ruleId":"480","severity":1,"message":"568","line":7,"column":9,"nodeType":"482","messageId":"483","endLine":7,"endColumn":16},{"ruleId":"510","severity":1,"message":"511","line":141,"column":13,"nodeType":"512","messageId":"513","endLine":254,"endColumn":14},"no-native-reassign",["569"],"no-negated-in-lhs",["570"],"no-unused-vars","'apps' is assigned a value but never used.","Identifier","unusedVar","'companies' is assigned a value but never used.","'AddAppTypes' is defined but never used.","'Component' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'addAppTypes' is defined but never used.","'categoriesTypes' is defined but never used.","'faTrashAlt' is defined but never used.","'FontAwesomeIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","'boolean' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'targetTitle' is assigned a value but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'app' is assigned a value but never used.","'app2' is assigned a value but never used.","'ReactDOM' is defined but never used.","'convertFromRaw' is defined but never used.","'contentBlocks' is defined but never used.","'Editor' is defined but never used.","'faListAlt' is defined but never used.","'getSelection' is defined but never used.","'getCurrentContent' is defined but never used.","'editorState' is defined but never used.","'changeDepth' is defined but never used.","'keyBindingFn' is defined but never used.","'hasCommandModifier' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","Expected '!==' and instead saw '!='.","'CharacterMetadata' is defined but never used.","'RichUtils' is defined but never used.","'ContentBlock' is defined but never used.","'ContentState' is defined but never used.","'EditorState' is defined but never used.","'getDefaultKeyBinding' is defined but never used.","'j' is already defined.","'k' is already defined.","'genKey' is defined but never used.","'KeyBindingUtil' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'MuiButton' is defined but never used.","'withStyles' is defined but never used.","'uuidv4' is defined but never used.","'editorState' is assigned a value but never used.","'newNoteContent' is already defined.","'apps' is already defined.","'companies' is already defined.","'tempCheckbox' is already defined.","'Chip' is defined but never used.","'ButtonBase' is assigned a value but never used.","'delectedCategory' is assigned a value but never used.","'onChange' is assigned a value but never used.","'onKeyDown' is assigned a value but never used.","'activeSuggestion' is assigned a value but never used.","'chip' is assigned a value but never used.","'Button' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'Calendar' is defined but never used.","'min' is defined but never used.","'faCaretUp' is defined but never used.","'setApps' is defined but never used.","'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]