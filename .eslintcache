[{"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/index.js":"1","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/reportWebVitals.js":"2","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/App.js":"3","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/store.js":"4","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/root-reducer.js":"5","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/company-reducer/companyAction.js":"6","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/application-reducer/applicationAction.js":"7","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/addApp-reducer/addAppAction.js":"8","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_main/MainPage.js":"9","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/application-reducer/applicationReducer.js":"10","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/addApp-reducer/addAppReducer.js":"11","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/company-reducer/companyReducer.js":"12","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/addApp-reducer/addAppTypes.js":"13","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/filteredProgress-reducer/filteredProgressReducer.js":"14","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/categories-reducer/categoriesReducer.js":"15","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_companies/CompanyMain.js":"16","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/ApplicationsMain.js":"17","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_calendar/CalendarMain.js":"18","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/categories-reducer/categoriesTypes.js":"19","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_calendar/CalendarWeekview.js":"20","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_calendar/CalendarDetail.js":"21","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/ApplicationDetail.js":"22","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_companies/company_list/CompanyList.js":"23","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_companies/company_detail/CompanyDetail.js":"24","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/ApplicationList.js":"25","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_companies/company_detail/CompanyDetailComponents.js":"26","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailComponents.js":"27","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/ModalBox.js":"28","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/ApplicationListProgress.js":"29","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/ApplicationListComponents.js":"30","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/UserForm.js":"31","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailEvents.js":"32","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailChecklists.js":"33","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailFollowUp.js":"34","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailContacts.js":"35","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailNotes.js":"36","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_event/CreateEditEvent.js":"37","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_contact/CreateEditContact.js":"38","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_checklist/CreateEditChecklist.js":"39","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_conversation/CreateEditConversation.js":"40","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_note/CreateEditNote.js":"41","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/filteredProgress-reducer/filteredProgressAction.js":"42","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/progress/ProgressBar.js":"43","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/RoleLocationAdd.js":"44","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/CompanyPositionAdd.js":"45","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/Applied.js":"46","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/InterviewDate.js":"47","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/page/Page.js":"48","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/newTask/NewTask.js":"49","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_event/EventSelectDate.js":"50","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_event/EventDetail.js":"51","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_conversation/ConversationDate.js":"52","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_conversation/ConversationDetail.js":"53","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/progress/Progress.js":"54","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/categories-reducer/categoriesAction.js":"55","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/calendar/CalendarComponent.js":"56","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/radio/RadioButtons.js":"57","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/chip/ChipAutocomplete.js":"58","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/newTask/NextStep.js":"59","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/newTask/NewDate.js":"60"},{"size":571,"mtime":1611991313856,"results":"61","hashOfConfig":"62"},{"size":362,"mtime":1611991313859,"results":"63","hashOfConfig":"62"},{"size":1433,"mtime":1613240597502,"results":"64","hashOfConfig":"62"},{"size":298,"mtime":1611991313859,"results":"65","hashOfConfig":"62"},{"size":656,"mtime":1613240597504,"results":"66","hashOfConfig":"62"},{"size":1479,"mtime":1613240597503,"results":"67","hashOfConfig":"62"},{"size":1114,"mtime":1611991657039,"results":"68","hashOfConfig":"62"},{"size":2045,"mtime":1611991313857,"results":"69","hashOfConfig":"62"},{"size":2183,"mtime":1617854033890,"results":"70","hashOfConfig":"62"},{"size":1873,"mtime":1611991313858,"results":"71","hashOfConfig":"62"},{"size":2511,"mtime":1611991313857,"results":"72","hashOfConfig":"62"},{"size":1845,"mtime":1613240597504,"results":"73","hashOfConfig":"62"},{"size":266,"mtime":1611991313857,"results":"74","hashOfConfig":"62"},{"size":1497,"mtime":1611991313859,"results":"75","hashOfConfig":"62"},{"size":640,"mtime":1611991313858,"results":"76","hashOfConfig":"62"},{"size":2474,"mtime":1617854033888,"results":"77","hashOfConfig":"62"},{"size":3224,"mtime":1617355865919,"results":"78","hashOfConfig":"62"},{"size":6099,"mtime":1617355865925,"results":"79","hashOfConfig":"62"},{"size":268,"mtime":1611991313858,"results":"80","hashOfConfig":"62"},{"size":2965,"mtime":1617355865926,"results":"81","hashOfConfig":"62"},{"size":5569,"mtime":1617355865925,"results":"82","hashOfConfig":"62"},{"size":3392,"mtime":1617854033882,"results":"83","hashOfConfig":"62"},{"size":4797,"mtime":1617854033890,"results":"84","hashOfConfig":"62"},{"size":3314,"mtime":1617854033889,"results":"85","hashOfConfig":"62"},{"size":2520,"mtime":1618549046141,"results":"86","hashOfConfig":"62"},{"size":14897,"mtime":1617854033889,"results":"87","hashOfConfig":"62"},{"size":14942,"mtime":1617854033883,"results":"88","hashOfConfig":"62"},{"size":1637,"mtime":1611991313862,"results":"89","hashOfConfig":"62"},{"size":14620,"mtime":1618563348968,"results":"90","hashOfConfig":"62"},{"size":6235,"mtime":1618549046143,"results":"91","hashOfConfig":"62"},{"size":3689,"mtime":1611991313863,"results":"92","hashOfConfig":"62"},{"size":6504,"mtime":1617854033886,"results":"93","hashOfConfig":"62"},{"size":7732,"mtime":1613240597505,"results":"94","hashOfConfig":"62"},{"size":4158,"mtime":1613240597505,"results":"95","hashOfConfig":"62"},{"size":5278,"mtime":1611991313864,"results":"96","hashOfConfig":"62"},{"size":6237,"mtime":1611991313865,"results":"97","hashOfConfig":"62"},{"size":11153,"mtime":1613240597503,"results":"98","hashOfConfig":"62"},{"size":11507,"mtime":1611991313853,"results":"99","hashOfConfig":"62"},{"size":13491,"mtime":1613240597502,"results":"100","hashOfConfig":"62"},{"size":10022,"mtime":1613240597502,"results":"101","hashOfConfig":"62"},{"size":11561,"mtime":1613240597503,"results":"102","hashOfConfig":"62"},{"size":421,"mtime":1611991313859,"results":"103","hashOfConfig":"62"},{"size":8035,"mtime":1611991313868,"results":"104","hashOfConfig":"62"},{"size":5802,"mtime":1611991313863,"results":"105","hashOfConfig":"62"},{"size":2246,"mtime":1611991313861,"results":"106","hashOfConfig":"62"},{"size":2286,"mtime":1611991313861,"results":"107","hashOfConfig":"62"},{"size":2024,"mtime":1611991313862,"results":"108","hashOfConfig":"62"},{"size":651,"mtime":1611991313856,"results":"109","hashOfConfig":"62"},{"size":3049,"mtime":1611991313867,"results":"110","hashOfConfig":"62"},{"size":11499,"mtime":1618549849975,"results":"111","hashOfConfig":"62"},{"size":5939,"mtime":1613240597503,"results":"112","hashOfConfig":"62"},{"size":1596,"mtime":1611991313854,"results":"113","hashOfConfig":"62"},{"size":5887,"mtime":1613240597502,"results":"114","hashOfConfig":"62"},{"size":6795,"mtime":1613628183188,"results":"115","hashOfConfig":"62"},{"size":109,"mtime":1611991313858,"results":"116","hashOfConfig":"62"},{"size":894,"mtime":1611991313852,"results":"117","hashOfConfig":"62"},{"size":2053,"mtime":1611991313856,"results":"118","hashOfConfig":"62"},{"size":8968,"mtime":1611991313853,"results":"119","hashOfConfig":"62"},{"size":2139,"mtime":1611991313868,"results":"120","hashOfConfig":"62"},{"size":1244,"mtime":1611991313867,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1shhar",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"124"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"124"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"124"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"124"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"124"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/index.js",[],["274","275"],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/reportWebVitals.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/App.js",["276","277"],"import './App.css';\nimport MainPage from './sypp_main/MainPage'\nimport React, { Component } from 'react';\nimport {requestApplication} from './redux/application-reducer/applicationAction'\nimport {setSelectedCategories} from './redux/addApp-reducer/addAppAction'\nimport {requestCompany} from './redux/company-reducer/companyAction'\nimport {connect} from 'react-redux'\n\nconst mapStatetoProps = state => {\n  return{\n      apps: state.application.applications,\n      pending: state.application.isPending,\n      categories: state.categories.categories\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onRequestApplication: () => dispatch(requestApplication()),\n    setSelectedCategories: (categories) => dispatch(setSelectedCategories(categories)),\n    onRequestCompany: () => dispatch(requestCompany()),\n  }\n}\n\nclass App extends Component{\n  async componentDidMount(){\n    const apps = await this.props.onRequestApplication();\n    const companies = await this.props.onRequestCompany();\n    var newCategory = [];\n    for (var i=0;i<this.props.categories.length;i++){\n      newCategory = newCategory.concat({\n        Type : this.props.categories[i].name,\n        SuggestionsOrSeleceted : []\n      })\n    }\n    this.props.setSelectedCategories(newCategory)\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <MainPage/>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(App);\n","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/store.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/root-reducer.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/company-reducer/companyAction.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/application-reducer/applicationAction.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/addApp-reducer/addAppAction.js",["278"],"import AddAppTypes from './addAppTypes'\n\n\n//\n\nexport const setCompanyName = companyName => ({\n    type: 'SET_COMPANY_NAME',\n    payload: companyName\n});\n\nexport const setPositionName = positionName => ({\n    type: 'SET_POSITION_NAME',\n    payload: positionName\n});  \n\nexport const setSelectedCategories = (categories) => ({\n    type: 'SET_SELECTED_CATEGORIES',\n    payload: categories\n});  \n\nexport const setDates = (dates) => ({\n    type: 'SET_DATES',\n    payload: dates\n});  \n\nexport const setInterviewDate = (interviewDate) => ({\n    type: 'SET_INTERVIEW_DATE',\n    payload: interviewDate\n});  \n\n\n\n\nexport const postNewApp = (app) => (dispatch) =>{\n    dispatch({type: 'POST_NEWAPP_PENDING'});\n    // fetch('http://teamdevelopmentserver.azurewebsites.net/applications/create', {\n    fetch('http://localhost:3000/newapp', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        // applicationDetail: app.applicationDetail,\n        _id: null,\n        applicationID: null,\n        uID: null,\n        authID: null,\n        Tasks:[],\n        Detail:{\n            applicationID: null,\n            uID: null,\n            CompanyName: app.applicationDetail.companyName,\n            PositionName: app.applicationDetail.positionName,\n            IsFavorite: app.applicationDetail.pinned,\n            companyID: null,\n            positionID: null,\n            Status: [\n                {\n                    midTaskID: null,\n                    Time: app.dates[0].date,\n                    Title: \"Applied\",\n                    Status: app.dates[0].completed,\n                    IsFavorite : false,\n                    showDate: app.dates[0].showDate\n                }\n            ],\n            Categories: app.Categories\n        },       \n      })\n    })\n    .then(response => console.log(response.json()))\n    .then(() => dispatch({\n            type: 'POST_NEWAPP_SUCCESS',\n        })\n    )\n    .catch(error => dispatch({\n        type: 'POST_NEWAPP_FAILED',\n        payload: error\n    }))\n}\n","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_main/MainPage.js",["279","280"],"import React, { Component, useState } from 'react';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nimport CompanyMain from './../sypp_companies/CompanyMain'\nimport ApplicationsMain from './../sypp_applications/ApplicationsMain'\nimport CalendarMain from './../sypp_calendar/CalendarMain'\n\nimport './MainPage.scss'\nimport './radio/RadioButtons.scss';\n\nfunction MainPage() {\n    const [radioValue, setRadioValue] = useState('0');\n    const radios =     \n    [ \n        { name: 'Calendar', value: '0' },\n        { name: 'Applications', value: '1' },\n        { name: 'Companies', value: '2' },\n        { name: 'Templates', value: '3' },\n    ];\n\n    const radioChange = (e) => {\n      setRadioValue(e.currentTarget.value)\n    }\n\n    const display = () =>{\n      if(radioValue === '0'){\n          return (\n              <div className = \"sypp-calendar-mainPage\">\n                <CalendarMain/>\n              </div>\n          )\n      }else if(radioValue === '1'){\n        return(\n              <ApplicationsMain />\n        )\n      }     \n      else if(radioValue === '2'){\n        return(\n              <CompanyMain/>\n        )\n      }  else if(radioValue === '3'){\n        return(\n            <div>\n            </div>\n        )\n      }     \n  }\n\n\n    return (\n      <div className = \"sypp-mainPage-radio-container\">\n        <ButtonGroup toggle className =\"sypp-mainRadio-container\">\n          {radios.map((radio, idx) => (\n              <div>\n                <ToggleButton\n                className={\"sypp-colorChange sypp-activeChange sypp-hoverChange sypp-text1 sypp-twoButtons\"}\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name=\"radio\"\n                value={radio.value}\n                checked={radioValue === radio.value}\n                onChange={(e) => radioChange(e, radioValue)}\n                >\n                {radio.name}\n                </ToggleButton>\n            </div>\n          ))}\n        </ButtonGroup>\n        {display()}\n      </div>\n    );\n  }\n  export default MainPage;\n\n","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/application-reducer/applicationReducer.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/addApp-reducer/addAppReducer.js",["281"],"import addAppTypes from './addAppTypes'\n\nconst INITIAL_STATE = {\n    applicationDetail:{\n        companyName: '',\n        positionName: '',\n        pinned: false,\n        },\n        Categories : [\n            {\n            Type: 'Role',\n            SuggestionsOrSeleceted : [],\n            },\n            {\n            Type: 'Location',\n            SuggestionsOrSeleceted : [],\n            }\n        ],\n        archived: false, \n        dates :[\n            {key : 0, \n            date: new Date(), \n            showDate: true, \n            completed: true}\n        ],\n}\n\nconst addAppReducer  = (state = INITIAL_STATE, action) =>{\n    switch(action.type){\n        case 'SET_COMPANY_NAME':\n            return {\n                ...state,\n                applicationDetail:{\n                    companyName: action.payload,\n                    positionName: state.applicationDetail.positionName,\n                    pinned: state.applicationDetail.pinned,\n                }\n        };\n        case 'SET_POSITION_NAME':\n            return{\n                ...state,\n                applicationDetail:{\n                    companyName: state.applicationDetail.companyName,\n                    positionName: action.payload,\n                    pinned: state.applicationDetail.pinned,\n                }\n            };\n        case 'SET_SELECTED_CATEGORIES':\n            return{\n                ...state,\n                Categories: action.payload\n            };\n        case 'SET_DATES':\n            return{\n                ...state,\n                dates: action.payload\n            };\n        case 'SET_INTERVIEW_DATE':\n            return{\n                ...state,\n                interviewDate: action.payload\n            };\n\n        case 'POST_NEWAPP_PENDING':\n            return Object.assign({}, state, {isPending: true})\n\n        case 'POST_NEWAPP_SUCCESS':\n            return {\n                ...state,\n                applicationDetail:{\n                    companyName: '',\n                    positionName: '',\n                    pinned: false,\n                },\n                archived: false, \n                dates :[\n                    {key : 0, \n                    date: new Date(), \n                    showDate: true, \n                    completed: true}\n                ],\n            }\n        case 'POST_NEWAPP_FAILED':\n            return Object.assign({}, state, {error: action.payload, isPending: false})\n        default:\n            return state;\n    } \n}\n\nexport default addAppReducer;","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/company-reducer/companyReducer.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/addApp-reducer/addAppTypes.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/filteredProgress-reducer/filteredProgressReducer.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/categories-reducer/categoriesReducer.js",["282"],"import categoriesTypes from './categoriesTypes'\n\nconst INITIAL_STATE = {\n    categories : [\n        {\n        index: 0,\n        name: 'Role',\n        suggestions : [],\n        accordion: false,\n        },\n        {\n        index: 1,\n        name: 'Location',\n        suggestions : [],\n        accordion: false,\n        }\n    ]\n}\n\n\nconst categoriesReducer  = (state = INITIAL_STATE, action) =>{\n    switch(action.type){\n        case 'SET_CATEGORIES':\n            return{\n                ...state,\n                categories: action.payload\n            };\n        default:\n            return state;\n    } \n}\n\nexport default categoriesReducer;","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_companies/CompanyMain.js",["283","284"],"import React, {Component} from 'react';\nimport CalendarWeekview from './../sypp_calendar/CalendarWeekview'\n\nimport './../sypp_applications/ApplicationsMain.scss'\nimport './Companies.scss'\nimport {setApps} from './../redux/application-reducer/applicationAction'\nimport {connect} from 'react-redux'\n\nimport CompanyList from './company_list/CompanyList'\nimport CompanyDetail from './company_detail/CompanyDetail'\n\n\n\n\nclass CompanyMain extends Component {\n    state = {\n        toggleDeadline : true,\n        companyID : ''\n    }\n    onClickToggleDeadline = () =>{\n        this.setState({\n            toggleDeadline : !this.state.toggleDeadline\n        })\n        console.log(this.props.apps)\n    }\n\n    onClickCompany = (companyID) =>{\n        this.setState({\n            companyID : companyID\n        })\n        this.setState({})\n        console.log(this.state.companyID)\n    }\n\n    render(){\n        return(\n            <div className = \"sypp-applicationMain-Container\">\n                <div className = \"sypp-calendarweekview-container\">\n                    <div className =\"sypp-calendarweekview-button\" onClick = {this.onClickToggleDeadline}>Hide Weekly Deadlines</div>\n                    {this.state.toggleDeadline?\n                            <CalendarWeekview/>:undefined\n                    }\n                </div>\n                {this.state.toggleDeadline?\n                    <div className = \"sypp-applicationMain-subContainer\">\n                        <div className = \"sypp-companyMain-list\">\n                            <CompanyList onClickCompany = {this.onClickCompany} extended = {false}/>\n                        </div>\n                        <div className = \"sypp-companyMain-detail\">\n                            <CompanyDetail companyID = {this.state.companyID} extended = {false}/>\n                        </div>\n                        </div> :\n                    <div className = \"sypp-applicationMain-subContainer-extended\">\n                        <div className = \"sypp-companyMain-list-extended\">\n                            <CompanyList onClickCompany = {this.onClickCompany} extended = {true}/>\n                        </div>\n                        <div className = \"sypp-companyMain-detail-extended\">\n                            <CompanyDetail companyID = {this.state.companyID} extended = {true}/>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\nexport default CompanyMain","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/ApplicationsMain.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_calendar/CalendarMain.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/categories-reducer/categoriesTypes.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_calendar/CalendarWeekview.js",["285"],"import React, {Component} from 'react';\nimport Moment from 'moment';\nimport CalendarDetail from './CalendarDetail'\nimport './CalendarMain.scss'\nimport './../sypp_applications/ApplicationsMain.scss'\nimport {connect} from 'react-redux';\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,\n    }\n}\n  \n\nfunction addDays(date, days) {\n    var result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n}\n\nclass ApplicationWeekview extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n          favoriteType : \"\"\n        }\n      }\n      onChangefavoriteType = (favType) =>{\n        this.setState({\n          favoriteType : favType\n        })\n      }\n    // dateDisplay = () => {\n\n    //     return (\n\n    //     )\n    // }\n    render(){\n        var date = new Date();\n        var taskArray = []\n        let weekDays = [];\n\n        for(var i=0; i<this.props.apps.length; i++){\n          if(this.props.apps[i].tasks.length !== 0){\n            for(var j=0;j<this.props.apps[i].tasks.length;j++){\n              taskArray.push({\n                CompanyName : this.props.apps[i].detail.companyName,\n                PositionName : this.props.apps[i].detail.positionName,\n                Task : this.props.apps[i].tasks[j],\n                Time : this.props.apps[i].tasks[j].time,\n                type : 'application',\n                id : this.props.apps[i].applicationID,\n                isFavorite : this.props.apps[i].tasks[j].isFavorite\n              })\n            }    \n          }\n        }\n        for (var i = 0; i < 7; i++) {\n            weekDays.push(\n                <Weekday date = {addDays(date,i)} taskArray = {taskArray} number = {addDays(date,i).getDate()} key = {addDays(date,i).toString()} isToday = {true} isCurrentMonth = {true}/>\n            );\n        }\n\n        return(\n            <div className = \"sypp-weeklyDeadline-container\">\n                {weekDays}\n            </div>\n        );\n    }\n}\nexport default connect(mapStatetoProps, null)(ApplicationWeekview)\n\nclass Weekday extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n          favoriteType : \"\"\n        }\n      }\n      onChangefavoriteType = (favType) =>{\n        this.setState({\n          favoriteType : favType\n        })\n      }\n      render(){\n          return(\n            <div className = {\"sypp-weeklyDealine-individual \" + (this.state.favoriteType)}>\n                <div className = \"sypp-weekday-day\">{Moment(addDays(this.props.date,0)).format('ddd(MMM DD)')}</div>\n                <CalendarDetail date ={this.props.date} taskArray = {this.props.taskArray} number = {this.props.number} key = {this.props.key} isToday = {this.props.isToday} \n                isCurrentMonth = {this.props.isCurrentMonth} favoriteType = {this.state.favoriteType} onChangefavoriteType = {this.onChangefavoriteType}/>\n            </div>\n          );\n      }\n}","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_calendar/CalendarDetail.js",["286","287","288","289","290","291","292","293","294"],"import React, { Component } from \"react\";\n\nimport {setApps} from './../redux/application-reducer/applicationAction'\n\nimport './../sypp_applications/application_list/progress/ProgressBar.scss'\nimport './CalendarMain.scss'\nimport {connect} from 'react-redux'\n\nimport Rating from 'react-rating';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,\n    }\n  }\n  const mapDispatchToProps = dispatch => {\n    return{\n        setApps: (applications) => dispatch(setApps(applications))\n    }\n}\n\nclass CalendarDetail extends Component {\n\n    onClickIsFavorite = (task) =>{\n        var apps = this.props.apps\n        if(task.type === 'application'){\n            for(var i=0; i<this.props.apps.length; i++){\n                if(apps[i].applicationID === task.id){\n                    for(var j=0;j<apps[i].tasks.length;j++){\n                        if(apps[i].tasks[j].midTaskID === task.Task.midTaskID){\n                            apps[i].tasks[j].isFavorite = !apps[i].tasks[j].isFavorite\n                        }\n                    }\n                }\n            }\n        }\n        // for(var i =0;i<this.props.taskArray.length;i++){\n            if(this.props.favoriteType == \"\" && task.Task.isFavorite &&task.Task.status){\n                this.props.onChangefavoriteType(\"sypp-calendar-favorite-completed\")\n              }\n              else if((this.props.favoriteType == \"\"||this.props.favoriteType == \"sypp-calendar-favorite-completed\")&&task.Task.isFavorite&& !task.Task.status){\n                this.props.onChangefavoriteType(\"sypp-calendar-favorite-notCompleted\")\n              }\n              if(!task.Task.isFavorite){\n                this.props.onChangefavoriteType(\"\")\n              }\n        // }\n        this.props.setApps(apps)    \n        this.setState({})    \n    }\n\n    renderCalendarComponent = () =>{\n\n        if(this.props.taskArray.length !== 0){\n            for(var i=0;i<this.props.taskArray.length; i++){\n                var taskDate = new Date(this.props.taskArray[i].Task.time)\n                var currDate = new Date(this.props.date)\n                if(taskDate.getDate() === currDate.getDate() && taskDate.getMonth()+1 === currDate.getMonth()+1 && taskDate.getFullYear()===currDate.getFullYear()){\n                    if(this.props.favoriteType == \"\"&&this.props.taskArray[i].isFavorite && this.props.taskArray[i].Task.status){\n                        this.props.onChangefavoriteType(\"sypp-calendar-favorite-completed\")\n                        this.setState({favoriteType : \"sypp-calendar-favorite-completed\"})\n                      }\n                      else if((this.props.favoriteType == \"\"||this.props.favoriteType == \"sypp-calendar-favorite-completed\")&&this.props.taskArray[i].isFavorite&& !this.props.taskArray[i].Task.status){\n                        this.props.onChangefavoriteType(\"sypp-calendar-favorite-notCompleted\")\n                      }\n                    return(\n                        <div className = \"sypp-calendar-detail-container\">\n                            <div className = \"sypp-calendar-progress-container\">\n                                {this.props.taskArray[i].Task.status?\n                                <div className = \"sypp-applicationFirst sypp-completed\"></div>:\n                                <div className=\"sypp-applicationFirst sypp-notCompleted\"></div>\n                                }\n                                <Rating className =\"sypp-starIcon sypp-calendar-star\" applicationName = {this.props.taskArray[i].id} stop={1} initialRating = {this.props.taskArray[i].Task.isFavorite?1:0} \n                                onClick = {() => this.onClickIsFavorite(this.props.taskArray[i])}\n                                emptySymbol=\"fa fa-star-o starSize starIcon\"\n                                fullSymbol = \"fa fa-star starSize starIcon\"\n                                />\n                            </div>\n                            <div className = \"sypp-calendar-title-container\">\n                                {this.props.taskArray[i].CompanyName !==''?\n                                    <div className = \"sypp-calendarDetail-title\">{this.props.taskArray[i].CompanyName}</div>:undefined\n                                }\n                                {this.props.taskArray[i].PositionName !== ''?\n                                    <div className = \"sypp-calendarDetail-subTitle\">{this.props.taskArray[i].PositionName}</div>:undefined\n                                }\n                                {this.props.taskArray[i].Task.title !== ''?\n                                    <div className = \"sypp-calendarDetail-task-title\">{this.props.taskArray[i].Task.title}</div>:undefined\n                                }                                \n                            </div>\n                        </div>\n                    )\n                }\n            }\n        }\n        \n    }\n    render(){\n        return(\n            <div>\n                {/* <span\n                className={\"sypp-day\" + (this.props.isToday ? \" today\" : \"\") + (this.props.isCurrentMonth ? \"\" : \" sypp-different-month\") } \n               >\n                    {this.props.number}\n                </span> */}\n                {this.renderCalendarComponent()}\n            </div>\n        );\n    }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(CalendarDetail)\n","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/ApplicationDetail.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_companies/company_list/CompanyList.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_companies/company_detail/CompanyDetail.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/ApplicationList.js",["295","296","297","298"],"import React, {Component} from 'react';\n\nimport {setApps} from './../../redux/application-reducer/applicationAction'\nimport {connect} from 'react-redux'\nimport ApplicationListComponents from './ApplicationListComponents'\nimport ApplicationListProgress from './ApplicationListProgress'\nimport ModalBox from './../application_add_application/ModalBox'\nimport './../application_add_application/Modalbox.css'\n\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,\n    }\n  }\n  const mapDispatchToProps = dispatch => {\n    return{\n        setApps: () => dispatch(setApps()),\n    }\n}\n\nclass ApplicationList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            applicationID : ''\n        }\n    }\n\n    onChange = (value) => {\n        console.log(value)\n        var boolean = true;\n        if (value == 1) {\n            boolean = true;\n        }\n        else{\n            boolean = false;\n        }   \n    }\n    //yields the info about application detail to application detail section\n\n    render(){\n        const radioValue =    \n        [ \n        { name: 'All', value: '0' },\n        { name: 'Starred', value: '1' },\n        ]\n        const categoryDivided = () =>{\n            var temp = []\n            for(var i=0; i<this.props.apps.length; i++){\n                for(var j=0; j<this.props.apps[i].detail.categories.length;j++){\n                    if(!temp.includes(this.props.apps[i].detail.categories[j].type) && this.props.apps[i].detail.categories[j].suggestionsOrSeleceted.length>0){\n                            temp = temp.concat(this.props.apps[i].detail.categories[j].type)}\n                    }\n            }\n            for(var i=0;i<temp.length;i++){\n                radioValue.push({\n                    name : temp[i],\n                    value: i+2+\"\"\n                })\n            }\n        }\n\n        return(\n            <div style = {{height : '100%'}}>\n                {categoryDivided()}\n                \n                {/* <ApplicationListComponents options = {radioValue} onChange = {this.onChange}/> */}\n                {console.log(radioValue)}\n                <ApplicationListProgress options = {radioValue} onClickProgressAll = {this.props.onClickProgressAll} extended = {this.props.extended}/>\n                <div className = 'sypp-modalButton'>\n                    <ModalBox/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationList)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_companies/company_detail/CompanyDetailComponents.js",["299"],"import React, {Component} from 'react';\n\nimport ApplicationDetailEvents from './../../sypp_applications/application_detail/application_detail_components/ApplicationDetailEvents'\nimport ApplicationDetailChecklists from './../../sypp_applications/application_detail/application_detail_components/ApplicationDetailChecklists'\nimport ApplicationDetailNotes from './../../sypp_applications/application_detail/application_detail_components/ApplicationDetailNotes'\nimport ApplicationDetailFollowUp from './../../sypp_applications/application_detail/application_detail_components/ApplicationDetailFollowUp'\nimport ApplicationDetailContacts from './../../sypp_applications/application_detail/application_detail_components/ApplicationDetailContacts'\n\nimport CreateEditChecklist from './../../components/create_edit_components/create_edit_checklist/CreateEditChecklist'\nimport CreateEditContact from './../../components/create_edit_components/create_edit_contact/CreateEditContact'\nimport CreateEditEvent from './../../components/create_edit_components/create_edit_event/CreateEditEvent'\nimport CreateEditNote from './../../components/create_edit_components/create_edit_note/CreateEditNote'\nimport CreateEditConversation from './../../components/create_edit_components/create_edit_conversation/CreateEditConversation'\nimport './../../sypp_applications/application_detail/application_detail_components/ApplicationDetailComponents.scss'\n\nimport {setCompany} from './../../redux/company-reducer/companyAction'\nimport {connect} from 'react-redux'\n\nimport Popup from 'reactjs-popup';\nimport Modal from 'react-bootstrap/Modal';\n\n\n\nconst mapStatetoProps = state => {\n    return{\n        companies: state.companies.companies,\n    }\n  }\n  const mapDispatchToProps = dispatch => {\n    return{\n        setCompany: () => dispatch(setCompany()),\n    }\n}\n\n\nclass CompanyDetailComponents extends Component {\n    constructor(){\n        super();\n        this.state = {\n            show : false,\n            selectedValue : '1'\n        }\n    }\n    onSaveEventNote = () =>{\n        this.setState({})\n    }\n    onSaveConversation = () =>{\n        this.setState({})\n    }\n    onSaveNote = () =>{\n        this.setState({})\n    }\n    onSaveChecklist = () =>{\n        this.setState({})\n    }\n    onSaveContactNote = () =>{\n        this.setState({})\n    }\n\n    handleClose =() =>{\n        this.setState({\n            show: false\n        })\n    }\n    handleShow = () =>{\n        this.setState({\n            show:true\n        })\n    }\n    onClick = (value) => {\n        if(value === '1'){\n            this.setState({\n                show:true,\n                selectedValue : '1'\n            })\n            this.props.setRadioValue('1')\n        }\n        else if(value==='2'){\n            this.setState({\n                show:true,\n                selectedValue : '2'\n            })\n            this.props.setRadioValue('2')\n        }\n        else if(value==='3'){\n            this.setState({\n                show:true,\n                selectedValue : '3'\n            })\n            this.props.setRadioValue('3')\n        }\n        else if(value==='4'){\n            this.setState({\n                show:true,\n                selectedValue : '4'\n            })\n            this.props.setRadioValue('4')\n        }\n        else if(value==='5'){\n            this.setState({\n                show:true,\n                selectedValue : '5'  \n        })\n            this.props.setRadioValue('5')\n        }\n    }\n\n    triggerComponents = () =>{\n        if(this.state.selectedValue === '1'){\n            return(\n                <CreateEditEvent Event = {''} handleClose = {this.handleClose} companyID = {this.props.companyID} type ={'company'}/>\n            );\n        }\n        else if(this.state.selectedValue === '2'){\n            return(\n                <CreateEditNote Note = {''} handleClose = {this.handleClose} companyID = {this.props.companyID} type ={'company'}/>\n            );\n        }\n        else if(this.state.selectedValue === '3'){\n            return(\n                <CreateEditContact Contact = {''} handleClose = {this.handleClose} companyID = {this.props.companyID} type ={'company'}/>\n            );\n        }\n        else if(this.state.selectedValue === '4'){\n            return(\n                <CreateEditConversation FollowUp = {''} handleClose = {this.handleClose} companyID = {this.props.companyID} type ={'company'} editorState = {''}/>\n            );\n        }\n        else if(this.state.selectedValue === '5'){\n            return(\n                <CreateEditChecklist Checklist = {''} handleClose = {this.handleClose} companyID = {this.props.companyID} type ={'company'} editorState = {''}/>\n            );\n        }\n        return(\n            <div></div>\n        )\n    }\n\n    display = () =>{\n        if(this.props.companyID !== ''){\n            switch(this.props.radioValue){\n                case '0':\n                    return (\n                        <div class = \"sypp-applicationDetail-container\" style={this.props.extended?{overflowY: 'scroll', height: '90%', width : '100% !important'}:{overflowY: 'scroll', height: '90%', width : '100% !important'}}>\n                            <div class = \"row\">\n                                <div class = \"col\">\n                                {\n                                    this.props.companyDetail.events.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Events</div>\n                                        {this.props.companyDetail.events.map((event) =>(\n                                            <ApplicationDetailEvents onSaveEventNote = {this.onSaveEventNote} Event = {event} companyID = {this.props.companyID} type ={'company'}/>))}\n                                    </div>:\n                                        undefined\n                                }\n                                </div>\n                                <div class = \"col\">\n                                {\n                                    this.props.companyDetail.notes.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Notes</div>\n                                        {this.props.companyDetail.notes.map((note) =>(\n                                            <ApplicationDetailNotes onSaveNote = {this.onSaveNote}  Note = {note} companyID = {this.props.companyID} type ={'company'}/>))}\n                                    </div>\n                                        :undefined\n                                }\n                                </div>\n                                <div class = \"col\">\n                                {\n                                    this.props.companyDetail.contacts.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Contacts</div>\n                                        {this.props.companyDetail.contacts.map((data) => (\n                                            <ApplicationDetailContacts onSaveContactNote = {this.onSaveContactNote} contact = {data} companyID = {this.props.companyID} type ={'company'}/>))}\n                                    </div>:\n                                        undefined\n                                }\n                                </div>\n                                <div class = \"col\">\n                                {\n                                    this.props.companyDetail.followUps.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Conversational Histories</div>\n                                        {this.props.companyDetail.followUps.map((FollowUp) =>(\n                                            <ApplicationDetailFollowUp onSaveConversation = {this.onSaveConversation} FollowUp = {FollowUp} companyID = {this.props.companyID} type ={'company'}/>))}\n                                    </div>:\n                                        undefined\n                                }\n                                </div>\n                                <div class = \"col\">\n                                {\n                                    this.props.companyDetail.checklists.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Checklist</div>\n                                        {this.props.companyDetail.checklists.map((checklist) =>(\n                                            <ApplicationDetailChecklists onSaveChecklist = {this.onSaveChecklist}  Checklist = {checklist} companyID = {this.props.companyID} type ={'company'}/>))}\n                                    </div>:\n                                        undefined\n                                }\n                                </div>\n                            </div>\n                        </div>\n                    )\n                case '1':\n                    return (\n                        <div class = \"sypp-applicationDetail-container\" style={this.props.extended?{overflowY: 'scroll', height: '680px'}:{overflowY: 'scroll', height: '490px'}}>\n                            {\n                            this.props.companyDetail.events.map((event) =>(\n                                <ApplicationDetailEvents onSaveEventNote = {this.onSaveEventNote} Event = {event} companyID = {this.props.companyID} type ={'company'}/>\n                            ))\n                            }\n                        </div>\n                    )\n                case '2':\n                    return (\n                        <div class = \"sypp-applicationDetail-container\" style={this.props.extended?{overflowY: 'scroll', height: '680px'}:{overflowY: 'scroll', height: '490px'}}>\n                            {\n                            this.props.companyDetail.notes.map((note) =>(\n                                <ApplicationDetailNotes onSaveNote = {this.onSaveNote} Note = {note} companyID = {this.props.companyID} type ={'company'}/>\n                            ))\n                            }\n                        </div>\n                    )\n                case '3':\n                    return (\n                        <div class = \"sypp-applicationDetail-container\" style={this.props.extended?{overflowY: 'scroll', height: '680px'}:{overflowY: 'scroll', height: '490px'}}>\n                            {\n                            this.props.companyDetail.contacts.map((data) => (\n                                <ApplicationDetailContacts onSaveContactNote = {this.onSaveContactNote} contact = {data} companyID = {this.props.companyID} type ={'company'}/>\n                            ))\n                            }\n                        </div>                \n                    )\n                case '4':\n                    return (\n                        <div class = \"sypp-applicationDetail-container\" style={this.props.extended?{overflowY: 'scroll', height: '680px'}:{overflowY: 'scroll', height: '490px'}}>\n                            {\n                            this.props.companyDetail.followUps.map((FollowUp) =>(\n                                <ApplicationDetailFollowUp onSaveConversation = {this.onSaveConversation} FollowUp = {FollowUp} companyID = {this.props.companyID} type ={'company'}/>\n                            ))\n                            }\n                        </div>\n                    )\n                case '5':\n                    return (\n                        <div class = \"sypp-applicationDetail-container\" style={this.props.extended?{overflowY: 'scroll', height: '680px'}:{overflowY: 'scroll', height: '490px'}}>\n                            {\n                            this.props.companyDetail.checklists.map((checklist) =>(\n                                <ApplicationDetailChecklists onSaveChecklist = {this.onSaveChecklist} Checklist = {checklist} companyID = {this.props.companyID} type ={'company'}/>\n                            ))\n                            }\n                        </div>\n                )\n            }\n        }\n        else {\n            return(\n                <div class = \"sypp-applicationDetail-container\" style={this.props.extended?{overflowY: 'scroll', height: '90%', width: '100%'}:{overflowY: 'scroll', height: '90%', width: '100%'}}>\n                </div>\n            );\n        }\n    }\n\n    render(){\n\n        return(\n            <div style = {{height : '100%'}}>\n                    <div style = {{height : '100%'}}>\n                        {this.display()}\n                    </div>\n                <div className = \"sypp-detail-add-button-container\">\n                    <Popup\n                    trigger={\n                        <button \n                        className = {\"sypp-detail-add-button\"+(this.props.extended?\" sypp-detail-add-button-extended\":\" sypp-detail-add-button-notExtended\")}>+</button>\n                    }\n                    position={'right'}\n                    closeOnEscape\n                    closeOnDocumentClick\n                    >\n                    <div className = \"sypp-tooltip-button-container\">\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button1\" onClick = {() => this.onClick('1')}>Events</button>\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button2\" onClick = {() => this.onClick('2')}>Notes</button>\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button3\" onClick = {() => this.onClick('3')}>Contacts</button>\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button4\" onClick = {() => this.onClick('4')}>Conversation Histories</button>\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button5\" onClick = {() => this.onClick('5')}>Checklists</button>\n                        </div>\n                    </Popup>\n                </div>\n                <Modal \n                show={this.state.show}\n                onHide={this.handleClose}\n                centered\n                dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\n                className = \"sypp-modal-content\"\n                >\n                    <div className = 'sypp-create-detail-modal-container'>\n                        <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\n                        {this.triggerComponents()}\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(CompanyDetailComponents)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailComponents.js",["300"],"import React, {Component} from 'react';\n\nimport ApplicationDetailEvents from './ApplicationDetailEvents'\nimport ApplicationDetailChecklists from './ApplicationDetailChecklists'\nimport ApplicationDetailNotes from './ApplicationDetailNotes'\nimport ApplicationDetailFollowUp from './ApplicationDetailFollowUp'\nimport ApplicationDetailContacts from './ApplicationDetailContacts'\n\nimport CreateEditChecklist from './../../../components/create_edit_components/create_edit_checklist/CreateEditChecklist'\nimport CreateEditContact from './../../../components/create_edit_components/create_edit_contact/CreateEditContact'\nimport CreateEditEvent from './../../../components/create_edit_components/create_edit_event/CreateEditEvent'\nimport CreateEditNote from './../../../components/create_edit_components/create_edit_note/CreateEditNote'\nimport CreateEditConversation from './../../../components/create_edit_components/create_edit_conversation/CreateEditConversation'\nimport './ApplicationDetailComponents.scss'\n\nimport {setApps} from '../../../redux/application-reducer/applicationAction'\nimport {connect} from 'react-redux'\n\nimport Popup from 'reactjs-popup';\nimport Modal from 'react-bootstrap/Modal';\n\n\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,\n    }\n  }\n  const mapDispatchToProps = dispatch => {\n    return{\n        setApps: () => dispatch(setApps()),\n    }\n}\n\n\nclass ApplicationDetailComponents extends Component {\n    constructor(){\n        super();\n        this.state = {\n            show : false,\n            selectedValue : '1'\n        }\n    }\n    onSaveEventNote = () =>{\n        this.setState({})\n    }\n    onSaveConversation = () =>{\n        this.setState({})\n    }\n    onSaveNote = () =>{\n        this.setState({})\n    }\n    onSaveChecklist = () =>{\n        this.setState({})\n    }\n    onSaveContactNote = () =>{\n        this.setState({})\n    }\n\n    handleClose =() =>{\n        this.setState({\n            show: false\n        })\n    }\n    handleShow = () =>{\n        this.setState({\n            show:true\n        })\n    }\n    onClick = (value) => {\n        if(value === '1'){\n            this.setState({\n                show:true,\n                selectedValue : '1'\n            })\n            this.props.setRadioValue('1')\n        }\n        else if(value==='2'){\n            this.setState({\n                show:true,\n                selectedValue : '2'\n            })\n            this.props.setRadioValue('2')\n        }\n        else if(value==='3'){\n            this.setState({\n                show:true,\n                selectedValue : '3'\n            })\n            this.props.setRadioValue('3')\n        }\n        else if(value==='4'){\n            this.setState({\n                show:true,\n                selectedValue : '4'\n            })\n            this.props.setRadioValue('4')\n        }\n        else if(value==='5'){\n            this.setState({\n                show:true,\n                selectedValue : '5'  \n        })\n            this.props.setRadioValue('5')\n        }\n    }\n\n    triggerComponents = () =>{\n        if(this.state.selectedValue === '1'){\n            return(\n                <CreateEditEvent Event = {''} handleClose = {this.handleClose} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\n            // <div>Events</div>\n            );\n        }\n        else if(this.state.selectedValue === '2'){\n            return(\n                <CreateEditNote Note = {''} handleClose = {this.handleClose} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\n            );\n        }\n        else if(this.state.selectedValue === '3'){\n            return(\n                <CreateEditContact Contact = {''} handleClose = {this.handleClose} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\n            );\n        }\n        else if(this.state.selectedValue === '4'){\n            return(\n                <CreateEditConversation FollowUp = {''} handleClose = {this.handleClose} applicationID = {this.props.applicationDetail.applicationID} type ={'application'} editorState = {''}/>\n            );\n        }\n        else if(this.state.selectedValue === '5'){\n            return(\n                <CreateEditChecklist Checklist = {''} handleClose = {this.handleClose} applicationID = {this.props.applicationDetail.applicationID} type ={'application'} editorState = {''}/>\n            );\n        }\n        return(\n            <div></div>\n        )\n    }\n\n    display = () =>{\n        if(this.props.applicationID !== ''){\n            switch(this.props.radioValue){\n                case '0':\n                    return (\n                        <div id = 'sypp-applicationDetail-container-id' className = \"sypp-applicationDetail-container\"   style={{height: '89%', overflowY : 'scroll', width : '100% !important'}} >\n                             {/* style={this.props.extended?{overflowY: 'scroll', height: '680px'}:{overflowY: 'scroll', height: '490px'}}>  */}\n                            <div class = \"row\" >\n                                <div class = \"col\">\n                                {\n                                    this.props.applicationDetail.events.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Events</div>\n                                        {this.props.applicationDetail.events.map((event) =>(\n                                            <ApplicationDetailEvents onSaveEventNote = {this.onSaveEventNote} Event = {event} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\n                                    </div>:\n                                        undefined\n                                }\n                                </div>\n                                <div class = \"col\">\n                                {\n                                    this.props.applicationDetail.notes.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Notes</div>\n                                        {this.props.applicationDetail.notes.map((note) =>(\n                                            <ApplicationDetailNotes onSaveNote = {this.onSaveNote}  Note = {note} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\n                                    </div>\n                                        :undefined\n                                }\n                                </div>\n                                <div class = \"col\">\n                                {\n                                    this.props.applicationDetail.contacts.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Contacts</div>\n                                        {this.props.applicationDetail.contacts.map((data) => (\n                                            <ApplicationDetailContacts onSaveContactNote = {this.onSaveContactNote} contact = {data} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\n                                    </div>:\n                                        undefined\n                                }\n                                </div>\n                                <div class = \"col\">\n                                {\n                                    this.props.applicationDetail.followUps.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Conversational Histories</div>\n                                        {this.props.applicationDetail.followUps.map((FollowUp) =>(\n                                            <ApplicationDetailFollowUp onSaveConversation = {this.onSaveConversation} FollowUp = {FollowUp} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\n                                    </div>:\n                                        undefined\n                                }\n                                </div>\n                                <div class = \"col\">\n                                {\n                                    this.props.applicationDetail.checklists.length !== 0 ? \n                                    <div>\n                                        <div className = \"sypp-applicationDetail-all-title\">Checklist</div>\n                                        {this.props.applicationDetail.checklists.map((checklist) =>(\n                                            <ApplicationDetailChecklists onSaveChecklist = {this.onSaveChecklist}  Checklist = {checklist} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\n                                    </div>:\n                                        undefined\n                                }\n                                </div>\n                            </div>\n                        </div>\n                    )\n                case '1':\n                    return (\n                        <div className = \"sypp-applicationDetail-container\" style={{height: '89%', overflowY : 'scroll', width : '100% !important'}} >\n                            {\n                            this.props.applicationDetail.events.map((event) =>(\n                                <ApplicationDetailEvents onSaveEventNote = {this.onSaveEventNote} Event = {event} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\n                            ))\n                            }\n                        </div>\n                    )\n                case '2':\n                    return (\n                        <div className = \"sypp-applicationDetail-container\" style={{height: '89%', overflowY : 'scroll', width : '100% !important'}} >\n                            {\n                            this.props.applicationDetail.notes.map((note) =>(\n                                <ApplicationDetailNotes onSaveNote = {this.onSaveNote} Note = {note} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\n                            ))\n                            }\n                        </div>\n                    )\n                case '3':\n                    return (\n                        <div className = \"sypp-applicationDetail-container\" style={{height: '89%', overflowY : 'scroll', width : '100% !important'}} >\n                            {\n                            this.props.applicationDetail.contacts.map((data) => (\n                                <ApplicationDetailContacts onSaveContactNote = {this.onSaveContactNote} contact = {data} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\n                            ))\n                            }\n                        </div>                \n                    )\n                case '4':\n                    return (\n                        <div className = \"sypp-applicationDetail-container\" style={{height: '89%', overflowY : 'scroll', width : '100% !important'}} >\n                            {\n                            this.props.applicationDetail.followUps.map((FollowUp) =>(\n                                <ApplicationDetailFollowUp onSaveConversation = {this.onSaveConversation} FollowUp = {FollowUp} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\n                            ))\n                            }\n                        </div>\n                    )\n                case '5':\n                    return (\n                        <div className = \"sypp-applicationDetail-container\" style={{height: '89%', overflowY : 'scroll', width : '100% !important'}} >\n                            {\n                            this.props.applicationDetail.checklists.map((checklist) =>(\n                                <ApplicationDetailChecklists onSaveChecklist = {this.onSaveChecklist} Checklist = {checklist} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\n                            ))\n                            }\n                        </div>\n                )\n            }\n        }\n        else {\n            return(\n                <div className = \"sypp-applicationDetail-container\" style={{height: '89%', overflowY : 'scroll', width : '100% !important'}} >\n                </div>\n            );\n        }\n    }\n\n    render(){\n        return(\n            <div style = {{height : '100%'}}>\n                <div style = {{height : '100%'}}>\n                    {this.display()}\n                </div>\n                <div className = \"sypp-application-detail-add-container\">\n                    <Popup\n                    trigger={\n                        <button \n                        className = {\"sypp-detail-add-button\" + (this.props.extended?\" sypp-detail-add-button-extended\":\" sypp-detail-add-button-notExtended\")}>+</button>\n                    }\n                    position={'right'}\n                    closeOnEscape\n                    closeOnDocumentClick\n                    >\n                    <div className = \"sypp-tooltip-button-container\">\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button1\" onClick = {() => this.onClick('1')}>Events</button>\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button2\" onClick = {() => this.onClick('2')}>Notes</button>\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button3\" onClick = {() => this.onClick('3')}>Contacts</button>\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button4\" onClick = {() => this.onClick('4')}>Conversation Histories</button>\n                        <button className = \"sypp-create-detail-button sypp-create-detail-button5\" onClick = {() => this.onClick('5')}>Checklists</button>\n                        </div>\n                    </Popup>\n                </div>\n                <Modal \n                show={this.state.show}\n                onHide={this.handleClose}\n                centered\n                dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\n                className = \"sypp-modal-content\"\n                >\n                    <div className = 'sypp-create-detail-modal-container'>\n                        <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\n                        {this.triggerComponents()}\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationDetailComponents)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/ModalBox.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/ApplicationListProgress.js",["301","302","303","304","305","306","307","308","309","310"],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/ApplicationListComponents.js",["311","312","313"],"import React, { Component, useState } from 'react';\n\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nimport ReactTooltip from \"react-tooltip\";\n// import './../components/radio/RadioButtons.css';\nimport './../../sypp_main/radio/RadioButtons.scss'\n\nimport './CategoryButtons.scss';\n\nimport {connect} from 'react-redux'\nimport {updateFilteredProgress, updateFilteredProgressTitle, updateFilteredProgressButtonValue} from './../../redux/filteredProgress-reducer/filteredProgressAction'\n\n\n\nconst mapStatetoProps = state => {\n  return{\n      apps: state.application.applications,\n      filteredProgress: state.filteredProgress\n  }\n}\nconst mapDispatchToProps= dispatch =>{\n  return {\n    updateFilteredProgress: (applications) => dispatch(updateFilteredProgress(applications)),\n    updateFilteredProgressTitle: (title) => dispatch(updateFilteredProgressTitle(title)),\n    updateButtonValue: (value) => dispatch(updateFilteredProgressButtonValue(value))\n  }\n}\n\nfunction CategoryButtons(props) {\n\n    const [radioValue, setRadioValue] = useState(props.filteredProgress.selectedButtonValue);\n    const radios = props.options;\n    const [targetName, setTargetName] = useState('');\n    const [targetValue, setTargetValue] = useState('0')\n    const [toolTip, setToolTip] = useState(false);\n\n    const [targetTitle, setTargetTitle] = useState(props.filteredProgress.selectedTitle)   \n\n    const radioChange = (e) => {\n        if(e.currentTarget.value==='0'||e.currentTarget.value==='1'){\n            e.preventDefault();\n            var name = ''\n            for(var i=0;i<radios.length;i++){\n                if(radios[i].value ===  e.currentTarget.value)\n                name = radios[i].name\n            }\n            props.onChange(name);\n\n            // setRadioValue(e.currentTarget.value)\n\n            var filtered = [] \n            if(e.currentTarget.value === '0'){\n                filtered = props.apps\n                props.updateFilteredProgressTitle(\"All\")\n                setRadioValue('0')\n                props.updateButtonValue('0')\n            }\n            //isFavorite = true인 case들\n            else if(e.currentTarget.value === '1'){\n                setRadioValue('1')\n                props.updateButtonValue('1')\n                props.updateFilteredProgressTitle(\"Starred\")\n                for(var i=0;i<props.apps.length;i++){\n                if(props.apps[i].detail.isFavorite) \n                    filtered = filtered.concat(props.apps[i])\n                }\n            }\n\n            props.updateFilteredProgress(filtered)\n        }\n    }\n\n\n    const handleChange = (e) =>{\n      setTargetName(e.target.getAttribute('name'))\n      setTargetValue(e.target.getAttribute('value'))\n      if(e.target.getAttribute('name')!=='All'&&e.target.getAttribute('name')!=='Starred'){\n        setToolTip(false)\n      }\n      else{\n        setToolTip(true)\n      }\n    }\n\n    const categoryDivided = () =>{\n      var temp = []\n      for(var i=0; i<props.apps.length; i++){\n          for(var j=0; j<props.apps[i].detail.categories.length;j++){\n              if(props.apps[i].detail.categories[j].type === targetName){\n                for(var k=0; k<props.apps[i].detail.categories[j].suggestionsOrSeleceted.length;k++){\n                  if(!temp.includes(props.apps[i].detail.categories[j].suggestionsOrSeleceted[k])){\n                    temp = temp.concat(props.apps[i].detail.categories[j].suggestionsOrSeleceted[k])\n                  }\n                }    \n              }\n          }\n      }\n    return(\n      <div className = \"sypp-tooltip-container\">\n      { \n        temp.map((entity) => (\n        <button className = \"sypp-subCategory-button\" name = {entity} onClick ={e => onClickButton(e)}>{entity}</button>\n        ))\n      }\n      </div>\n\n    )\n  }\n\n    const onClickButton = (e) =>{\n      setRadioValue(targetValue)\n      props.updateButtonValue(targetValue)\n      props.updateFilteredProgressTitle(e.target.getAttribute('name'))\n      setTargetTitle(e.target.getAttribute('name'))\n      filterProgress(e)\n    }\n\n    const filterProgress = (e) =>{\n      var filtered = [] \n      for(var i=0; i<props.apps.length ;i++){\n        //save i as an index\n        for(var j=0;j<props.apps[i].detail.categories.length;j++){\n          if(props.apps[i].detail.categories[j].type === targetName){\n            for(var k=0; k<props.apps[i].detail.categories[j].suggestionsOrSeleceted.length;k++){\n              if(e.target.getAttribute('name') === props.apps[i].detail.categories[j].suggestionsOrSeleceted[k]){\n                filtered = filtered.concat(props.apps[i])\n              }\n            }\n          }\n        }\n      }   \n      props.updateFilteredProgress(filtered)\n    }\n\n    return (\n        <div>\n        <ButtonGroup toggle className = \"sypp-applicationList-radio-container\">\n          {radios.map((radio, idx) => (\n                <ToggleButton\n                className={\"sypp-colorChange2 sypp-activeChange sypp-hoverChange sypp-text1\"}\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name=\"radio\"\n                value={radio.value}\n                checked={radioValue === radio.value}\n                onChange={(e) => radioChange(e, radioValue)}\n                data-for=\"radioTip\"\n                data-tip = ''\n                onMouseEnter = {e => handleChange(e)}\n                >\n                  <div className = \"sypp-category-radio-padding\" name = {radio.name} value = {radio.value}>\n                    {radio.name}\n                  </div>\n                </ToggleButton>\n\n          ))}\n          <ReactTooltip\n                  id={(radioValue !== 0&&radioValue.value !== 1)?\"radioTip\":\"\"}\n                  className = \"sypp-CategoryBox sypp-colorFix sypp-colorFixBottom sypp-colorFixBottomBefore sypp-colorFixBottomAfter\"\n                  effect='solid'\n                  delayHide={20}\n                  place={'bottom'}\n                  disable={toolTip}\n                  >\n                    {categoryDivided()}\n                </ReactTooltip>\n        </ButtonGroup>\n        </div>\n    );\n  }\n  export default connect(mapStatetoProps, mapDispatchToProps)(CategoryButtons);\n\n","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/UserForm.js",["314","315","316"],"import React, {Component} from 'react';\nimport RoleLocationAdd from './RoleLocationAdd';\nimport Applied from './Applied';\nimport CompanyPositionAdd from './CompanyPositionAdd';\nimport InterviewDate from './InterviewDate';\nimport Page from './../../components/page/Page'\n\nimport {connect} from 'react-redux'\nimport {postNewApp, setSelectedCategories} from './../../redux/addApp-reducer/addAppAction'\nimport {requestApplication} from './../../redux/application-reducer/applicationAction'\n\nconst mapStatetoProps = state => {\n    return{\n        addApp: state.addApp,\n        categories: state.categories.categories\n    }\n} \n\nconst mapDispatchToProps= dispatch =>{\n    return {\n        onRequestApplication: () => dispatch(requestApplication()),        \n        postNewApp: (app) => dispatch(postNewApp(app)),\n        setSelectedCategories: (categories) => dispatch(setSelectedCategories(categories))\n    }\n}\n\n\nexport class UserForm extends Component {\n    state = {\n        step: 1,\n    }\n\n    //Send Post request, close modal(save button)\n    onSaveButton = async() => {\n        // this.props.postNewApp(this.props.addApp)\n        console.log(\"Triggered\")\n        const app = await this.props.postNewApp(this.props.addApp)\n        console.log(\"Triggered\")\n        const app2 = setTimeout(()=> this.props.onRequestApplication(), 500) \n        var newCategory = this.props.addApp.Categories;\n        for (var i=0;i<this.props.addApp.Categories.length;i++){\n        console.log(this.props.categories[i])\n        newCategory[i].SuggestionsOrSeleceted = []\n        }\n        this.props.setSelectedCategories(newCategory)\n        this.props.handleClose()\n    }\n\n\n\n\n    nextStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step + 1\n        });\n    }\n\n    prevStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n\n    \n    render(){\n        const{step} = this.state;\n        switch(step){\n            case 1:\n                return(\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\n                        <CompanyPositionAdd \n                            nextStep = {this.nextStep}\n                        />\n                    </div>\n                );\n            case 2:\n                return (\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\n                        <RoleLocationAdd\n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}\n                        />\n                    </div>\n                )\n            case 3:\n                return (\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\n                        <Applied\n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}\n                        />\n                    </div>\n                )\n                //can use save button here. Send info from this save?\n            case 4:\n                return (\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2,3,4]}/>\n                        <InterviewDate \n                        />\n                        <div className=\"sypp-next-button-container\">\n                            <button className = \"sypp-button-next\" onClick={this.onSaveButton}>Save</button>\n                        </div>\n                    </div>\n                )\n        }\n    }\n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(UserForm)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailEvents.js",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState, convertFromRaw, contentBlocks} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'draft-js/dist/Draft.css';\nimport './ApplicationDetailNotes.scss'\nimport './../ApplicationDetail.scss'\nimport './ApplicationDetailEvents.scss'\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Moment from 'moment';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport CreateEditEvent from './../../../components/create_edit_components/create_edit_event/CreateEditEvent'\n// import CreateEditEvent from './../create_edit_applications_components/create_edit_event/CreateEditEvent'\n\nimport {getDefaultKeyBinding, KeyBindingUtil, getSelection, getCurrentContent, editorState, changeDepth, keyBindingFn} from 'draft-js';\nimport {connect} from 'react-redux'\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,\n        // pending: state.progress.isPending,\n        // categories: state.categories.categories, \n        // applicationDetail : state.applicationDetail.application\n    }\n  }\nconst {hasCommandModifier} = KeyBindingUtil;\n  \n\nclass ApplicationDetailEvents extends React.Component {\n    constructor(props) {\n        super(props);\n        const contentBlocksArray = []\n        for (var i=0;i<this.props.Event.contents.length;i++){\n            if(this.props.Event.contents.length !== 0){\n                contentBlocksArray.push(\n                    new ContentBlock({\n                        key: this.props.Event.contents[i].noteContentsID,\n                        type: 'unordered-list-item',\n                        depth: 0,\n                        text: this.props.Event.contents[i].header\n                      })\n                )\n                for(var j=0;j<this.props.Event.contents[i].contents_Text.length;j++){\n                    contentBlocksArray.push(\n                        new ContentBlock({\n                            key: genKey(),\n                            type: 'unordered-list-item',\n                            depth: 1,\n                            text: this.props.Event.contents[i].contents_Text[j]\n                          })\n                    )\n                }\n            }\n        }\n        this.state = {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\n          show : false\n        };\n      }\n      currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\n      \n      currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\n      \n      myKeyBindingFn = (e) => {\n        switch (e.keyCode) {\n          case 9: // TAB\n            if(this.currentBlockIndex() == 0){\n              return undefined\n            }\n            else {\n            const newEditorState = RichUtils.onTab(\n              e,\n              this.state.editorState,\n              1 /* maxDepth */,\n            );\n            if (newEditorState !== this.state.editorState) {\n              this.setState({\n                editorState: newEditorState\n              })\n              return null;\n              }\n            }\n          default: \n            return getDefaultKeyBinding(e);      \n      }\n    }\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\n    _handleChange = (editorState) => {\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\n        this.setState({editorState: newEditorState})\n      }\n      else{\n        this.setState({ editorState});\n      }\n    }\n \n\n    handleClose = () => {\n      this.setState({\n        show:false\n      })\n    }\n    handleOpen = (e) =>{\n      e.preventDefault()\n      this.setState({\n        show:true\n      })\n    }\n  \n      render() {\n        return (\n          <div className=\"sypp-ApplicationDetailNote-container sypp-EventContainer\">\n            <div className = \"sypp-EventDetailContainer\"  onClick={e => this.handleOpen(e)}>\n            {/* <div className=\"ApplicationDetailNote-title-container\"> */}\n              <div className = \"sypp-applicationDetailTextTitle\">{this.props.Event.detail.title}</div>\n              <div className = \"sypp-EventDateTime\">{Moment(this.props.Event.detail.time).format('MMM DD, YYYY - h:mma')}</div>\n              <div className = \"sypp-EventDateTime\">{this.props.Event.detail.location}</div>\n            {/* </div> */}\n            {/* <Editor \n              toolbarHidden\n              editorClassName=\"sypp-editor-class\"\n              editorState={this.state.editorState}\n              onEditorStateChange={this._handleChange}\n              keyBindingFn={this.myKeyBindingFn}\n            /> */}\n            {\n              this.props.Event.contents.map((data) => (\n                <div>\n                <div className = \"sypp-note-text-header\">{' • ' +data.header}</div>\n                {\n                  data.contents_Text.length != 0 ?  \n                    data.contents_Text.map((subText)=>(\n                      <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\n                    ))\n                  : undefined\n                }\n                </div>\n              ))\n\n            }\n            </div>\n\n            <Modal \n            show={this.state.show}\n            onHide={this.handleClose}\n            centered\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\n            className = \"sypp-modal-content\"\n            >\n                <div className = 'sypp-create-detail-modal-container'>\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\n                    <CreateEditEvent onSaveEventNote = {this.props.onSaveEventNote} _handleChange = {this._handleChange}  Event = {this.props.Event} handleClose = {this.handleClose} editorState = {this.state.editorState} applicationID = {this.props.applicationID} type ={this.props.type} companyID = {this.props.companyID}/>\n                </div>\n            </Modal>\n          </div>\n        );\n      }\n}\nexport default connect(mapStatetoProps, null)(ApplicationDetailEvents)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailChecklists.js",["332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CharacterMetadata, RichUtils, ContentBlock, genKey, ContentState, EditorState, convertFromRaw, contentBlocks} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport 'draft-js/dist/Draft.css';\nimport './ApplicationDetailNotes.scss'\nimport './../ApplicationDetail.scss'\nimport './ApplicationDetailChecklists.scss'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { faListAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquare, faCheckSquare } from \"@fortawesome/free-regular-svg-icons\";\nimport Modal from 'react-bootstrap/Modal';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { Checkbox } from 'semantic-ui-react'\nimport CreateEditChecklist from './../../../components/create_edit_components/create_edit_checklist/CreateEditChecklist'\n// import CreateEditChecklist from './../create_edit_applications_components/create_edit_checklist/CreateEditChecklist'\n\nimport {getDefaultKeyBinding, KeyBindingUtil, getSelection, getCurrentContent, editorState, changeDepth, keyBindingFn} from 'draft-js';\nimport {connect} from 'react-redux'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {setCompany} from './../../../redux/company-reducer/companyAction'\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\n\n\n  const {hasCommandModifier} = KeyBindingUtil;\n  const mapStatetoProps = state => {\n    return{\n        companies: state.companies.companies,\n        apps: state.application.applications,\n        // pending: state.progress.isPending,\n        // categories: state.categories.categories, \n        // applicationDetail : state.applicationDetail.application\n    }\n  }\n  const mapDispatchToProps= dispatch =>{\n    return {\n        setApps : (applications) => dispatch(setApps(applications)),\n        setCompany : (companies) => dispatch(setCompany(companies)),\n    }\n  }\n\nclass ApplicationDetailChecklists extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          editorState: '',\n          checkboxState : '',\n          show : false\n        };\n      }\n\n    //API calls here, need to save the checkbox status to the application\n    // onCheckBoxClick = (checkboxID) => {\n    //     var tempCheckbox = this.state.checkboxState\n    //     for(var i=0;i<this.state.checkboxState.length;i++){\n    //         if(checkboxID === this.state.checkboxState[i].checklistID){\n    //             tempCheckbox[i].checkboxBoolean = !tempCheckbox[i].checkboxBoolean\n    //         }\n    //         this.setState({\n    //             checkboxState : tempCheckbox \n    //         })\n    //     }\n    // }\n\n    onCheckBoxClick = (checkboxArray, checklistID) =>{\n      if(this.props.type === 'application'){\n        var apps = this.props.apps\n        for(var i=0;i<this.props.apps.length;i++){\n          if(this.props.apps[i].applicationID === this.props.applicationID){\n            for(var j=0;j<this.props.apps[i].checklists.length;j++){\n              if(this.props.apps[i].checklists[j].checklistID === this.props.Checklist.checklistID){\n                for(var k=0;k<this.props.apps[i].checklists[j].files.length;k++){\n                  if(checkboxArray[k].checklistID === checklistID){\n                    apps[i].checklists[j].files[k].isChecked = !apps[i].checklists[j].files[k].isChecked\n                  }\n              }\n            }\n          }\n        }\n      }\n      this.props.setApps(apps)\n      }\n      if(this.props.type === 'company'){\n        var companies = this.props.companies\n        for(var i=0;i<this.props.companies.length;i++){\n          if(this.props.companies[i].companyID === this.props.companyID){\n            for(var j=0;j<this.props.companies[i].checklists.length;j++){\n              if(this.props.companies[i].checklists[j].checklistID === this.props.Checklist.checklistID){\n                for(var k=0;k<this.props.companies[i].checklists[j].files.length;k++){\n                  if(checkboxArray[k].checklistID === checklistID){\n                  companies[i].checklists[j].files[k].isChecked = !companies[i].checklists[j].files[k].isChecked\n                  }\n              }\n            }\n          }\n        }\n      }\n      this.props.setCompany(companies)\n    }\n    this.setState({})\n  }\n    _handleChange = (editorState) =>{\n      this.setState({\n        editorState: editorState\n      })\n    }\n    handleClose = () => {\n      this.setState({\n        show:false\n      })\n    }\n    handleOpen = (e) =>{\n      e.preventDefault()\n      this.setState({\n          show:true\n      })\n    }\n\n    handleCheckbox = (checkboxState) =>{\n      this.setState({\n        checkboxState : checkboxState\n      })\n    }\n\n    checkboxDisplay = () =>{\n      var checkboxArray =[]\n      for (var i=0;i<this.props.Checklist.files.length;i++){\n        var checklistID = genKey();\n          checkboxArray.push({\n            checklistID : checklistID,\n            checkboxBoolean: this.props.Checklist.files[i].isChecked\n        })\n      }\n      return(\n        <div>\n        {\n          checkboxArray.map((checkbox) => (\n            <div className = \"sypp-checkbox-container\">\n            <FormControlLabel \n              className = \"sypp-FormRoot\"\n              control = {\n              <Checkbox \n              icon=  {<FontAwesomeIcon className = \"sypp-CheckBox-icon\" icon={faSquare}/> }\n              checkedIcon= {<FontAwesomeIcon className = \"sypp-CheckBox-icon sypp-checked\" icon={faCheckSquare}/> }\n              className = \"sypp-Checkbox-padding sypp-Checkbox-padding2\"\n              checked = {checkbox.checkboxBoolean} \n              onChange = {() => this.onCheckBoxClick(checkboxArray, checkbox.checklistID)}/>}\n              />\n            </div> \n          ))\n        }\n        </div>\n      )\n    }\n     \n    \n      render() {\n        return (\n          <div className=\"sypp-ApplicationDetailNote-container\">\n            <div className=\"sypp-ApplicationDetailNote-title-container\">\n            <div className = \"sypp-applicationDetailTextTitle\">{this.props.Checklist.type}</div>\n            </div>\n            <div className = \"sypp-ApplicationDetailChecklists-container\">\n            <div className = \"sypp-CheckList-Container\">\n              {\n                  this.checkboxDisplay()\n              }\n            </div>\n            <div className = \"sypp-Editor-Container\" onClick = {this.handleOpen}>\n            {\n              this.props.Checklist.files.map((data) => (\n                <div className = \"sypp-checklist-body\">{data.title}</div>\n              ))\n            }\n            </div>\n            </div>\n            <Modal \n            show={this.state.show}\n            onHide={this.handleClose}\n            centered\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\n            className = \"sypp-modal-content\"\n            >\n                <div className = 'sypp-create-detail-modal-container'>\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\n                    <CreateEditChecklist onSaveChecklist = {this.props.onSaveChecklist} _handleChange = {this._handleChange} handleCheckbox = {this.handleCheckbox} Checklist = {this.props.Checklist} handleClose = {this.handleClose} type ={this.props.type} companyID = {this.props.companyID} applicationID = {this.props.applicationID}\n                    checkboxState = {this.state.checkboxState} editorState = {this.state.editorState}/>\n                </div>\n            </Modal>\n          </div>\n        );\n      }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationDetailChecklists)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailFollowUp.js",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CharacterMetadata, RichUtils, ContentBlock, genKey, ContentState, EditorState, convertFromRaw, contentBlocks} from 'draft-js';\nimport {getDefaultKeyBinding, KeyBindingUtil, getSelection, getCurrentContent, editorState, changeDepth, keyBindingFn} from 'draft-js';\n\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'draft-js/dist/Draft.css';\nimport './ApplicationDetailNotes.scss'\nimport './../ApplicationDetail.scss'\n\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Moment from 'moment';\nimport {connect} from 'react-redux'\nimport Modal from 'react-bootstrap/Modal';\nimport CreateEditConversation from './../../../components/create_edit_components/create_edit_conversation/CreateEditConversation'\n\nclass ApplicationDetailFollowUp extends React.Component {\n    constructor(props) {\n        super(props);\n          this.state = {\n            show: false,\n            editorState : ''\n        };\n    }\n    _handleChange = (editorState) =>{\n        this.setState({\n            editorState: editorState\n        })\n    }\n\n\n    handleClose = () => {\n    this.setState({\n        show:false\n    })\n    }\n    handleOpen = (e) =>{\n    e.preventDefault()\n    this.setState({\n        show:true\n    })\n    }\n    days_between = (date1) => {\n\n        // The number of milliseconds in one day\n        var date2 = new Date();\n        // Convert both dates to milliseconds\n\n        var Difference_In_Time = date2.getTime() - date1.getTime(); \n  \n        // To calculate the no. of days between two dates \n        var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);   \n        // Calculate the difference in milliseconds\n\n        return Difference_In_Days\n    }\n      \n    \n    render() {\n        return (\n            <div className=\"sypp-ApplicationDetailNote-container\">\n            <div onClick = {this.handleOpen}>\n                <div className=\"sypp-ApplicationDetailFollowup-title-container\">\n                    <div className = \"sypp-applicationDetailTextTitle\">{this.props.FollowUp.personnel.firstname +\" \"+this.props.FollowUp.personnel.lastname}</div>\n                    <div className = \"sypp-applicationDetailTextSubTitle\">{this.props.FollowUp.personnel.title}</div>\n                    <div className = \"sypp-EventDateTime\">{Moment(this.props.FollowUp.time).format('MMM DD, YYYY') + \" (\" +(Math.ceil((new Date().getTime() -new Date(this.props.FollowUp.time).getTime())/(1000*3600*24)))+\" days ago)\" }</div>\n                </div>\n                    {\n                        this.props.FollowUp.description.map((data) => (\n                        <div>\n                        <div className = \"sypp-note-text-header\">{' • ' +data.header}</div>\n                        {\n                            data.contents_Text.length != 0 ?  \n                            data.contents_Text.map((subText)=>(\n                                <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\n                            ))\n                            : undefined\n                        }\n                        </div>\n                        ))\n                    }\n            </div>\n            <Modal \n            show={this.state.show}\n            onHide={this.handleClose}\n            centered\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\n            className = \"sypp-modal-content\"\n            >\n                <div className = 'sypp-create-detail-modal-container'>\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\n                    <CreateEditConversation _handleChange = {this._handleChange} FollowUp = {this.props.FollowUp} onSaveConversation = {this.props.onSaveConversation} FollowUp = {this.props.FollowUp} handleClose = {this.handleClose} type ={this.props.type} applicationID = {this.props.applicationID} companyID = {this.props.companyID}/>\n                </div>\n            </Modal>\n        </div>\n        );\n    }\n}\nexport default connect(null, null)(ApplicationDetailFollowUp)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailContacts.js",["373","374","375"],"import React, {Component, useState} from 'react';\nimport {connect} from 'react-redux'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nimport './../ApplicationDetail.scss'\nimport Modal from 'react-bootstrap/Modal';\nimport CreateEditContact from './../../../components/create_edit_components/create_edit_contact/CreateEditContact'\n// import CreateEditContact from './../../../components/create_edit_components/create_edit_contact/CreateEditContact'\n\n\nclass ApplicationDetailContacts extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            radioValue : '0',\n            show : false\n        }\n    }\n\n    radioChange = (e) =>{\n        this.setState({\n            radioValue : e.target.value\n        })\n    }\n\n    display = () =>{\n        switch(this.state.radioValue) {\n            case '0' :\n                return(\n                    <div className = \"sypp-applicationDetailTextBody\">\n                        {this.props.contact.email.email}\n                    </div>\n                )\n            case '1' :\n                return(\n                    <div className = \"sypp-applicationDetailTextBody\">\n                        {this.props.contact.phone.phoneNumber}\n                    </div>\n                )\n            case '2' :\n                return(\n                    <div className = \"sypp-applicationDetailTextBody\">\n                        {\n                        this.props.contact.convo.map((data) => (\n                            <div>\n                            <div className = \"sypp-note-text-header\">{' • ' +data.header}</div>\n                            {\n                            data.contents_Text.length != 0 ?  \n                                data.contents_Text.map((subText)=>(\n                                <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\n                                ))\n                            : undefined\n                            }\n                            </div>\n                        ))\n                    }\n                    </div>\n                )\n        }\n    }\n    handleClose = () => {\n        this.setState({\n          show:false\n        })\n      }\n    handleOpen = (e) =>{\n    e.preventDefault()\n    this.setState({\n        show:true\n    })\n    }\n\n    render(){\n        return(\n            <div>\n                <div className = \"sypp-applicationDetailContactsContainer\"  >\n                    <div>\n                        <div className = \"sypp-applicationDetailContactsTitle\">\n                            <div className = \"sypp-applicationDetailTextTitle\">{this.props.contact.personalDetail.firstname}</div>\n                            <div className = \"sypp-applicationDetailTextTitle-body\">{this.props.contact.personalDetail.title}</div>\n                        </div>\n                        <ButtonGroup toggle className = {this.props.classContainerProps}>\n                        {radios.map((radio, idx) => (\n                            <div className=\"sypp-button-container-applicationDetail\">\n                                <ToggleButton\n                                className={\"sypp-applicationDetialButtonGroups sypp-activeChange sypp-hoverChange sypp-text\"}\n                                key={idx}\n                                type=\"radio\"\n                                variant=\"secondary\"\n                                name={radio.name}\n                                value={radio.value}\n                                checked={this.state.radioValue === radio.value}\n                                onChange={(e) => this.radioChange(e, this.state.radioValue)}\n                                >\n                                <div className = \"sypp-radio-button-container-applicationDetail\" name = {radio.name} value = {radio.value}>\n                                    {radio.name}\n                                </div>\n                                </ToggleButton>\n                                </div>\n                        ))}\n                            </ButtonGroup>\n                        </div>\n                        <div onClick = {this.handleOpen}>\n                            {this.display()}\n                        </div>\n                </div>\n            <Modal \n            show={this.state.show}\n            onHide={this.handleClose}\n            centered\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\n            className = \"sypp-modal-content\"\n            >\n                <div className = 'sypp-create-detail-modal-container'>\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\n                    <CreateEditContact onSaveContactNote = {this.props.onSaveContactNote} Contact = {this.props.contact} handleClose = {this.handleClose} type ={this.props.type} companyID = {this.props.companyID} applicationID = {this.props.applicationID}/>\n                </div>\n            </Modal>\n            </div>\n        )\n    }\n}\nexport default connect(null,null)(ApplicationDetailContacts)\nconst radios = \n        [\n            { name: 'a', value: '0' },\n            { name: 'b', value: '1' },\n            { name: 'c', value: '2' },\n        ]","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_detail/application_detail_components/ApplicationDetailNotes.js",["376","377","378","379","380","381","382","383","384"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'draft-js/dist/Draft.css';\nimport './ApplicationDetailNotes.scss'\nimport './../ApplicationDetail.scss'\n\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\nimport {connect} from 'react-redux'\n// import { setCompany } from '../redux/company-reducer/companyAction';\nimport Modal from 'react-bootstrap/Modal';\n// import CreateEditNote from './../create_edit_applications_components/create_edit_note/CreateEditNote'\nimport CreateEditNote from './../../../components/create_edit_components/create_edit_note/CreateEditNote'\n\nconst {hasCommandModifier} = KeyBindingUtil;\nconst mapStatetoProps = state => {\n  return{\n      apps: state.application.applications,\n  }\n}\n\nconst mapDispatchToProps= dispatch =>{\n  return {\n      setApps: (applications) => dispatch(setApps(applications)),\n      // setCompany : (companies) => dispatch(setCompany(companies))\n  }\n}\n\n\nclass ApplicationDetailNotes extends React.Component {\n    constructor(props) {\n        super(props);\n        const contentBlocksArray = []\n        for (var i=0;i<this.props.Note.contents.length;i++){\n            if(this.props.Note.contents.length !== 0){\n                contentBlocksArray.push(\n                    new ContentBlock({\n                        key: this.props.Note.contents[i].noteContentsID,\n                        type: 'unordered-list-item',\n                        depth: 0,\n                        text: this.props.Note.contents[i].header\n                      })\n                )\n                for(var j=0;j<this.props.Note.contents[i].contents_Text.length;j++){\n                    contentBlocksArray.push(\n                        new ContentBlock({\n                            key: genKey(),\n                            type: 'unordered-list-item',\n                            depth: 1,\n                            text: this.props.Note.contents[i].contents_Text[j]\n                          })\n                    )\n                }\n            }\n        }\n          this.state = {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\n          show : false\n\n        };\n      }\n      currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\n      \n      currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\n      \n      myKeyBindingFn = (e) => {\n        switch (e.keyCode) {\n          case 9: // TAB\n            if(this.currentBlockIndex() == 0){\n              return undefined\n            }\n            else {\n            const newEditorState = RichUtils.onTab(\n              e,\n              this.state.editorState,\n              1 /* maxDepth */,\n            );\n            if (newEditorState !== this.state.editorState) {\n              this.setState({\n                editorState: newEditorState\n              })\n              return null;\n            }\n          }\n          default: \n            return getDefaultKeyBinding(e);      \n      }\n    }\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\n    _handleChange = (editorState) => {\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\n        this.setState({editorState: newEditorState})\n      }\n      else{\n        this.setState({ editorState});\n      }\n    }\n\n    handleClose = () => {\n      this.setState({\n        show:false\n      })\n    }\n    handleOpen = (e) =>{\n      e.preventDefault()\n      this.setState({\n        show:true\n      })\n    }\n     \n    \n      render() {\n        return (\n          <div className= \"sypp-ApplicationDetailNote-container\">\n            <div className=\"sypp-ApplicationDetailNote-title-container\" onClick = {this.handleOpen}>\n            <div className = \"sypp-ApplicationDetailNote-title\">\n            <div className = \"sypp-applicationDetailTextTitle\">{this.props.Note.detail.title}</div>\n            </div>\n            <div>\n            {\n              this.props.Note.contents.map((data) => (\n                <div>\n                <div className = \"sypp-note-text-header\">{' • ' +data.header}</div>\n                {\n                  data.contents_Text.length != 0 ?  \n                    data.contents_Text.map((subText)=>(\n                      <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\n                    ))\n                  : undefined\n                }\n                </div>\n              ))\n            }\n            {/* <Editor \n              toolbarHidden\n              editorClassName=\"sypp-editor-class\"\n              editorState={this.state.editorState}\n              onEditorStateChange={this._handleChange}\n              keyBindingFn={this.myKeyBindingFn}\n            /> */}\n            </div>\n            </div>\n            <Modal \n            show={this.state.show}\n            onHide={this.handleClose}\n            centered\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\n            className = \"sypp-modal-content\"\n            >\n                <div className = 'sypp-create-detail-modal-container'>\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\n                    <CreateEditNote  _handleChange = {this._handleChange} onSaveNote = {this.props.onSaveNote} Note = {this.props.Note} handleClose = {this.handleClose} editorState = {this.state.editorState} applicationID = {this.props.applicationID} type ={this.props.type} companyID = {this.props.companyID}/>\n                </div>\n            </Modal>\n          </div>\n        );\n      }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationDetailNotes)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_event/CreateEditEvent.js",["385","386","387","388","389","390","391","392","393","394","395","396"],"import React, {Component} from 'react';\nimport EventDetail from './EventDetail'\nimport EventSelectDate from './EventSelectDate'\n\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nimport {connect} from 'react-redux'\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\n// import {setCompany} from './../../redux/company-reducer/companyAction'\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,\n        // companies: state.companies.companies,\n    }\n  }\n  \n  const mapDispatchToProps= dispatch =>{\n    return {\n        setApps : (applications) => dispatch(setApps(applications)),\n        // setCompany : (companies) => dispatch(setCompany(companies)),\n        // updateApplicationDetail: (applications) => dispatch(updateApplicationDetail(applications)),\n    }\n  }\n\n\nexport class CreateEditEvent extends Component {\n    state = {\n        type: '',\n        step: 1,\n        eventID : '',\n        eventName : '',\n        eventLocation :'',\n        eventNote : '',\n        eventDate : '',\n        eventHour : 0,\n        eventMinute : 0,\n        eventTimeConvert : '',\n        editorState : ''\n    }\n\n    //componentDidMount will determine if this is a new Event\n    //if this is not a new event, will call exisitng features and save them to the state\n    componentDidMount(){\n        this.setState({\n            type : this.props.type\n        })\n        if(this.props.Event !== ''){            \n            this.setState({\n                eventID: this.props.Event.eventID,\n                eventName : this.props.Event.detail.title,\n                eventLocation :this.props.Event.detail.location,\n                eventNote : '',\n                eventDate : this.props.Event.detail.time,\n                eventHour : 0,\n                eventMinute : 0,\n                eventTimeConvert : '',\n                editorState : this.props.editorState\n            })\n        }\n    }\n\n//API CALL HERE\n// //Send Post request, close modal(save button)\n\n    onSaveButton = (editorState) => {\n        // this.props.postNewApp(this.props.addApp)\n    var newNoteContent = []\n    if(editorState !== ''){\n        newNoteContent = [{\n            noteContentsID : editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\n            header : editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\n            contents_Text : []\n      }];\n      var tracker = 0;\n        for(var i=1;i<editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\n          if(editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\n            tracker++;\n            newNoteContent.push({\n                noteContentsID : editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\n                header : editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\n                contents_Text : []\n            })\n          }\n          else{\n            newNoteContent[tracker].contents_Text.push(editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\n          }\n        }\n    }\n        //Creating a new event\n        if(this.state.eventID === '' && this.state.type ==='application'){\n            var apps = this.props.apps\n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    const key = genKey()\n                    apps[i].events.push(  \n                        {\n                            eventID: key,\n                            detail: {\n                                eventID: key,\n                                applicationID: this.props.applicationID,\n                                time: this.state.eventDate,\n                                location: this.state.eventLocation,\n                                title: this.state.eventName\n                            },\n                            contents: newNoteContent\n                        }\n                    )\n                }\n            }\n            this.props.setApps(apps)\n        }\n        //editing an existing event, app\n        else if(this.state.eventID !== '' && this.state.type ==='application'){\n            console.log(this.state.eventID)\n            var apps = this.props.apps \n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    for(var j=0; j<this.props.apps[i].events.length;j++){\n                        if(this.props.apps[i].events[j].eventID === this.state.eventID){\n                            console.log(\"this one is triggeredd?\")\n                            apps[i].events[j] = {\n                                eventID: this.state.eventID,\n                                detail: {\n                                    eventID: this.state.eventID,\n                                    applicationID: this.props.applicationID,\n                                    time: this.state.eventDate,\n                                    location: this.state.eventLocation,\n                                    title: this.state.eventName\n                                },\n                                contents: newNoteContent\n                            }\n                        }\n                    }\n                }\n            }\n            this.props.setApps(apps)\n            this.props.onSaveEventNote()\n            this.props._handleChange(editorState)\n        }\n        //Company save function\n\n        // else if(this.state.eventID === '' && this.state.type ==='company'){\n        //     var companies = this.props.companies\n        //     for(var i=0;i<this.props.companies.length;i++){\n        //         if(this.props.companies[i].companyID === this.props.companyID){\n        //             const key = genKey()\n        //             companies[i].Events.push(  \n        //                 {\n        //                     eventID: key,\n        //                     Detail: {\n        //                         eventID: key,\n        //                         applicationID: this.props.companyID,\n        //                         Time: this.state.eventDate,\n        //                         Location: this.state.eventLocation,\n        //                         Title: this.state.eventName\n        //                     },\n        //                     Contents: newNoteContent\n        //                 }\n        //             )\n        //         }\n        //     }\n        //     this.props.onSaveEventNote()\n        //     this.props.setCompany(companies)\n        //     this.setState({})\n        // }\n        // else if(this.state.eventID !== '' && this.state.type ==='company'){\n        //     console.log(this.state.eventID)\n        //     var companies = this.props.companies \n        //     for(var i=0;i<this.props.companies.length;i++){\n        //         if(this.props.companies[i].companyID === this.props.companyID){\n        //             for(var j=0; j<this.props.companies[i].Events.length;j++){\n        //                 if(this.props.companies[i].Events[j].eventID === this.state.eventID){\n        //                     console.log(\"this one is triggeredd?\")\n        //                     companies[i].Events[j] = {\n        //                         eventID: this.state.eventID,\n        //                         Detail: {\n        //                             eventID: this.state.eventID,\n        //                             applicationID: this.props.companyID,\n        //                             Time: this.state.eventDate,\n        //                             Location: this.state.eventLocation,\n        //                             Title: this.state.eventName\n        //                         },\n        //                         Contents: newNoteContent\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     this.props.setCompany(companies)\n        //     this.props.onSaveEventNote()\n        //     this.props._handleChange(editorState)\n        //     this.setState({})\n        // }\n        this.props.handleClose()\n    }\n\n    onChangeName = (e) =>{\n        this.setState({\n            eventName : e.currentTarget.value\n        })\n        console.log(this.state.eventName)\n    }\n    onChangeLocation = (e) =>{\n        this.setState({\n            eventLocation : e.currentTarget.value\n        })\n    }\n    onChangeDate = (date) =>{\n        this.setState({\n            eventDate : date\n        })\n        console.log(date)\n    }\n    onChangeHour = (hour) =>{\n        this.setState({\n            eventHour : hour\n        })\n    }\n    onChangeMinute = (minute) =>{\n        this.setState({\n            eventMinute : minute\n        })\n    }\n    nextStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step + 1\n        });\n    }\n    prevStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n    handleEditorState = (editorState) =>{\n        this.setState({\n            editorState: editorState\n        })\n    }\n\n\n    \n    render(){\n        const{step} = this.state;\n        switch(step){\n            case 1:\n                return(\n                    <div>\n                        <EventDetail \n                            nextStep = {this.nextStep}\n                            eventName = {this.state.eventName}\n                            onChangeName = {this.onChangeName}\n                            eventLocation = {this.state.eventLocation}\n                            onChangeLocation = {this.onChangeLocation}\n                            handleClose = {this.props.handleClose}\n                            eventDate = {this.state.eventDate}\n                            editorState = {this.props.editorState}\n                            handleEditorState = {this.handleEditorState}\n                            onSaveButton = {this.onSaveButton}\n                            Event = {this.props.Event}\n                        />\n                    </div>\n                );\n            case 2:\n                return (\n                    <div>\n                        <EventSelectDate\n                        prevStep = {this.prevStep}\n                        onChangeDate = {this.onChangeDate}\n                        onChangeHour = {this.onChangeHour}\n                        onChangeMinute = {this.onChangeMinute}\n                        handleClose = {this.props.handleClose}\n                        eventDate = {this.state.eventDate}\n                        eventHour = {this.state.eventHour}\n                        eventMinute = {this.state.eventMinute}\n                        />\n                    </div>\n                )\n        }\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditEvent)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_contact/CreateEditContact.js",["397","398","399","400","401","402","403","404"],"import React, {Component} from 'react';\n\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport {connect} from 'react-redux'\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\n\n// import {setCompany} from './../../redux/company-reducer/companyAction'\n\n\nimport './../create_edit_event/CreateEvent.scss'\nimport './../CreateEditDetail.scss'\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,\n        \n    }\n  }\n  \n  const mapDispatchToProps= dispatch =>{\n    return {\n        setApps : (applications) => dispatch(setApps(applications)),\n        // setCompany : (companies) => dispatch(setCompany(companies)),\n    }\n  }\n\n\nexport class CreateEditContact extends Component {\n    state = {\n        type: '',\n        contactID : '',\n        Firstname : '',\n        Title : '',\n        Email : '',\n        emailID : '',\n        PhoneNumber : '',\n        phoneID: '',\n        editorState : '',\n    }\n\n    //componentDidMount will determine if this is a new Event\n    //if this is not a new event, will call exisitng features and save them to the state\n    componentDidMount(){\n        this.setState({\n            type : this.props.type\n        })\n        if(this.props.Contact !== ''){\n            const contentBlocksArray = []\n            for (var i=0;i<this.props.Contact.convo.length;i++){\n            if(this.props.Contact.convo.length !== 0){\n                contentBlocksArray.push(\n                    new ContentBlock({\n                        key: this.props.Contact.convo[i].noteContentsID,\n                        type: 'unordered-list-item',\n                        depth: 0,\n                        text: this.props.Contact.convo[i].header\n                      })\n                )\n                for(var j=0;j<this.props.Contact.convo[i].contents_Text.length;j++){\n                    contentBlocksArray.push(\n                        new ContentBlock({\n                            key: genKey(),\n                            type: 'unordered-list-item',\n                            depth: 1,\n                            text: this.props.Contact.convo[i].contents_Text[j]\n                          })\n                    )\n                }\n            }\n        }\n            this.setState({\n                contactID : this.props.Contact.contactID,\n                Firstname : this.props.Contact.personalDetail.firstname,\n                Title : this.props.Contact.personalDetail.title,\n                Email : this.props.Contact.email.email,\n                emailID : this.props.Contact.email.emailID,\n                PhoneNumber : this.props.Contact.phone.phoneNumber,\n                phoneID: this.props.Contact.phone.phoneID,\n                editorState : EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray))\n            })\n        }\n    }\n\n//API CALL HERE\n// //Send Post request, close modal(save button)\n\n\n    onSaveButton = () => {\n        // this.props.postNewApp(this.props.addApp)\n        console.log(this.state.editorState)\n        var newNoteContent = []\n        if(this.state.editorState !== ''){\n        newNoteContent = [{\n        noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\n        header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\n        contents_Text : []\n      }];\n      var tracker = 0;\n        for(var i=1;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\n          if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\n            tracker++;\n            newNoteContent.push({\n              noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\n              header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\n              contents_Text : []\n            })\n          }\n          else{\n            newNoteContent[tracker].contents_Text.push(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\n          }\n        }\n        }\n\n        //Creating a new event\n        if(this.state.contactID === '' && this.state.type ==='application'){\n            var apps = this.props.apps\n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    const key = genKey()\n                    console.log(\"this one is triggeredd...\")\n                    apps[i].contacts.push(  \n                        {\n                            contactID: key,\n                            personalDetail: {\n                                contactID: key,\n                                title: this.state.Title,\n                                firstname : this.state.Firstname,\n                            },\n                            email: {\n                                email: this.state.Email,\n                                emailID : genKey()\n                            },\n                            phone: {\n                                phoneNumber : this.state.PhoneNumber,\n                                phoneID : genKey()\n                            },\n                            convo: newNoteContent\n                        }\n                    )\n                }\n            }\n            this.props.setApps(apps)\n        }\n        //editing an existing event, app\n        else if(this.state.contactID !== '' && this.state.type ==='application'){\n            var apps = this.props.apps \n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    for(var j=0; j<this.props.apps[i].contacts.length;j++){\n                        if(this.props.apps[i].contacts[j].contactID === this.state.contactID){\n                            apps[i].contacts[j] = {\n                                contactID: this.state.contactID,\n                                personalDetail: {\n                                    contactID: this.state.contactID,\n                                    title: this.state.Title,\n                                    firstname : this.state.Firstname,\n                                },\n                                email: {\n                                    email: this.state.Email,\n                                    emailID : this.state.emailID\n                                },\n                                phone: {\n                                    phoneNumber : this.state.PhoneNumber,\n                                    phoneID : this.state.phoneID\n                                },\n                                convo: newNoteContent\n                            }\n                        }\n                    }\n                }\n            }\n            this.props.setApps(apps)\n            this.props.onSaveContactNote()\n        }\n        this.props.handleClose()\n    }\n\n    onChangeName = (e) =>{\n        this.setState({\n            Firstname : e.currentTarget.value\n        })\n    }\n    onChangePosition = (e) =>{\n        this.setState({\n            Title : e.currentTarget.value\n        })\n    }\n    onChangeEmail = (e) =>{\n        this.setState({\n            Email : e.currentTarget.value\n        })\n    }\n    onChangePhoneNumber = (e) =>{\n        this.setState({\n            PhoneNumber : e.currentTarget.value\n        })\n    }\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\n      \n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\n      \n    myKeyBindingFn = (e) => {\n        switch (e.keyCode) {\n          case 9: // TAB\n            if(this.currentBlockIndex() == 0){\n              return undefined\n            }\n            else {\n            const newEditorState = RichUtils.onTab(\n              e,\n              this.state.editorState,\n              1 /* maxDepth */,\n            );\n            if (newEditorState !== this.state.editorState) {\n              this.setState({\n                editorState: newEditorState\n              })\n              return null;\n            }\n          }\n          default: \n            return getDefaultKeyBinding(e);      \n      }\n    }\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\n    _handleChange = (editorState) => {\n      console.log(this.state.editorState)\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\n        this.setState({editorState: newEditorState})\n      }\n      else{\n        this.setState({editorState});\n      }\n    }\n\n    \n    render(){\n       return (\n        <div>\n            <div className = \"sypp-create-edit-detail-container\">\n            <input\n                className = \"sypp-event-name\"\n                placeholder=\"Contact Name Here\"\n                onChange={e => this.onChangeName(e)}\n                value={this.state.Firstname}\n                />\n                <input\n                className = \"sypp-contact-name-subTitle\"\n                placeholder=\"Contact Name Here\"\n                onChange={e => this.onChangePosition(e)}\n                value={this.state.Title}\n                />\n             <div className =\"sypp-event-seperateLine\"></div>\n            <div className = \"sypp-event-title\">Email</div>\n            <input\n                className = \"sypp-contact-name-body\"\n                placeholder=\"Contact Name Here\"\n                onChange={e => this.onChangeEmail(e)}\n                value={this.state.Email}\n            />\n            <div className = \"sypp-event-title\">PhoneNumber</div>\n            <input\n                className = \"sypp-contact-name-body\"\n                placeholder=\"Contact Name Here\"\n                onChange={e => this.onChangePhoneNumber(e)}\n                value={this.state.PhoneNumber}\n            />\n            <div className = \"sypp-event-title\">Notes</div>\n\n            <div style={{overflowY: 'scroll', height: '170px'}}>\n                <Editor \n                    placeholder = \"      Text Here\"\n                    toolbarHidden\n                    editorClassName=\"sypp-editor-class\"\n                    editorState={this.state.editorState}\n                    onEditorStateChange={this._handleChange}\n                    keyBindingFn={this.myKeyBindingFn}\n                />\n            </div>\n            </div>\n            <div className = \"sypp-event-bottom-options-container\">\n                <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\n                <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSaveButton}>Save</button>\n                <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\n            </div>\n        </div>\n       );\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditContact)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_checklist/CreateEditChecklist.js",["405","406","407","408","409","410","411","412","413","414","415","416","417","418"],"import React, {Component} from 'react';\n\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport {connect} from 'react-redux'\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\nimport {setCompany} from './../../../redux/company-reducer/companyAction'\nimport './../create_edit_event/CreateEvent.scss'\nimport './../CreateEditDetail.scss'\n\n\nimport { faListAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquare, faCheckSquare } from \"@fortawesome/free-regular-svg-icons\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,\n        // pending: state.progress.isPending,\n        // categories: state.categories.categories, \n        companies: state.companies.companies,\n    }\n  }\n  \n  const mapDispatchToProps= dispatch =>{\n    return {\n        setApps : (applications) => dispatch(setApps(applications)),\n        setCompany : (companies) => dispatch(setCompany(companies)),\n\n    }\n  }\n\n\nexport class CreateEditChecklist extends Component {\n    state = {\n        type: '',\n        checkListsID : '',\n        Title : '',\n        Time : '',\n        editorState : '',\n        checkboxState : []\n    }\n\n    //componentDidMount will determine if this is a new Event\n    //if this is not a new event, will call exisitng features and save them to the state\n    componentDidMount(){\n        console.log(this.props.companyID)\n        console.log(this.props.Checklist)\n        console.log(this.props.checkboxState)\n\n        this.setState({\n            type : this.props.type\n        })\n        if(this.props.Checklist !== ''){\n            const contentBlocksArray = []\n            const checkboxArray =[]\n            for (var i=0;i<this.props.Checklist.files.length;i++){\n              var checklistID = genKey();\n                if(this.props.Checklist.files.length !== 0){\n                    contentBlocksArray.push(\n                        new ContentBlock({\n                            key: checklistID,\n                            type: 'unstyled',\n                            depth: 0,\n                            text: this.props.Checklist.files[i].title\n                          })\n                    )\n                }\n                checkboxArray.push({\n                    checklistID : checklistID,\n                    checkboxBoolean: this.props.Checklist.files[i].isChecked\n                })\n            }\n            this.setState({\n                checkListsID : this.props.Checklist.checklistID,\n                Title : this.props.Checklist.type,\n                editorState : EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\n                checkboxState : checkboxArray\n            })\n        }\n    }\n\n\n//API CALL HERE\n// //Send Post request, close modal(save button)\n\n    onSaveButton = () => {\n        // this.props.postNewApp(this.props.addApp)\n        var newNoteContent = []\n        if(this.state.editorState !== ''){\n            for(var i=0;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\n                newNoteContent.push({\n                    // checklistID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\n                    title : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\n                    isChecked : this.state.checkboxState[i].checkboxBoolean,\n                    contents : 'null'\n                })\n            }\n        }\n        //Creating a new event\n        if(this.state.checkListsID === '' && this.state.type ==='application'){\n            var apps = this.props.apps\n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    const key = genKey()\n                    apps[i].checklists.push(  \n                        {\n                            checklistsID: key,\n                            submission : false, \n                            type : this.state.Title,\n                            files: newNoteContent\n                        }\n                    )\n                }\n            }\n            this.props.setApps(apps)\n        }\n        //editing an existing event, app\n        else if(this.state.checkListsID !== '' && this.state.type ==='application'){\n            this.props.handleCheckbox(this.state.checkboxState)\n            var apps = this.props.apps \n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    for(var j=0; j<this.props.apps[i].checklists.length;j++){\n                        if(this.props.apps[i].checklists[j].checklistID === this.state.checkListsID){\n                            apps[i].checklists[j] = {\n                                checklistsID: this.state.checkListsID,\n                                submission : false,\n                                type : this.state.Title,\n                                files: newNoteContent\n                            }                \n                        }\n                    }\n                }\n            }\n            this.props.setApps(apps)\n            this.props._handleChange(this.state.editorState)\n            this.props.onSaveChecklist()\n        }\n        //company detail fixing part, when it doesnt exist \n        else if(this.state.checkListsID === '' && this.state.type ==='company'){\n            var companies = this.props.companies\n            for(var i=0;i<this.props.companies.length;i++){\n                if(this.props.companies[i].companyID === this.props.companyID){\n                    const key = genKey()\n                    companies[i].checklists.push(  \n                        {\n                            checklistID: key,\n                            submission : false, \n                            type : this.state.Title,\n                            files: newNoteContent\n                        }\n                    )\n                }\n            }\n            this.props.setCompany(companies)\n        }\n        else if(this.state.checkListsID !== '' && this.state.type ==='company'){\n            this.props.handleCheckbox(this.state.checkboxState)\n            var companies = this.props.companies \n            for(var i=0;i<this.props.companies.length;i++){\n                if(this.props.companies[i].companyID === this.props.companyID){\n                    for(var j=0; j<this.props.companies[i].checklists.length;j++){\n                        if(this.props.companies[i].checklists[j].checklistID === this.state.checkListsID){\n                            companies[i].checklists[j] = {\n                                checklistID: this.state.checkListsID,\n                                submission : false,\n                                type : this.state.Title,\n                                files: newNoteContent\n                            }\n                        }\n                    }\n                }\n            }\n            this.props.setCompany(companies)\n            this.props._handleChange(this.state.editorState)\n            this.props.onSaveChecklist()\n        }\n        this.props.handleClose()\n    }\n\n    onChangeTitle = (e) =>{\n        this.setState({\n            Title : e.currentTarget.value\n        })\n    }\n\n    handleEditorState = (editorState) =>{\n        this.setState({\n            editorState: editorState\n        })\n    }\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\n      \n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\n      \n    _handleChange = (editorState) => {      \n            this.setState({editorState});\n            if(this.state.editorState!==''){\n            if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length > this.state.checkboxState.length){\n                var tempCheckbox = \n                [\n                    ...this.state.checkboxState.slice(0, this.currentBlockIndex()),\n                    {\n                        checklistID: this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][0],\n                        checkboxBoolean: false\n                    },\n                    ...this.state.checkboxState.slice(this.currentBlockIndex())\n                ]\n               this.setState({\n                checkboxState : tempCheckbox\n               })\n               console.log(this.state.checkboxState)\n            }\n            else if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length < this.state.checkboxState.length){\n                var tempCheckbox = []\n                for(var i = 0; i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\n                    for(var j=0;j< this.state.checkboxState.length;j++){\n                        if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0]===this.state.checkboxState[j].checklistID){\n                            tempCheckbox.push(this.state.checkboxState[j])\n                        }\n                    }\n                }\n               this.setState({\n                checkboxState : tempCheckbox\n               })\n            }\n        }\n            this.setState({})\n        }\n\n    onCheckBoxClick = (checkboxID) => {\n        var tempCheckbox = this.state.checkboxState\n        for(var i=0;i<this.state.checkboxState.length;i++){\n            if(checkboxID === this.state.checkboxState[i].checklistID){\n                tempCheckbox[i].checkboxBoolean = !tempCheckbox[i].checkboxBoolean\n            }\n            this.setState({\n                checkboxState : tempCheckbox \n            })\n        }\n    }\n\n    \n    render(){\n       return (\n        <div>\n            <div className = \"sypp-create-edit-detail-container\">\n            <input\n                className = \"sypp-event-name\"\n                placeholder=\"Checklist Name\"\n                onChange={e => this.onChangeTitle(e)}\n                value={this.state.Title}\n                />\n             <div className =\"sypp-event-seperateLine\"></div>\n            <div className = \"sypp-ApplicationDetailChecklists-container\" style={{overflowY: 'scroll', height: '340px'}}>\n            <div className = \"sypp-CheckList-Container\">\n            {\n                this.state.checkboxState.length === 0 ? \n                <div className = \"sypp-emptybody-checkbox-container\">\n                    <FormControlLabel \n                    className = \"sypp-FormRoot\"\n                    control = {\n                    <Checkbox \n                    icon=  {<FontAwesomeIcon className = \"sypp-CheckBox-icon\" icon={faSquare}/> }\n                    checkedIcon= {<FontAwesomeIcon className = \" sypp-checked sypp-emptybody-checkbox\" icon={faCheckSquare}/> }\n                    className = \"sypp-Checkbox-padding sypp-Checkbox-padding2\"\n                    checked = {true} \n                    />}\n                    />\n                </div>\n                :this.state.checkboxState.map((checkbox) => (\n                    // <FormGroup row>\n                    <div className = \"sypp-checkbox-container\">\n                    <FormControlLabel \n                    className = \"sypp-FormRoot\"\n                    control = {\n                    <Checkbox \n                    icon=  {<FontAwesomeIcon className = \"sypp-CheckBox-icon\" icon={faSquare}/> }\n                    checkedIcon= {<FontAwesomeIcon className = \"sypp-CheckBox-icon sypp-checked\" icon={faCheckSquare}/> }\n                    className = \"sypp-Checkbox-padding sypp-Checkbox-padding2\"\n                    checked = {checkbox.checkboxBoolean} \n                    onChange = {() => this.onCheckBoxClick(checkbox.checklistID)}/>}\n                    />\n                    </div>\n                ))\n            }\n            </div>\n            <div className = \"sypp-Editor-Container\">\n                <Editor \n                toolbarHidden\n                editorClassName=\"sypp-editor-class sypp-checkbox-editorState\"\n                placeholder = \"Checklist Items\"\n                editorState={this.state.editorState}\n                onEditorStateChange={this._handleChange}\n                //   keyBindingFn={this.myKeyBindingFn}\n                />\n            </div>\n            </div>\n            </div>\n            <div className = \"sypp-event-bottom-options-container\">\n                <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\n                <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSaveButton}>Save</button>\n                <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\n            </div>\n        </div>\n       );\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditChecklist)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_conversation/CreateEditConversation.js",["419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"import React, {Component} from 'react';\nimport ConversationDetail from './ConversationDetail'\nimport ConversationDate from './ConversationDate'\n\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nimport {connect} from 'react-redux'\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\n\n// import {setCompany} from '../../redux/company-reducer/companyAction'\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,\n    \n        // companies: state.companies.companies,\n    }\n  }\n  \n  const mapDispatchToProps= dispatch =>{\n    return {\n        setApps : (applications) => dispatch(setApps(applications)),\n        // setCompany : (companies) => dispatch(setCompany(companies)),\n        // updateApplicationDetail: (applications) => dispatch(updateApplicationDetail(applications)),\n    }\n  }\nexport class CreateEditConversation extends Component {\n    constructor(props){\n        super(props)\n        \n        this.state = \n        {\n            step : 1,\n            type: '',\n            followUpID : '',\n            time : '',\n            name : '',\n            position : '',\n            editorState : ''\n        }\n    }\n\n    //componentDidMount will determine if this is a new Event\n    //if this is not a new event, will call exisitng features and save them to the state\n    componentDidMount(){\n        this.setState({\n            type : this.props.type\n        })\n        if(this.props.FollowUp !== ''){  \n            this.setState({\n                followUpID : this.props.FollowUp.followUpID,\n                name : this.props.FollowUp.personnel.firstname,\n                time : this.props.FollowUp.time,\n                position : this.props.FollowUp.personnel.company,\n            })\n        }\n}\n\n//API CALL HERE\n// //Send Post request, close modal(save button)\n\n    onSaveButton = () => {\n        // this.props.postNewApp(this.props.addApp)\n    var newNoteContent = []\n    if(this.state.editorState !== ''){\n        newNoteContent = [{\n        noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\n        Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\n        Contents_Text : []\n      }];\n      var tracker = 0;\n        for(var i=1;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\n          if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\n            tracker++;\n            newNoteContent.push({\n            noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\n              Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\n              Contents_Text : []\n            })\n          }\n          else{\n            newNoteContent[tracker].Contents_Text.push(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\n          }\n        }\n    }\n        //Creating a new event\n        if(this.state.followUpID === '' && this.state.type ==='application'){\n            var apps = this.props.apps\n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    const key = genKey()\n                    apps[i].FollowUps.push(  \n                        {\n                            followUpID : key,\n                            Time : this.state.time,\n                            Personnel: {\n                                followUpID : key,\n                                Name: this.state.name,\n                                Position: this.state.position,\n                            },\n                            Description: newNoteContent\n                        }\n                    )\n                }\n            }\n            this.props.setApps(apps)\n        }\n        //editing an existing event, app\n        else if(this.state.followUpID !== '' && this.state.type ==='application'){\n            var apps = this.props.apps \n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    for(var j=0; j<this.props.apps[i].FollowUps.length;j++){\n                        if(this.props.apps[i].FollowUps[j].followUpID === this.state.followUpID){\n                            console.log(\"this one is triggeredd?\")\n                            apps[i].FollowUps[j] = {\n                                followUpID: this.state.followUpID,\n                                Time : this.state.time,\n                                    Personnel: {\n                                        followUpID : this.state.followUpID,\n                                        Name: this.state.name,\n                                        Position: this.state.position,\n                                    },\n                                Description: newNoteContent\n                                }\n                        }\n                    }\n                }\n            }\n            this.props.setApps(apps)\n            this.props.onSaveConversation()\n            this.props._handleChange(this.state.editorState)\n            this.setState({})\n        }\n        else if(this.state.followUpID === '' && this.state.type ==='company'){\n            var companies = this.props.companies\n            for(var i=0;i<this.props.companies.length;i++){\n                if(this.props.companies[i].companyID === this.props.companyID){\n                    const key = genKey()\n                    companies[i].FollowUps.push(  \n                        {\n                            followUpID : key,\n                            Time : this.state.time,\n                            Personnel: {\n                                followUpID : key,\n                                Name: this.state.name,\n                                Position: this.state.position,\n                            },\n                            Description: newNoteContent\n                        }\n                    )\n                }\n            }\n            this.props.setCompany(companies)\n            this.setState({})\n        }\n        else if(this.state.followUpID !== '' && this.state.type ==='company'){\n            console.log(this.state.eventID)\n            var companies = this.props.companies \n            for(var i=0;i<this.props.companies.length;i++){\n                if(this.props.companies[i].companyID === this.props.companyID){\n                    for(var j=0; j<this.props.companies[i].FollowUps.length;j++){\n                        if(this.props.companies[i].FollowUps[j].followUpID === this.state.followUpID){\n                            console.log(\"this one is triggeredd?\")\n                            companies[i].FollowUps[j] = {\n                                followUpID : this.state.followUpID,\n                                Time : this.state.time,\n                                Personnel: {\n                                    followUpID : this.state.followUpID,\n                                    Name: this.state.name,\n                                    Position: this.state.position,\n                                },\n                                Description: newNoteContent\n                                }\n                        }\n                    }\n                }\n            }\n            this.props.setCompany(companies)\n            this.props.onSaveConversation()\n            this.props._handleChange(this.state.editorState)\n            this.setState({})\n        }\n        this.props.handleClose()\n    }\n\n    onChangeName = (e) =>{\n        this.setState({\n            name : e.currentTarget.value\n        })\n        console.log(this.state.eventName)\n    }\n    onChangePosition = (e) =>{\n        this.setState({\n            position : e.currentTarget.value\n        })\n    }\n    onChangeDate = (date) =>{\n        this.setState({\n            time : date\n        })\n    }\n    nextStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step + 1\n        });\n    }\n    prevStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n    handleEditorState = (editorState) =>{\n        this.setState({\n            editorState: editorState\n        })\n    }\n    \n    render(){\n        const{step} = this.state;\n        switch(step){\n            case 1:\n                return(\n                    <div>\n                        <ConversationDetail \n                            nextStep = {this.nextStep}\n                            name = {this.state.name}\n                            onChangeName = {this.onChangeName}\n                            position = {this.state.position}\n                            onChangePosition = {this.onChangePosition}\n                            handleClose = {this.props.handleClose}\n                            time = {this.state.time}\n                            handleEditorState = {this.handleEditorState}\n                            onSaveButton = {this.onSaveButton}\n                            FollowUp = {this.props.FollowUp}\n                        />\n                    </div>\n                );\n            case 2:\n                return (\n                    <div>\n                        <ConversationDate\n                        prevStep = {this.prevStep}\n                        onChangeDate = {this.onChangeDate}\n                        handleClose = {this.props.handleClose}\n                        time = {this.state.time}\n                        />\n                    </div>\n                )\n        }\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditConversation)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_note/CreateEditNote.js",["435","436","437","438","439","440","441","442","443","444","445","446","447","448"],"import React, {Component} from 'react';\n\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport {connect} from 'react-redux'\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\n// import {setCompany} from './../../redux/company-reducer/companyAction'\n\nimport '../create_edit_event/CreateEvent.scss'\nimport '../CreateEditDetail.scss'\n\nconst mapStatetoProps = state => {\n    return{\n        apps: state.application.applications,       \n        companies: state.companies.companies,\n    }\n  }\n  \n  const mapDispatchToProps= dispatch =>{\n    return {\n        setApps : (applications) => dispatch(setApps(applications)),\n        // setCompany : (companies) => dispatch(setCompany(companies)),\n    }\n  }\n\n\nexport class CreateEditNote extends Component {\n    state = {\n        type: '',\n        noteID : '',\n        noteDate : new Date(),\n        noteName : '',\n        editorState : ''\n    }\n\n    //componentDidMount will determine if this is a new Event\n    //if this is not a new event, will call exisitng features and save them to the state\n    componentDidMount(){\n        var editorState = ''\n        if(this.props.Note !== ''){\n            const contentBlocksArray = []\n            for (var i=0;i<this.props.Note.contents.length;i++){\n                if(this.props.Note.contents.length !== 0){\n                    contentBlocksArray.push(\n                        new ContentBlock({\n                            key: this.props.Note.contents[i].noteContentsID,\n                            type: 'unordered-list-item',\n                            depth: 0,\n                            text: this.props.Note.contents[i].header\n                          })\n                    )\n                    for(var j=0;j<this.props.Note.contents[i].contents_Text.length;j++){\n                        contentBlocksArray.push(\n                            new ContentBlock({\n                                key: genKey(),\n                                type: 'unordered-list-item',\n                                depth: 1,\n                                text: this.props.Note.contents[i].contents_Text[j]\n                              })\n                        )\n                    }\n                }\n            }\n              this.setState({\n              editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),    \n            });\n        }\n        this.setState({\n            type : this.props.type\n        })\n        if(this.props.Note !== ''){\n            this.setState({\n                noteID: this.props.Note.noteID,\n                noteName : this.props.Note.detail.title,\n                noteDate : this.props.Note.detail.time,\n            })\n        }\n    }\n\n//API CALL HERE\n// //Send Post request, close modal(save button)\n\n    onSaveButton = () => {\n        // this.props.postNewApp(this.props.addApp)\n        var newNoteContent = []\n        if(this.state.editorState !== ''){\n            var newNoteContent = [{\n            noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\n            header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\n            contents_Text : []\n        }];\n            var tracker = 0;\n            for(var i=1;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\n                if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\n                    tracker++;\n                    newNoteContent.push({\n                    noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\n                    header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\n                    contents_Text : []\n                    })\n                }\n                else{\n                    newNoteContent[tracker].contents_Text.push(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\n                }\n            }\n        }\n\n        //Creating a new event\n        if(this.state.noteID === '' && this.state.type ==='application'){\n            var apps = this.props.apps\n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    const key = genKey()\n                    apps[i].notes.push(  \n                        {\n                            noteID: key,\n                            detail: {\n                                noteID: key,\n                                time: this.state.noteDate,\n                                title: this.state.noteName\n                            },\n                            contents: newNoteContent\n                        }\n                    )\n                }\n            }\n            this.props.setApps(apps)\n        }\n        //editing an existing event, app\n        else if(this.state.noteID !== '' && this.state.type ==='application'){\n            var apps = this.props.apps \n            for(var i=0;i<this.props.apps.length;i++){\n                if(this.props.apps[i].applicationID === this.props.applicationID){\n                    for(var j=0; j<this.props.apps[i].notes.length;j++){\n                        if(this.props.apps[i].notes[j].noteID === this.state.noteID){\n                            apps[i].notes[j] = {\n                                noteID: this.state.noteID,\n                                detail: {\n                                    noteID: this.state.noteID,\n                                    time: this.state.noteDate,\n                                    title: this.state.noteName\n                                },\n                                contents: newNoteContent\n                            }\n                        }\n                    }\n                }\n            }\n            this.props.setApps(apps)\n            this.props._handleChange(this.state.editorState)\n            this.props.onSaveNote()\n        }\n        //company detail fixing part, when it doesnt exist \n        \n        else if(this.state.noteID === '' && this.state.type ==='company'){\n            var companies = this.props.companies\n            for(var i=0;i<this.props.companies.length;i++){\n                if(this.props.companies[i].companyID === this.props.companyID){\n                    const key = genKey()\n                    console.log(\"this one is triggeredd...\")\n                    companies[i].Notes.push(  \n                        {\n                            noteID: key,\n                            Detail: {\n                                noteID: key,\n                                Time: this.state.noteDate,\n                                Title: this.state.noteName\n                            },\n                            Contents: newNoteContent\n                        }\n                    )\n                }\n            }\n            this.props.setCompany(companies)\n        }\n        else if(this.state.noteID !== '' && this.state.type ==='company'){\n            var companies = this.props.companies \n            for(var i=0;i<this.props.companies.length;i++){\n                console.log(\"this one is triggeredd?\")\n                if(this.props.companies[i].companyID === this.props.companyID){\n                    for(var j=0; j<this.props.companies[i].Notes.length;j++){\n                        if(this.props.companies[i].Notes[j].noteID === this.state.noteID){\n                            companies[i].Notes[j] = {\n                                noteID: this.state.noteID,\n                                Detail: {\n                                    noteID: this.state.noteID,\n                                    Time: this.state.noteDate,\n                                    Title: this.state.noteName\n                                },\n                                Contents: newNoteContent\n                            }\n                        }\n                    }\n                }\n            }\n            this.props._handleChange(this.state.editorState)\n            this.props.setCompany(companies)\n            this.props.onSaveNote()\n        }\n        this.props.handleClose()\n    }\n\n    onChangeName = (e) =>{\n        this.setState({\n            noteName : e.currentTarget.value\n        })\n    }\n\n    handleEditorState = (editorState) =>{\n        this.setState({\n            editorState: editorState\n        })\n    }\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\n      \n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\n      \n    myKeyBindingFn = (e) => {\n        switch (e.keyCode) {\n          case 9: // TAB\n            if(this.currentBlockIndex() == 0){\n              return undefined\n            }\n            else {\n            const newEditorState = RichUtils.onTab(\n              e,\n              this.state.editorState,\n              1 /* maxDepth */,\n            );\n            if (newEditorState !== this.state.editorState) {\n              this.setState({\n                editorState: newEditorState\n              })\n              return null;\n            }\n          }\n          default: \n            return getDefaultKeyBinding(e);      \n      }\n    }\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\n    _handleChange = (editorState) => {\n      console.log(this.state.editorState)\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\n        this.setState({editorState: newEditorState})\n      }\n      else{\n        this.setState({editorState});\n      }\n    }\n\n    \n    render(){\n       return (\n        <div>\n            <div className = \"sypp-create-edit-detail-container\">\n            <input\n                className = \"sypp-event-name\"\n                placeholder=\"Note Title Here\"\n                onChange={e => this.onChangeName(e)}\n                value={this.state.noteName}\n                />\n             <div className =\"sypp-event-seperateLine\"></div>\n            <div className = \"sypp-event-title\">Notes</div>\n            <Editor \n                placeholder = \"      Text Here\"\n                toolbarHidden\n                editorClassName=\"sypp-editor-class\"\n                editorState={this.state.editorState}\n                onEditorStateChange={this._handleChange}\n                keyBindingFn={this.myKeyBindingFn}\n            />\n            </div>\n            <div className = \"sypp-event-bottom-options-container\">\n                <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\n                <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSaveButton}>Save</button>\n                <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\n            </div>\n        </div>\n       );\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditNote)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/filteredProgress-reducer/filteredProgressAction.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/progress/ProgressBar.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/RoleLocationAdd.js",["449","450"],"import React, {Component} from 'react';\nimport ChipAutocomplete from './../../components/chip/ChipAutocomplete'\nimport './Modalbox.css';\nimport './Modalbox.scss';\nimport Modal from 'react-bootstrap/Modal';\n\nimport {connect} from 'react-redux'\nimport { setSelectedCategories } from './../../redux/addApp-reducer/addAppAction';\nimport { setCategories } from './../../redux/categories-reducer/categoriesAction';\n\n\n//Make independent server call here. Need to save these properties globally\n\nexport class RoleLocationAdd extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            userInput : '',\n            show : false,\n        };\n    }\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n        \n        const category =  this.props.categories;\n        for(var i=0;i<category.length;i++){\n                category[i].accordion = false;\n        }\n        this.props.setCategories(category)\n    };\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    };\n    handleClose = () => {\n        this.setState({show: false});\n    }\n    handleShow = () => {\n        this.setState({show: true});\n    }\n    onChange = (e) =>{\n        this.setState({\n            userInput: e.currentTarget.value\n        })\n    }\n    onClick = () => {\n        this.handleSave(this.state.userInput)\n        this.setState({\n            show:false\n        })\n    }\n\n    handleSave = (input) =>{\n        const index = this.props.categories.length\n        const {categories} = {...this.props}\n        const category = categories\n        for(var i=0;i<category.length;i++){\n            category[i].accordion = false;\n            this.props.setCategories(category)\n        }\n        const newCategory = this.props.categories.concat({\n            index: index,\n            name: input,\n            suggestions : [],\n            accordion : true,\n        })\n        const newSelectCategory = this.props.selectedCategories.concat({\n            Type: input,\n            SuggestionsOrSeleceted : []\n        })\n        this.props.setSelectedCategories(newSelectCategory)\n        this.props.setCategories(newCategory)\n        this.setState({})\n    }\n\n    \n    handleAccordion = (index) => {\n        const category =  this.props.categories;\n        if(category[index].accordion == false){\n            category[index].accordion = true;\n        }\n        for(var i=0;i<category.length;i++){\n            if(index != category[i].index){\n                category[i].accordion = false;\n    \n            }\n            this.props.setCategories(category)\n        }\n        this.setState({})\n    }\n\n\n    render(){\n        return(\n            <div>\n                <div className =\"sypp-category-container\">\n                    <div className=\"sypp-modal-text\">Let's categorize this applicaiton!</div>\n                    <div className=\"sypp-modal-text\">Feel free to leave categories empty if desired!</div>\n                    <div className = \"sypp-scroll\" style={{overflowY: 'scroll', height: '160px'}}>\n                    {   \n                        this.props.categories.map((data) => (\n                        <div>\n                            <ChipAutocomplete\n                            className =\"sypp-modal-input sypp-position\"\n                            name = {data.name}\n                            key = {data.index}\n                            index = {data.index}\n                            accordion = {data.accordion}\n                            handleAccordion = {this.handleAccordion}\n                        />\n                        </div>\n                        ))\n                    }\n                    <button className =\"sypp-create-category\" onClick = {this.handleShow}>\n                        + New Category\n                    </button>\n                    </div>\n                </div>\n                <Modal \n                    show={this.state.show}\n                    onHide={this.handleClose}\n                    centered\n                    dialogClassName = \"sypp-Modal-Category\"\n                >\n                    <div className =\"sypp-submodal-container\">\n                        <div className=\"sypp-modal-text\">What's your new category?</div>\n                        <input \n                        className =\"sypp-modal-input sypp-newCategory\"\n                        placeholder = \"Category Name\"\n                        value={this.state.userInput}\n                        onChange = {this.onChange}\n                        />\n                        <div className=\"sypp-next-button-container\">\n                            <button className =\"sypp-button-next\" \n                            onClick = {this.onClick}\n                            disabled = {this.state.userInput.length<1}>\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className = \"sypp-next-button-container\">\n                <button className = \"sypp-button-prev\" onClick = {this.back}>\n                    Prev\n                </button>\n                <button className =\"sypp-button-next\" onClick = {this.continue}>\n                    Next\n                </button>\n                </div>\n                \n        </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return{\n        categories: state.categories.categories,\n        selectedCategories: state.addApp.Categories\n    }\n}\nconst mapDispatchToProps= dispatch =>{\n    return {\n      setCategories: (category) => dispatch(setCategories(category)),   \n      setSelectedCategories: (category) => dispatch(setSelectedCategories(category))\n    }\n  }\n  \nexport default connect(mapStatetoProps,mapDispatchToProps)(RoleLocationAdd)","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/CompanyPositionAdd.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/Applied.js",["451","452"],"import React, {Component} from 'react';\nimport './Modalbox.css';\nimport './Modalbox.scss';\nimport MuiButton from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core';\nimport RadioButtons from './../../components/radio/RadioButtons'\n\nimport {connect} from 'react-redux'\nimport {setDates} from './../../redux/addApp-reducer/addAppAction'\n\n\n//{key : 1, date: new Date('2020-01-16'), showDate: true, completed: true},\n\n\nexport class Applied extends Component{\n    state = {\n        option: '1'\n        }\n\n    onChange = (value) => {\n        var boolean = true;\n        if (value === 1) {\n            boolean = true;\n        }\n        else{\n            boolean = false;\n        }\n        const newDates = this.props.dates\n        newDates[0].completed = boolean\n        this.props.setDates(newDates)\n    }\n    \n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    };\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    };\n\n    render(){\n        const radioValue =    \n            [ \n            { name: 'Yes', value: '1' },\n            { name: 'No', value: '2' },\n            ]\n        return(\n            <div>\n                <div className =\"sypp-applied-container\">\n                    <div className=\"sypp-modal-text sypp-modal-newapp-applied\">Have you applied yet?</div>\n                    <div className = \"sypp-radio-container\">\n                    <RadioButtons options = {radioValue} onChange = {this.onChange} isDisabled = {false}/>\n                    </div>\n                </div>\n            <br/>\n            <div className =\"sypp-next-button-container\">\n                <button className = \"sypp-button-prev\" onClick = {this.back}>\n                    Prev\n                </button>\n                <button className =\"sypp-button-next\" onClick = {this.continue}>\n                    Next\n                </button>\n            </div>\n        </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return{\n        dates: state.addApp.dates,\n    }\n  }\n  const mapDispatchToProps= dispatch =>{\n    return {\n      setDates: (date) => dispatch(setDates(date)),   \n    }\n  }\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(Applied)\n//Add x button bootstrap or material-ui x ","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_add_application/InterviewDate.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/page/Page.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/newTask/NewTask.js",["453","454"],"import React, {Component} from 'react';\nimport NextStep from './NextStep';\nimport NewDate from './NewDate';\nimport Page from './../../../components/page/Page'\nimport './NewTask.css'\nimport './NewTask.scss'\n\n\n\nexport class NewTask extends Component {\n    state = {\n        step: 1,\n        title: \"Interview\",\n        date: new Date(),\n        showDate: true\n    }\n\n    nextStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step + 1\n        });\n    }\n\n    prevStep = () =>{\n        const {step}  = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n    calendarChange = date => {\n        this.setState({\n            date: date\n        });\n    }\n\n    onChangeOptions = (value) => {\n        if(value === '1'){\n            this.setState({\n                title: \"Interview\"\n            })\n        }\n        else if(value === '2'){\n            this.setState({\n                title: \"Challenge\"\n            })\n        }\n        else if(value === '3'){\n            this.setState({\n                title:\"Test\"\n            })\n        }\n        else{\n            this.setState({\n                title: value\n            })\n        }\n    }\n\n    onChangeOption = (value) => {\n        var boolean = true;\n        if (value == 1) {\n            boolean = true;\n        }\n        else{\n            boolean = false;\n        }\n        return boolean;\n    }\n    onInterviewOptionChange = (value) => {\n        this.setState({\n            showDate: this.onChangeOption(value)\n        })\n    }\n    onClick = e => {\n        e.preventDefault();\n        this.props.onClickSave(this.state.title, this.state.date, this.state.showDate)\n    }\n\n    render(){\n        const{step} = this.state;\n        \n        switch(step){\n            case 1:\n                return(\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2]}/>\n                        <NextStep \n                            nextStep = {this.nextStep}\n                            onChangeOption = {this.onChangeOptions}\n                        />\n                    </div>\n                );\n            case 2:\n                return (\n                    <div>\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2]}/>\n                        <NewDate\n                        onSaveButton = {this.onSaveButton}\n                        calendarChange = {this.calendarChange}\n                        date = {this.state.date}\n                        onInterviewOptionChange = {this.onInterviewOptionChange}\n                        title = {this.state.title}\n                        />\n                        <div className=\"sypp-next-button-container\">\n                            <button className = \"sypp-button-next\" \n                            onClick={this.onClick} >\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                )\n        }\n    }\n}\nexport default NewTask","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_event/EventSelectDate.js",["455","456","457","458"],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_event/EventDetail.js",["459","460","461","462"],"import React, {Component} from 'react';\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport Moment from 'moment';\n\n\nclass EventDetail extends Component {\n    constructor(props) {\n        super(props);\n          this.state = {\n          editorState: ''\n        };\n    }\n    componentDidMount(){\n        if(this.props.Event !== ''){\n          const contentBlocksArray = []\n          for (var i=0;i<this.props.Event.contents.length;i++){\n              if(this.props.Event.contents.length !== 0){\n                  contentBlocksArray.push(\n                      new ContentBlock({\n                          key: this.props.Event.contents[i].noteContentsID,\n                          type: 'unordered-list-item',\n                          depth: 0,\n                          text: this.props.Event.contents[i].header\n                        })\n                  )\n                  for(var j=0;j<this.props.Event.contents[i].contents_Text.length;j++){\n                      contentBlocksArray.push(\n                          new ContentBlock({\n                              key: genKey(),\n                              type: 'unordered-list-item',\n                              depth: 1,\n                              text: this.props.Event.contents[i].contents_Text[j]\n                            })\n                      )\n                  }\n              }\n          }\n          this.setState({\n            editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\n          });\n        }\n    }\n    onSave = () =>{\n      this.props.handleEditorState(this.state.editorState);\n      this.props.onSaveButton(this.state.editorState);\n      console.log(this.state.editorState)\n    }\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\n      \n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\n      \n    myKeyBindingFn = (e) => {\n        switch (e.keyCode) {\n          case 9: // TAB\n            if(this.currentBlockIndex() == 0){\n              return undefined\n            }\n            else {\n            const newEditorState = RichUtils.onTab(\n              e,\n              this.state.editorState,\n              1 /* maxDepth */,\n            );\n            if (newEditorState !== this.state.editorState) {\n              this.setState({\n                editorState: newEditorState\n              })\n              return null;\n            }\n          }\n          default: \n            return getDefaultKeyBinding(e);      \n      }\n    }\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\n    _handleChange = (editorState) => {\n      console.log(this.state.editorState)\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\n        this.setState({editorState: newEditorState})\n      }\n      else{\n        this.setState({editorState});\n      }\n    }\n    render(){\n        return(\n            <div >\n                <div className = \"sypp-event-detail-container\">\n                <input\n                className = \"sypp-event-name\"\n                placeholder=\"Event Name Here\"\n                onChange={e => this.props.onChangeName(e)}\n                value={this.props.eventName}\n                />\n                <div className =\"sypp-event-seperateLine\"></div>\n                <div className = \"sypp-event-title\">Date and Time</div>\n                {this.props.eventDate === ''?                 \n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\n                    Select Date and Time\n                </button>:\n                <div className = \"sypp-event-datepick-resultDate-container\">\n                <div className = \"sypp-event-datepick-resultDate\">{Moment(this.props.eventDate).format('MMM DD, YYYY • h:mma')}</div>\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\n                Edit Date and Time\n                </button>\n                </div>\n                }\n                <div className = \"sypp-event-title\">Location</div>                \n                <input\n                className = \"sypp-event-location\"\n                placeholder=\"Location Here\"\n                onChange={e => this.props.onChangeLocation(e)}\n                value={this.props.eventLocation}\n                />  \n                <div className =\"sypp-event-seperateLine\"></div>\n\n                <div className = \"sypp-event-title\">Note</div>    \n                <div style={{overflowY: 'scroll', height: '165px'}}>            \n                <Editor \n                  placeholder = \"      Text Here\"\n                  toolbarHidden\n                  editorClassName=\"sypp-editor-class\"\n                  editorState={this.state.editorState}\n                  onEditorStateChange={this._handleChange}\n                  keyBindingFn={this.myKeyBindingFn}\n                />\n                </div>\n                </div>\n                <div className = \"sypp-event-bottom-options-container\">\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSave}>Save</button>\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\n                </div>\n            </div>\n        );\n    }\n}\nexport default EventDetail","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_conversation/ConversationDate.js",["463","464","465","466"],"import React, {Component} from 'react';\nimport Calendar from 'react-calendar';\nimport CalendarComponent from './../../calendar/CalendarComponent';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport { faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport './CreateEditConversation.scss'\nimport { min } from 'moment';\n\nclass ConversationDate extends Component {\n\n    onClickRemoveSelection = () => {\n        this.setState({})\n        this.props.onChangeDate(new Date())\n    }\n\n    render(){\n        return(\n            <div>\n                <div className = \"sypp-event-date-title\">Date</div>\n                <div className = \"sypp-event-calendar\">\n                <CalendarComponent calendarChange = {this.props.onChangeDate}/> \n                </div>\n                <div className = \"sypp-event-bottom-options-container\">\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page2\" onClick = {this.onClickRemoveSelection}>\n                        Remove Date\n                    </button>\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page2\" onClick = {this.props.prevStep}>\n                        {\"Select Date\"}\n                    </button>\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page2\" onClick = {this.props.handleClose}>\n                        Close\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ConversationDate","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/create_edit_components/create_edit_conversation/ConversationDetail.js",["467","468","469","470"],"import React, {Component} from 'react';\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport Moment from 'moment';\n\n\nclass ConversationDetail extends Component {\n    constructor(props) {\n        super(props);\n          this.state = {\n          editorState: ''\n        };\n    }\n    componentDidMount(){\n        if(this.props.FollowUp !== ''){\n          const contentBlocksArray = []\n            for (var i=0;i<this.props.FollowUp.description.length;i++){\n                if(this.props.FollowUp.description.length !== 0){\n                    contentBlocksArray.push(\n                        new ContentBlock({\n                            key: this.props.FollowUp.description[i].noteContentsID,\n                            type: 'unordered-list-item',\n                            depth: 0,\n                            text: this.props.FollowUp.description[i].header\n                        })\n                    )\n                    for(var j=0;j<this.props.FollowUp.description[i].contents_Text.length;j++){\n                        contentBlocksArray.push(\n                            new ContentBlock({\n                                key: genKey(),\n                                type: 'unordered-list-item',\n                                depth: 1,\n                                text: this.props.FollowUp.description[i].contents_Text[j]\n                            })\n                        )\n                    }\n                }\n            }\n\n            this.setState({\n                editorState : EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray))\n            })\n        }\n    }\n\n    onSave = () =>{\n      this.props.onSaveButton(this.state.editorState);\n    }\n\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\n      \n    myKeyBindingFn = (e) => {\n        switch (e.keyCode) {\n          case 9: // TAB\n            if(this.currentBlockIndex() == 0){\n              return undefined\n            }\n            else {\n            const newEditorState = RichUtils.onTab(\n              e,\n              this.state.editorState,\n              1 /* maxDepth */,\n            );\n            if (newEditorState !== this.state.editorState) {\n              this.setState({\n                editorState: newEditorState\n              })\n              return null;\n            }\n          }\n          default: \n            return getDefaultKeyBinding(e);      \n      }\n    }\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\n    \n    _handleChange = (editorState) => {\n      console.log(this.state.editorState)\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\n        this.setState({editorState: newEditorState})\n      }\n      else{\n        this.setState({editorState});\n      }\n      this.props.handleEditorState(this.state.editorState);\n    }\n\n    render(){\n        return(\n            <div >\n                <div className = \"sypp-event-detail-container\">\n                <input\n                className = \"sypp-event-name\"\n                placeholder=\"Contact Name Here\"\n                onChange={e => this.props.onChangeName(e)}\n                value={this.props.name}\n                />\n                <input\n                className = \"sypp-contact-name-subTitle\"\n                placeholder=\"Contact Position Here\"\n                onChange={e => this.props.onChangePosition(e)}\n                value={this.props.position}\n                />\n                <div className =\"sypp-event-seperateLine\"></div>\n                <div className = \"sypp-event-title\">Conversation Date</div>\n                {this.props.time === ''?                 \n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\n                    Select Date\n                </button>:\n                <div className = \"sypp-event-datepick-resultDate-container\">\n                <div className = \"sypp-event-datepick-resultDate\">{Moment(this.props.time).format('MMM DD, YYYY • h:mma')}</div>\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\n                Edit Date\n                </button>\n                </div>\n                }\n                <div className =\"sypp-event-seperateLine\"></div>\n\n                <div className = \"sypp-event-title\">Note</div>  \n                <div style={{overflowY: 'scroll', height: '200px'}}>\n                  <Editor \n                  placeholder = \"      Text Here\"\n                  toolbarHidden\n                  editorClassName=\"sypp-editor-class\"\n                  editorState={this.state.editorState}\n                  onEditorStateChange={this._handleChange}\n                  keyBindingFn={this.myKeyBindingFn}\n                  />\n                </div>\n                </div>\n                <div className = \"sypp-event-bottom-options-container\">\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSave}>Save</button>\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ConversationDetail","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/progress/Progress.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/redux/categories-reducer/categoriesAction.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/calendar/CalendarComponent.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/radio/RadioButtons.js",["471","472","473","474","475"],"import React, { Component, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport './RadioButtons.css';\n\n\n\nfunction RadioButtons(props) {\n    const [checked, setChecked] = useState(false);\n    const [radioValue, setRadioValue] = useState('1');\n    const radios = props.options;\n\n    const radioChange = (e) => {\n      e.preventDefault();\n      props.onChange(e.currentTarget.value);\n      setRadioValue(e.currentTarget.value)\n    }\n\n    return (\n        <ButtonGroup toggle className = {props.classContainerProps}>\n          {radios.map((radio, idx) => (\n              <div className=\"sypp-button-container sypp-button-towButtons-container\">\n                {props.isDisabled?\n                <ToggleButton\n                className={\"sypp-colorChange sypp-activeChange sypp-hoverChange sypp-text1 sypp-twoButtons \" + props.buttonContainerProps}\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name=\"radio\"\n                value={radio.value}\n                checked={radioValue === radio.value}\n                onChange={(e) => radioChange(e, radioValue)}\n                disabled\n                >\n                {radio.name}\n                </ToggleButton>:\n                <ToggleButton\n                className={\"sypp-colorChange sypp-activeChange sypp-hoverChange sypp-text1 sypp-twoButtons \" + props.buttonContainerProps}\n                key={idx}\n                type=\"radio\"\n                variant=\"secondary\"\n                name=\"radio\"\n                value={radio.value}\n                checked={radioValue === radio.value}\n                onChange={(e) => radioChange(e, radioValue)}\n                >\n                {radio.name}\n                </ToggleButton>\n                }\n            </div>\n          ))}\n        </ButtonGroup>\n    );\n  }\n  export default RadioButtons;\n\n","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/components/chip/ChipAutocomplete.js",["476","477","478","479","480","481","482","483","484","485"],"import React, { Component, useState } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport './ChipAutocomplete.css';\nimport './ChipAutocomplete.scss';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiButtonBase from '@material-ui/core/ButtonBase';\nimport MuiChipInput from 'material-ui-chip-input'\n\nimport {connect} from 'react-redux'\nimport { setCategories } from '../../redux/categories-reducer/categoriesAction';\nimport { setSelectedCategories } from '../../redux/addApp-reducer/addAppAction';\n\n\n\nconst ButtonBase = withStyles({\n  root: {\n    padding: '0px',\n    margin: '0px'\n  },\n})(MuiButtonBase);\n\nconst ChipInput = withStyles({\n  inputRoot: {\n    flexWrap: 'wrap',\n    fontSize :'5',\n    maxWidth: 150,\n    color: \"white\",\n    '&$outlined,&$filled': {\n      boxSizing: 'border-box'\n    },\n  },\n  chipContainer: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    cursor: 'text',\n    width: '100%' ,\n    marginBottom: -2,\n    minHeight: 30,\n    '&$labeled&$standard': {\n      marginTop: 5\n    }\n  },\n  chip:{\n    background : \"#5E6A7E\",\n    marginTop: '5px',\n    marginBottom:'3px',\n    fontSize : '10px',\n    height : '20px',\n    color :\"#C2DBFF\",\n  },\n})(MuiChipInput);\n\nconst Accordion = withStyles({\n  root: {\n    minHeight: '0',\n    margin: 0,\n    padding: 0,\n    border: '0px solid rgba(0, 0, 0, 0)',\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n    '&$expanded': {\n      margin: '0px 0',\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n  root: {\n    display: 'block',\n    margin: '0px 0',\n    backgroundColor: 'transparent',\n    '&$expanded': {\n      margin: '0px 0',\n      minHeight: 0,\n    },\n  },\n  content: {\n    '&$expanded': {\n      backgroundColor: 'rgba(0, 0, 0, 0)',\n      margin: '5px 0px'\n    },\n  },\n  expanded: {},\n  focused: {    \n    '&$focused': {\n    backgroundColor: 'transparent',\n    },\n  },\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n  root: {\n    padding: 0,\n    marginTop: 1\n  },\n}))(MuiAccordionDetails);\n\nexport class ChipAutocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: '',\n      disabled: false\n    };\n  }\n  \n  onClick = (e) => {\n    const newSelectedCategory = this.props.selectedCategories\n    for (var i =0;i<newSelectedCategory.length;i++){\n      if(newSelectedCategory[i].Type === this.props.name){\n        newSelectedCategory[i].SuggestionsOrSeleceted = newSelectedCategory[i].SuggestionsOrSeleceted.concat(e.currentTarget.innerText)\n      }\n    }\n    // newSelectedCategory[this.props.index].selectedCategory = newSelectedCategory[this.props.index].selectedCategory.concat(e.currentTarget.innerText)\n    this.props.setSelectedCategories(newSelectedCategory)\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: '',\n      disabled: true\n    });\n    console.log(this.state.disabled)\n  };\n\n  newSuggestion = e => {\n    this.handleSuggestion(this.props.index, this.state.userInput);\n    const newSelectedCategory = this.props.selectedCategories\n    for (var i =0;i<newSelectedCategory.length;i++){\n      if(newSelectedCategory[i].Type === this.props.name){\n        newSelectedCategory[i].SuggestionsOrSeleceted = newSelectedCategory[i].SuggestionsOrSeleceted.concat(this.state.userInput)\n      }\n    }\n     \n    // newSelectedCategory[this.props.index].selectedCategory = newSelectedCategory[this.props.index].selectedCategory.concat(this.state.userInput)\n    this.props.setSelectedCategories(newSelectedCategory)\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: '',\n      disabled: true\n    });  }\n\n\n\n  onChange = (e) => {\n    const { suggestions } = this.props.categories[this.props.index];\n    const userInput = e.currentTarget.value;\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n      if(this.state.disabled){\n        this.setState({\n          activeSuggestion: 0,\n          filteredSuggestions,\n          showSuggestions: false,\n          userInput: '',\n        });\n      }\n      else{\n        this.setState({\n          activeSuggestion: 0,\n          filteredSuggestions,\n          showSuggestions: true,\n          userInput: e.currentTarget.value,\n        });\n    }\n  };\n\n  handleDeleteTags = (tag) => {\n   \n    const delectedCategory = this.props.selectedCategories[this.props.index].SuggestionsOrSeleceted.filter(state => state !== tag)\n    const newSelectedCategory = this.props.selectedCategories\n    newSelectedCategory[this.props.index].SuggestionsOrSeleceted = this.props.selectedCategories[this.props.index].SuggestionsOrSeleceted.filter(state => state !== tag)\n    this.props.setSelectedCategories(newSelectedCategory)\n    console.log(newSelectedCategory)\n    this.setState({\n      disabled: false\n    })\n  };\n\n  handleSuggestion = (index, newSuggestion) => {\n    var boolTest = true\n    this.props.categories[index].suggestions.map((suggestion) => {\n        if(newSuggestion == suggestion){\n            boolTest = false;\n        }\n    })\n    if(boolTest){\n        const {categories} = {...this.props}\n        const category = categories;\n        category[index].suggestions = this.props.categories[index].suggestions.concat(newSuggestion)\n        this.props.setCategories(category)\n    }\n  }\n\n  onClickAccordion = (e) => {\n    this.props.handleAccordion(this.props.index)\n  }\n\n  static defaultProperty={\n    suggestions: []\n  };\n  disableEvents = true;\n\n  /* Dynamically compute style for wrapper components \n      to control mouse interactivity */\n  wrapperStyle = e => { \n  };\n\n  render(){\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n        chip\n      }\n    } = this;\n    let suggestionsListComponent;\n      if (showSuggestions && userInput) {\n        if (filteredSuggestions.length) {\n          suggestionsListComponent = (\n            <ul className = \"sypp-ul\">\n              {filteredSuggestions.map((suggestion, index) => {\n                return (\n                  <div class =\"sypp-suggestion sypp-chipbutton\">\n                  <button  key={suggestion} onClick={onClick}>\n                    {suggestion}\n                  </button>\n                  <div>X</div>\n                  </div>\n                );\n              })}\n            </ul>\n          );\n        } \n      }\n\n    return (\n      <div>\n        <Accordion expanded = {this.props.accordion} \n        TransitionProps={{\n          timeout: 600\n        }}>\n          <AccordionSummary>\n            <div className = \"sypp-accoridon-container\">\n                <div className = 'sypp-label-container'>\n                  <div className=\"sypp-label-text\">{this.props.name}</div>\n                </div>\n                <div className =\"sypp-border\" onClick = {this.onClickAccordion}>\n                    <ChipInput\n                    value={this.props.selectedCategories[this.props.selectedCategories.map(\n                      function(e){\n                        return e.Type\n                    }).indexOf(this.props.name)].SuggestionsOrSeleceted}\n                    placeholder=\"Assign Tag\"\n                    onDelete={(tag) => this.handleDeleteTags(tag)}\n                    onUpdateInput={this.onChange}\n                    disableUnderline = {true}\n                    fullWidthInput = {false}\n                    fullWidth = {false}\n                    inputValue = {this.state.disabled?'':this.state.userInput}\n                    />\n                </div>\n            </div>\n            </AccordionSummary>\n            <AccordionDetails>\n                <div className = \"sypp-container-suggestion\">\n                <button className = \"sypp-suggestion\" \n                  onClick={this.newSuggestion}\n                  disabled = {this.state.userInput.length<1}\n                >Create</button>\n                {suggestionsListComponent}\n                </div>\n            </AccordionDetails>\n        </Accordion>\n      </div>\n    );\n  };\n}\n\n\nconst mapStatetoProps = state => {\n  return{\n      categories: state.categories.categories,\n      selectedCategories: state.addApp.Categories\n  }\n}\nconst mapDispatchToProps= dispatch =>{\n  return {\n    setCategories: (category) => dispatch(setCategories(category)),   \n    setSelectedCategories: (category) => dispatch(setSelectedCategories(category))\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(ChipAutocomplete);\n\n","/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/newTask/NextStep.js",[],"/Users/JayChoi/Desktop/SYPP-Desktop/SYPP_Web_personal/src/sypp_applications/application_list/newTask/NewDate.js",[],{"ruleId":"486","replacedBy":"487"},{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","severity":1,"message":"491","line":27,"column":11,"nodeType":"492","messageId":"493","endLine":27,"endColumn":15},{"ruleId":"490","severity":1,"message":"494","line":28,"column":11,"nodeType":"492","messageId":"493","endLine":28,"endColumn":20},{"ruleId":"490","severity":1,"message":"495","line":1,"column":8,"nodeType":"492","messageId":"493","endLine":1,"endColumn":19},{"ruleId":"490","severity":1,"message":"496","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"497","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":25},{"ruleId":"490","severity":1,"message":"498","line":1,"column":8,"nodeType":"492","messageId":"493","endLine":1,"endColumn":19},{"ruleId":"490","severity":1,"message":"499","line":1,"column":8,"nodeType":"492","messageId":"493","endLine":1,"endColumn":23},{"ruleId":"490","severity":1,"message":"500","line":6,"column":9,"nodeType":"492","messageId":"493","endLine":6,"endColumn":16},{"ruleId":"490","severity":1,"message":"501","line":7,"column":9,"nodeType":"492","messageId":"493","endLine":7,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":59,"column":18,"nodeType":"492","messageId":"504","endLine":59,"endColumn":19},{"ruleId":"490","severity":1,"message":"505","line":12,"column":10,"nodeType":"492","messageId":"493","endLine":12,"endColumn":20},{"ruleId":"490","severity":1,"message":"506","line":13,"column":10,"nodeType":"492","messageId":"493","endLine":13,"endColumn":25},{"ruleId":"507","severity":1,"message":"508","line":42,"column":40,"nodeType":"509","messageId":"510","endLine":42,"endColumn":42},{"ruleId":"507","severity":1,"message":"508","line":45,"column":48,"nodeType":"509","messageId":"510","endLine":45,"endColumn":50},{"ruleId":"507","severity":1,"message":"508","line":45,"column":79,"nodeType":"509","messageId":"510","endLine":45,"endColumn":81},{"ruleId":"507","severity":1,"message":"508","line":63,"column":48,"nodeType":"509","messageId":"510","endLine":63,"endColumn":50},{"ruleId":"507","severity":1,"message":"508","line":67,"column":56,"nodeType":"509","messageId":"510","endLine":67,"endColumn":58},{"ruleId":"507","severity":1,"message":"508","line":67,"column":87,"nodeType":"509","messageId":"510","endLine":67,"endColumn":89},{"ruleId":"511","severity":1,"message":"512","line":78,"column":44,"nodeType":"513","messageId":"514","endLine":78,"endColumn":97},{"ruleId":"490","severity":1,"message":"515","line":5,"column":8,"nodeType":"492","messageId":"493","endLine":5,"endColumn":33},{"ruleId":"507","severity":1,"message":"508","line":34,"column":19,"nodeType":"509","messageId":"510","endLine":34,"endColumn":21},{"ruleId":"490","severity":1,"message":"516","line":38,"column":13,"nodeType":"492","messageId":"493","endLine":38,"endColumn":20},{"ruleId":"502","severity":1,"message":"503","line":57,"column":21,"nodeType":"492","messageId":"504","endLine":57,"endColumn":22},{"ruleId":"517","severity":1,"message":"518","line":141,"column":13,"nodeType":"519","messageId":"520","endLine":254,"endColumn":14},{"ruleId":"517","severity":1,"message":"518","line":142,"column":13,"nodeType":"519","messageId":"520","endLine":256,"endColumn":14},{"ruleId":"490","severity":1,"message":"521","line":3,"column":8,"nodeType":"492","messageId":"493","endLine":3,"endColumn":11},{"ruleId":"490","severity":1,"message":"522","line":4,"column":8,"nodeType":"492","messageId":"493","endLine":4,"endColumn":15},{"ruleId":"490","severity":1,"message":"523","line":12,"column":8,"nodeType":"492","messageId":"493","endLine":12,"endColumn":20},{"ruleId":"490","severity":1,"message":"524","line":27,"column":10,"nodeType":"492","messageId":"493","endLine":27,"endColumn":26},{"ruleId":"525","severity":1,"message":"526","line":86,"column":25,"nodeType":"513","messageId":"527","endLine":86,"endColumn":27},{"ruleId":"490","severity":1,"message":"528","line":171,"column":17,"nodeType":"492","messageId":"493","endLine":171,"endColumn":21},{"ruleId":"502","severity":1,"message":"503","line":191,"column":25,"nodeType":"492","messageId":"504","endLine":191,"endColumn":26},{"ruleId":"502","severity":1,"message":"503","line":199,"column":21,"nodeType":"492","messageId":"504","endLine":199,"endColumn":22},{"ruleId":"502","severity":1,"message":"503","line":219,"column":25,"nodeType":"492","messageId":"504","endLine":219,"endColumn":26},{"ruleId":"502","severity":1,"message":"529","line":220,"column":29,"nodeType":"492","messageId":"504","endLine":220,"endColumn":30},{"ruleId":"490","severity":1,"message":"496","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"530","line":39,"column":12,"nodeType":"492","messageId":"493","endLine":39,"endColumn":23},{"ruleId":"502","severity":1,"message":"503","line":65,"column":25,"nodeType":"492","messageId":"504","endLine":65,"endColumn":26},{"ruleId":"490","severity":1,"message":"531","line":37,"column":15,"nodeType":"492","messageId":"493","endLine":37,"endColumn":18},{"ruleId":"490","severity":1,"message":"532","line":39,"column":15,"nodeType":"492","messageId":"493","endLine":39,"endColumn":19},{"ruleId":"517","severity":1,"message":"518","line":70,"column":9,"nodeType":"519","messageId":"520","endLine":112,"endColumn":10},{"ruleId":"490","severity":1,"message":"533","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":16},{"ruleId":"490","severity":1,"message":"534","line":3,"column":70,"nodeType":"492","messageId":"493","endLine":3,"endColumn":84},{"ruleId":"490","severity":1,"message":"535","line":3,"column":86,"nodeType":"492","messageId":"493","endLine":3,"endColumn":99},{"ruleId":"490","severity":1,"message":"536","line":4,"column":10,"nodeType":"492","messageId":"493","endLine":4,"endColumn":16},{"ruleId":"490","severity":1,"message":"537","line":9,"column":10,"nodeType":"492","messageId":"493","endLine":9,"endColumn":19},{"ruleId":"490","severity":1,"message":"506","line":10,"column":10,"nodeType":"492","messageId":"493","endLine":10,"endColumn":25},{"ruleId":"490","severity":1,"message":"538","line":18,"column":47,"nodeType":"492","messageId":"493","endLine":18,"endColumn":59},{"ruleId":"490","severity":1,"message":"539","line":18,"column":61,"nodeType":"492","messageId":"493","endLine":18,"endColumn":78},{"ruleId":"490","severity":1,"message":"540","line":18,"column":80,"nodeType":"492","messageId":"493","endLine":18,"endColumn":91},{"ruleId":"490","severity":1,"message":"541","line":18,"column":93,"nodeType":"492","messageId":"493","endLine":18,"endColumn":104},{"ruleId":"490","severity":1,"message":"542","line":18,"column":106,"nodeType":"492","messageId":"493","endLine":18,"endColumn":118},{"ruleId":"490","severity":1,"message":"543","line":29,"column":8,"nodeType":"492","messageId":"493","endLine":29,"endColumn":26},{"ruleId":"507","severity":1,"message":"508","line":70,"column":41,"nodeType":"509","messageId":"510","endLine":70,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":86,"column":11,"nodeType":"546","messageId":"547","endLine":87,"endColumn":44},{"ruleId":"507","severity":1,"message":"548","line":135,"column":45,"nodeType":"509","messageId":"510","endLine":135,"endColumn":47},{"ruleId":"490","severity":1,"message":"533","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":16},{"ruleId":"490","severity":1,"message":"549","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":27},{"ruleId":"490","severity":1,"message":"550","line":3,"column":29,"nodeType":"492","messageId":"493","endLine":3,"endColumn":38},{"ruleId":"490","severity":1,"message":"551","line":3,"column":40,"nodeType":"492","messageId":"493","endLine":3,"endColumn":52},{"ruleId":"490","severity":1,"message":"552","line":3,"column":62,"nodeType":"492","messageId":"493","endLine":3,"endColumn":74},{"ruleId":"490","severity":1,"message":"553","line":3,"column":76,"nodeType":"492","messageId":"493","endLine":3,"endColumn":87},{"ruleId":"490","severity":1,"message":"534","line":3,"column":89,"nodeType":"492","messageId":"493","endLine":3,"endColumn":103},{"ruleId":"490","severity":1,"message":"535","line":3,"column":105,"nodeType":"492","messageId":"493","endLine":3,"endColumn":118},{"ruleId":"490","severity":1,"message":"536","line":4,"column":10,"nodeType":"492","messageId":"493","endLine":4,"endColumn":16},{"ruleId":"490","severity":1,"message":"537","line":12,"column":10,"nodeType":"492","messageId":"493","endLine":12,"endColumn":19},{"ruleId":"490","severity":1,"message":"554","line":21,"column":9,"nodeType":"492","messageId":"493","endLine":21,"endColumn":29},{"ruleId":"490","severity":1,"message":"538","line":21,"column":47,"nodeType":"492","messageId":"493","endLine":21,"endColumn":59},{"ruleId":"490","severity":1,"message":"539","line":21,"column":61,"nodeType":"492","messageId":"493","endLine":21,"endColumn":78},{"ruleId":"490","severity":1,"message":"540","line":21,"column":80,"nodeType":"492","messageId":"493","endLine":21,"endColumn":91},{"ruleId":"490","severity":1,"message":"541","line":21,"column":93,"nodeType":"492","messageId":"493","endLine":21,"endColumn":104},{"ruleId":"490","severity":1,"message":"542","line":21,"column":106,"nodeType":"492","messageId":"493","endLine":21,"endColumn":118},{"ruleId":"490","severity":1,"message":"543","line":28,"column":10,"nodeType":"492","messageId":"493","endLine":28,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":88,"column":17,"nodeType":"492","messageId":"504","endLine":88,"endColumn":18},{"ruleId":"502","severity":1,"message":"529","line":90,"column":21,"nodeType":"492","messageId":"504","endLine":90,"endColumn":22},{"ruleId":"502","severity":1,"message":"555","line":92,"column":25,"nodeType":"492","messageId":"504","endLine":92,"endColumn":26},{"ruleId":"490","severity":1,"message":"533","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":16},{"ruleId":"490","severity":1,"message":"549","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":27},{"ruleId":"490","severity":1,"message":"550","line":3,"column":29,"nodeType":"492","messageId":"493","endLine":3,"endColumn":38},{"ruleId":"490","severity":1,"message":"551","line":3,"column":40,"nodeType":"492","messageId":"493","endLine":3,"endColumn":52},{"ruleId":"490","severity":1,"message":"556","line":3,"column":54,"nodeType":"492","messageId":"493","endLine":3,"endColumn":60},{"ruleId":"490","severity":1,"message":"552","line":3,"column":62,"nodeType":"492","messageId":"493","endLine":3,"endColumn":74},{"ruleId":"490","severity":1,"message":"553","line":3,"column":76,"nodeType":"492","messageId":"493","endLine":3,"endColumn":87},{"ruleId":"490","severity":1,"message":"534","line":3,"column":89,"nodeType":"492","messageId":"493","endLine":3,"endColumn":103},{"ruleId":"490","severity":1,"message":"535","line":3,"column":105,"nodeType":"492","messageId":"493","endLine":3,"endColumn":118},{"ruleId":"490","severity":1,"message":"554","line":4,"column":9,"nodeType":"492","messageId":"493","endLine":4,"endColumn":29},{"ruleId":"490","severity":1,"message":"557","line":4,"column":31,"nodeType":"492","messageId":"493","endLine":4,"endColumn":45},{"ruleId":"490","severity":1,"message":"538","line":4,"column":47,"nodeType":"492","messageId":"493","endLine":4,"endColumn":59},{"ruleId":"490","severity":1,"message":"539","line":4,"column":61,"nodeType":"492","messageId":"493","endLine":4,"endColumn":78},{"ruleId":"490","severity":1,"message":"540","line":4,"column":80,"nodeType":"492","messageId":"493","endLine":4,"endColumn":91},{"ruleId":"490","severity":1,"message":"541","line":4,"column":93,"nodeType":"492","messageId":"493","endLine":4,"endColumn":104},{"ruleId":"490","severity":1,"message":"542","line":4,"column":106,"nodeType":"492","messageId":"493","endLine":4,"endColumn":118},{"ruleId":"490","severity":1,"message":"536","line":6,"column":10,"nodeType":"492","messageId":"493","endLine":6,"endColumn":16},{"ruleId":"490","severity":1,"message":"537","line":11,"column":10,"nodeType":"492","messageId":"493","endLine":11,"endColumn":19},{"ruleId":"490","severity":1,"message":"506","line":12,"column":10,"nodeType":"492","messageId":"493","endLine":12,"endColumn":25},{"ruleId":"507","severity":1,"message":"548","line":74,"column":55,"nodeType":"509","messageId":"510","endLine":74,"endColumn":57},{"ruleId":"558","severity":1,"message":"559","line":93,"column":168,"nodeType":"560","endLine":93,"endColumn":200},{"ruleId":"490","severity":1,"message":"561","line":1,"column":27,"nodeType":"492","messageId":"493","endLine":1,"endColumn":35},{"ruleId":"517","severity":1,"message":"518","line":28,"column":9,"nodeType":"519","messageId":"520","endLine":60,"endColumn":10},{"ruleId":"507","severity":1,"message":"548","line":49,"column":55,"nodeType":"509","messageId":"510","endLine":49,"endColumn":57},{"ruleId":"490","severity":1,"message":"533","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":16},{"ruleId":"490","severity":1,"message":"536","line":4,"column":10,"nodeType":"492","messageId":"493","endLine":4,"endColumn":16},{"ruleId":"490","severity":1,"message":"537","line":9,"column":10,"nodeType":"492","messageId":"493","endLine":9,"endColumn":19},{"ruleId":"490","severity":1,"message":"506","line":10,"column":10,"nodeType":"492","messageId":"493","endLine":10,"endColumn":25},{"ruleId":"490","severity":1,"message":"542","line":12,"column":47,"nodeType":"492","messageId":"493","endLine":12,"endColumn":59},{"ruleId":"490","severity":1,"message":"543","line":20,"column":8,"nodeType":"492","messageId":"493","endLine":20,"endColumn":26},{"ruleId":"507","severity":1,"message":"508","line":74,"column":41,"nodeType":"509","messageId":"510","endLine":74,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":90,"column":11,"nodeType":"546","messageId":"547","endLine":91,"endColumn":44},{"ruleId":"507","severity":1,"message":"548","line":131,"column":45,"nodeType":"509","messageId":"510","endLine":131,"endColumn":47},{"ruleId":"490","severity":1,"message":"550","line":5,"column":10,"nodeType":"492","messageId":"493","endLine":5,"endColumn":19},{"ruleId":"490","severity":1,"message":"551","line":5,"column":21,"nodeType":"492","messageId":"493","endLine":5,"endColumn":33},{"ruleId":"490","severity":1,"message":"552","line":5,"column":43,"nodeType":"492","messageId":"493","endLine":5,"endColumn":55},{"ruleId":"490","severity":1,"message":"553","line":5,"column":57,"nodeType":"492","messageId":"493","endLine":5,"endColumn":68},{"ruleId":"490","severity":1,"message":"536","line":6,"column":10,"nodeType":"492","messageId":"493","endLine":6,"endColumn":16},{"ruleId":"490","severity":1,"message":"554","line":7,"column":9,"nodeType":"492","messageId":"493","endLine":7,"endColumn":29},{"ruleId":"490","severity":1,"message":"557","line":7,"column":31,"nodeType":"492","messageId":"493","endLine":7,"endColumn":45},{"ruleId":"490","severity":1,"message":"542","line":7,"column":47,"nodeType":"492","messageId":"493","endLine":7,"endColumn":59},{"ruleId":"502","severity":1,"message":"503","line":96,"column":21,"nodeType":"492","messageId":"504","endLine":96,"endColumn":22},{"ruleId":"502","severity":1,"message":"562","line":119,"column":17,"nodeType":"492","messageId":"504","endLine":119,"endColumn":21},{"ruleId":"502","severity":1,"message":"503","line":120,"column":21,"nodeType":"492","messageId":"504","endLine":120,"endColumn":22},{"ruleId":"517","severity":1,"message":"518","line":251,"column":9,"nodeType":"519","messageId":"520","endLine":285,"endColumn":10},{"ruleId":"490","severity":1,"message":"557","line":5,"column":31,"nodeType":"492","messageId":"493","endLine":5,"endColumn":45},{"ruleId":"490","severity":1,"message":"542","line":5,"column":47,"nodeType":"492","messageId":"493","endLine":5,"endColumn":59},{"ruleId":"490","severity":1,"message":"563","line":8,"column":16,"nodeType":"492","messageId":"493","endLine":8,"endColumn":22},{"ruleId":"502","severity":1,"message":"503","line":122,"column":21,"nodeType":"492","messageId":"504","endLine":122,"endColumn":22},{"ruleId":"502","severity":1,"message":"562","line":151,"column":17,"nodeType":"492","messageId":"504","endLine":151,"endColumn":21},{"ruleId":"502","severity":1,"message":"503","line":152,"column":21,"nodeType":"492","messageId":"504","endLine":152,"endColumn":22},{"ruleId":"507","severity":1,"message":"508","line":210,"column":41,"nodeType":"509","messageId":"510","endLine":210,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":226,"column":11,"nodeType":"546","messageId":"547","endLine":227,"endColumn":44},{"ruleId":"490","severity":1,"message":"550","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":19},{"ruleId":"490","severity":1,"message":"554","line":5,"column":9,"nodeType":"492","messageId":"493","endLine":5,"endColumn":29},{"ruleId":"490","severity":1,"message":"557","line":5,"column":31,"nodeType":"492","messageId":"493","endLine":5,"endColumn":45},{"ruleId":"490","severity":1,"message":"542","line":5,"column":47,"nodeType":"492","messageId":"493","endLine":5,"endColumn":59},{"ruleId":"490","severity":1,"message":"563","line":8,"column":16,"nodeType":"492","messageId":"493","endLine":8,"endColumn":22},{"ruleId":"490","severity":1,"message":"537","line":16,"column":10,"nodeType":"492","messageId":"493","endLine":16,"endColumn":19},{"ruleId":"502","severity":1,"message":"503","line":109,"column":21,"nodeType":"492","messageId":"504","endLine":109,"endColumn":22},{"ruleId":"502","severity":1,"message":"562","line":127,"column":17,"nodeType":"492","messageId":"504","endLine":127,"endColumn":21},{"ruleId":"502","severity":1,"message":"503","line":128,"column":21,"nodeType":"492","messageId":"504","endLine":128,"endColumn":22},{"ruleId":"502","severity":1,"message":"503","line":149,"column":21,"nodeType":"492","messageId":"504","endLine":149,"endColumn":22},{"ruleId":"502","severity":1,"message":"564","line":166,"column":17,"nodeType":"492","messageId":"504","endLine":166,"endColumn":26},{"ruleId":"502","severity":1,"message":"503","line":167,"column":21,"nodeType":"492","messageId":"504","endLine":167,"endColumn":22},{"ruleId":"502","severity":1,"message":"529","line":169,"column":29,"nodeType":"492","messageId":"504","endLine":169,"endColumn":30},{"ruleId":"502","severity":1,"message":"565","line":222,"column":21,"nodeType":"492","messageId":"504","endLine":222,"endColumn":33},{"ruleId":"490","severity":1,"message":"550","line":5,"column":10,"nodeType":"492","messageId":"493","endLine":5,"endColumn":19},{"ruleId":"490","severity":1,"message":"551","line":5,"column":21,"nodeType":"492","messageId":"493","endLine":5,"endColumn":33},{"ruleId":"490","severity":1,"message":"552","line":5,"column":43,"nodeType":"492","messageId":"493","endLine":5,"endColumn":55},{"ruleId":"490","severity":1,"message":"553","line":5,"column":57,"nodeType":"492","messageId":"493","endLine":5,"endColumn":68},{"ruleId":"490","severity":1,"message":"536","line":6,"column":10,"nodeType":"492","messageId":"493","endLine":6,"endColumn":16},{"ruleId":"490","severity":1,"message":"554","line":7,"column":9,"nodeType":"492","messageId":"493","endLine":7,"endColumn":29},{"ruleId":"490","severity":1,"message":"557","line":7,"column":31,"nodeType":"492","messageId":"493","endLine":7,"endColumn":45},{"ruleId":"490","severity":1,"message":"542","line":7,"column":47,"nodeType":"492","messageId":"493","endLine":7,"endColumn":59},{"ruleId":"502","severity":1,"message":"503","line":92,"column":21,"nodeType":"492","messageId":"504","endLine":92,"endColumn":22},{"ruleId":"502","severity":1,"message":"562","line":113,"column":17,"nodeType":"492","messageId":"504","endLine":113,"endColumn":21},{"ruleId":"502","severity":1,"message":"503","line":114,"column":21,"nodeType":"492","messageId":"504","endLine":114,"endColumn":22},{"ruleId":"502","severity":1,"message":"503","line":140,"column":21,"nodeType":"492","messageId":"504","endLine":140,"endColumn":22},{"ruleId":"502","severity":1,"message":"564","line":162,"column":17,"nodeType":"492","messageId":"504","endLine":162,"endColumn":26},{"ruleId":"502","severity":1,"message":"503","line":163,"column":21,"nodeType":"492","messageId":"504","endLine":163,"endColumn":22},{"ruleId":"502","severity":1,"message":"529","line":165,"column":29,"nodeType":"492","messageId":"504","endLine":165,"endColumn":30},{"ruleId":"517","severity":1,"message":"518","line":227,"column":9,"nodeType":"519","messageId":"520","endLine":256,"endColumn":10},{"ruleId":"490","severity":1,"message":"557","line":5,"column":31,"nodeType":"492","messageId":"493","endLine":5,"endColumn":45},{"ruleId":"490","severity":1,"message":"542","line":5,"column":47,"nodeType":"492","messageId":"493","endLine":5,"endColumn":59},{"ruleId":"490","severity":1,"message":"563","line":8,"column":16,"nodeType":"492","messageId":"493","endLine":8,"endColumn":22},{"ruleId":"490","severity":1,"message":"566","line":43,"column":13,"nodeType":"492","messageId":"493","endLine":43,"endColumn":24},{"ruleId":"502","severity":1,"message":"567","line":91,"column":17,"nodeType":"492","messageId":"504","endLine":91,"endColumn":31},{"ruleId":"502","severity":1,"message":"503","line":115,"column":21,"nodeType":"492","messageId":"504","endLine":115,"endColumn":22},{"ruleId":"502","severity":1,"message":"562","line":135,"column":17,"nodeType":"492","messageId":"504","endLine":135,"endColumn":21},{"ruleId":"502","severity":1,"message":"503","line":136,"column":21,"nodeType":"492","messageId":"504","endLine":136,"endColumn":22},{"ruleId":"502","severity":1,"message":"503","line":161,"column":21,"nodeType":"492","messageId":"504","endLine":161,"endColumn":22},{"ruleId":"502","severity":1,"message":"564","line":181,"column":17,"nodeType":"492","messageId":"504","endLine":181,"endColumn":26},{"ruleId":"502","severity":1,"message":"503","line":182,"column":21,"nodeType":"492","messageId":"504","endLine":182,"endColumn":22},{"ruleId":"502","severity":1,"message":"529","line":185,"column":29,"nodeType":"492","messageId":"504","endLine":185,"endColumn":30},{"ruleId":"507","severity":1,"message":"508","line":225,"column":41,"nodeType":"509","messageId":"510","endLine":225,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":241,"column":11,"nodeType":"546","messageId":"547","endLine":242,"endColumn":44},{"ruleId":"507","severity":1,"message":"508","line":80,"column":38,"nodeType":"509","messageId":"510","endLine":80,"endColumn":40},{"ruleId":"507","severity":1,"message":"548","line":84,"column":22,"nodeType":"509","messageId":"510","endLine":84,"endColumn":24},{"ruleId":"490","severity":1,"message":"568","line":4,"column":8,"nodeType":"492","messageId":"493","endLine":4,"endColumn":17},{"ruleId":"490","severity":1,"message":"569","line":5,"column":10,"nodeType":"492","messageId":"493","endLine":5,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":63,"column":19,"nodeType":"509","messageId":"510","endLine":63,"endColumn":21},{"ruleId":"517","severity":1,"message":"518","line":84,"column":9,"nodeType":"519","messageId":"520","endLine":114,"endColumn":10},{"ruleId":"490","severity":1,"message":"570","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":16},{"ruleId":"490","severity":1,"message":"571","line":11,"column":10,"nodeType":"492","messageId":"493","endLine":11,"endColumn":13},{"ruleId":"507","severity":1,"message":"548","line":25,"column":33,"nodeType":"509","messageId":"510","endLine":25,"endColumn":35},{"ruleId":"507","severity":1,"message":"548","line":30,"column":35,"nodeType":"509","messageId":"510","endLine":30,"endColumn":37},{"ruleId":"490","severity":1,"message":"557","line":4,"column":31,"nodeType":"492","messageId":"493","endLine":4,"endColumn":45},{"ruleId":"490","severity":1,"message":"542","line":4,"column":47,"nodeType":"492","messageId":"493","endLine":4,"endColumn":59},{"ruleId":"507","severity":1,"message":"508","line":58,"column":41,"nodeType":"509","messageId":"510","endLine":58,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":74,"column":11,"nodeType":"546","messageId":"547","endLine":75,"endColumn":44},{"ruleId":"490","severity":1,"message":"570","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":16},{"ruleId":"490","severity":1,"message":"572","line":6,"column":10,"nodeType":"492","messageId":"493","endLine":6,"endColumn":19},{"ruleId":"490","severity":1,"message":"506","line":7,"column":10,"nodeType":"492","messageId":"493","endLine":7,"endColumn":25},{"ruleId":"490","severity":1,"message":"571","line":10,"column":10,"nodeType":"492","messageId":"493","endLine":10,"endColumn":13},{"ruleId":"490","severity":1,"message":"557","line":4,"column":31,"nodeType":"492","messageId":"493","endLine":4,"endColumn":45},{"ruleId":"490","severity":1,"message":"542","line":4,"column":47,"nodeType":"492","messageId":"493","endLine":4,"endColumn":59},{"ruleId":"507","severity":1,"message":"508","line":58,"column":41,"nodeType":"509","messageId":"510","endLine":58,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":74,"column":11,"nodeType":"546","messageId":"547","endLine":75,"endColumn":44},{"ruleId":"490","severity":1,"message":"496","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"573","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":14},{"ruleId":"490","severity":1,"message":"497","line":3,"column":8,"nodeType":"492","messageId":"493","endLine":3,"endColumn":25},{"ruleId":"490","severity":1,"message":"574","line":11,"column":12,"nodeType":"492","messageId":"493","endLine":11,"endColumn":19},{"ruleId":"490","severity":1,"message":"575","line":11,"column":21,"nodeType":"492","messageId":"493","endLine":11,"endColumn":31},{"ruleId":"490","severity":1,"message":"561","line":1,"column":28,"nodeType":"492","messageId":"493","endLine":1,"endColumn":36},{"ruleId":"490","severity":1,"message":"576","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":12},{"ruleId":"490","severity":1,"message":"577","line":18,"column":7,"nodeType":"492","messageId":"493","endLine":18,"endColumn":17},{"ruleId":"490","severity":1,"message":"578","line":181,"column":11,"nodeType":"492","messageId":"493","endLine":181,"endColumn":27},{"ruleId":"525","severity":1,"message":"526","line":193,"column":63,"nodeType":"513","messageId":"527","endLine":193,"endColumn":65},{"ruleId":"507","severity":1,"message":"508","line":194,"column":26,"nodeType":"509","messageId":"510","endLine":194,"endColumn":28},{"ruleId":"490","severity":1,"message":"579","line":222,"column":7,"nodeType":"492","messageId":"493","endLine":222,"endColumn":15},{"ruleId":"490","severity":1,"message":"580","line":224,"column":7,"nodeType":"492","messageId":"493","endLine":224,"endColumn":16},{"ruleId":"490","severity":1,"message":"581","line":226,"column":9,"nodeType":"492","messageId":"493","endLine":226,"endColumn":25},{"ruleId":"490","severity":1,"message":"582","line":230,"column":9,"nodeType":"492","messageId":"493","endLine":230,"endColumn":13},"no-native-reassign",["583"],"no-negated-in-lhs",["584"],"no-unused-vars","'apps' is assigned a value but never used.","Identifier","unusedVar","'companies' is assigned a value but never used.","'AddAppTypes' is defined but never used.","'Component' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'addAppTypes' is defined but never used.","'categoriesTypes' is defined but never used.","'setApps' is defined but never used.","'connect' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'faTrashAlt' is defined but never used.","'FontAwesomeIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","'ApplicationListComponents' is defined but never used.","'boolean' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'ReactTooltip' is defined but never used.","'SpaceBarOutlined' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'name' is assigned a value but never used.","'j' is already defined.","'targetTitle' is assigned a value but never used.","'app' is assigned a value but never used.","'app2' is assigned a value but never used.","'ReactDOM' is defined but never used.","'convertFromRaw' is defined but never used.","'contentBlocks' is defined but never used.","'Editor' is defined but never used.","'faListAlt' is defined but never used.","'getSelection' is defined but never used.","'getCurrentContent' is defined but never used.","'editorState' is defined but never used.","'changeDepth' is defined but never used.","'keyBindingFn' is defined but never used.","'hasCommandModifier' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","Expected '!==' and instead saw '!='.","'CharacterMetadata' is defined but never used.","'RichUtils' is defined but never used.","'ContentBlock' is defined but never used.","'ContentState' is defined but never used.","'EditorState' is defined but never used.","'getDefaultKeyBinding' is defined but never used.","'k' is already defined.","'genKey' is defined but never used.","'KeyBindingUtil' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'apps' is already defined.","'uuidv4' is defined but never used.","'companies' is already defined.","'tempCheckbox' is already defined.","'editorState' is assigned a value but never used.","'newNoteContent' is already defined.","'MuiButton' is defined but never used.","'withStyles' is defined but never used.","'Calendar' is defined but never used.","'min' is defined but never used.","'faCaretUp' is defined but never used.","'Button' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'Chip' is defined but never used.","'ButtonBase' is assigned a value but never used.","'delectedCategory' is assigned a value but never used.","'onChange' is assigned a value but never used.","'onKeyDown' is assigned a value but never used.","'activeSuggestion' is assigned a value but never used.","'chip' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]