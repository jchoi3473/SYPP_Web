[{"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\index.js":"1","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\App.js":"2","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\reportWebVitals.js":"3","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_main\\MainPage.js":"4","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\ApplicationsMain.js":"5","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\ApplicationWeekview.js":"6","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\application-reducer\\applicationAction.js":"7","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\store.js":"8","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\root-reducer.js":"9","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\application-reducer\\applicationReducer.js":"10","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationList.js":"11","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationListComponents.js":"12","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\filteredProgress-reducer\\filteredProgressReducer.js":"13","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\filteredProgress-reducer\\filteredProgressAction.js":"14","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationListProgress.js":"15","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\progress\\ProgressBar.js":"16","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\progress\\Progress.js":"17","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NewTask.js":"18","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NextStep.js":"19","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NewDate.js":"20","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\calendar\\CalendarComponent.js":"21","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\radio\\RadioButtons.js":"22","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\page\\Page.js":"23","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\ApplicationDetail.js":"24","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailComponents.js":"25","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailEvents.js":"26","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailChecklists.js":"27","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailNotes.js":"28","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailFollowUp.js":"29","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailContacts.js":"30","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_contact\\CreateEditContact.js":"31","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_checklist\\CreateEditChecklist.js":"32","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\CreateEditEvent.js":"33","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\EventSelectDate.js":"34","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\EventDetail.js":"35","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\CreateEditConversation.js":"36","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\ConversationDetail.js":"37","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\ConversationDate.js":"38","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_note\\CreateEditNote.js":"39","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarMain.js":"40","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarDetail.js":"41"},{"size":571,"mtime":1610914124957,"results":"42","hashOfConfig":"43"},{"size":733,"mtime":1611180664895,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":2247,"mtime":1611443483758,"results":"46","hashOfConfig":"43"},{"size":2641,"mtime":1611281055201,"results":"47","hashOfConfig":"43"},{"size":1707,"mtime":1610832782497,"results":"48","hashOfConfig":"43"},{"size":1102,"mtime":1610913962023,"results":"49","hashOfConfig":"43"},{"size":310,"mtime":1610913223395,"results":"50","hashOfConfig":"43"},{"size":380,"mtime":1610916075867,"results":"51","hashOfConfig":"43"},{"size":1938,"mtime":1610913189755,"results":"52","hashOfConfig":"43"},{"size":2208,"mtime":1611017862377,"results":"53","hashOfConfig":"43"},{"size":6406,"mtime":1611189473849,"results":"54","hashOfConfig":"43"},{"size":1549,"mtime":1610916045065,"results":"55","hashOfConfig":"43"},{"size":439,"mtime":1610916045063,"results":"56","hashOfConfig":"43"},{"size":5702,"mtime":1611018168537,"results":"57","hashOfConfig":"43"},{"size":8248,"mtime":1610935592022,"results":"58","hashOfConfig":"43"},{"size":6975,"mtime":1610923261968,"results":"59","hashOfConfig":"43"},{"size":3165,"mtime":1610922551337,"results":"60","hashOfConfig":"43"},{"size":2213,"mtime":1610922554543,"results":"61","hashOfConfig":"43"},{"size":1282,"mtime":1610922540248,"results":"62","hashOfConfig":"43"},{"size":924,"mtime":1610921885137,"results":"63","hashOfConfig":"43"},{"size":2111,"mtime":1610921917745,"results":"64","hashOfConfig":"43"},{"size":675,"mtime":1610922499997,"results":"65","hashOfConfig":"43"},{"size":3182,"mtime":1611281287118,"results":"66","hashOfConfig":"43"},{"size":8536,"mtime":1611437853092,"results":"67","hashOfConfig":"43"},{"size":6619,"mtime":1611432915639,"results":"68","hashOfConfig":"43"},{"size":6218,"mtime":1611437642960,"results":"69","hashOfConfig":"43"},{"size":6401,"mtime":1611436319618,"results":"70","hashOfConfig":"43"},{"size":5499,"mtime":1611440143764,"results":"71","hashOfConfig":"43"},{"size":5407,"mtime":1611437823851,"results":"72","hashOfConfig":"43"},{"size":11906,"mtime":1611437920030,"results":"73","hashOfConfig":"43"},{"size":13629,"mtime":1611179672091,"results":"74","hashOfConfig":"43"},{"size":11180,"mtime":1611432877257,"results":"75","hashOfConfig":"43"},{"size":12099,"mtime":1611432475383,"results":"76","hashOfConfig":"43"},{"size":4971,"mtime":1611432344471,"results":"77","hashOfConfig":"43"},{"size":10335,"mtime":1611436198768,"results":"78","hashOfConfig":"43"},{"size":4923,"mtime":1611175554932,"results":"79","hashOfConfig":"43"},{"size":1636,"mtime":1611436113153,"results":"80","hashOfConfig":"43"},{"size":10608,"mtime":1611436360004,"results":"81","hashOfConfig":"43"},{"size":5449,"mtime":1611543137161,"results":"82","hashOfConfig":"43"},{"size":2316,"mtime":1611543918519,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1a2el5v",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"86"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\index.js",[],["189","190"],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\App.js",["191"],"import './App.css';\nimport MainPage from './sypp_main/MainPage'\nimport React, { Component } from 'react';\nimport {requestApplication} from './redux/application-reducer/applicationAction'\nimport {connect} from 'react-redux'\n\nconst mapStatetoProps = state => {\n  return{\n      apps: state.application.applications,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return{\n    onRequestApplication: () => dispatch(requestApplication()),\n  }\n}\n\nclass App extends Component{\n  async componentDidMount(){\n    const apps = await this.props.onRequestApplication();\n    \n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <MainPage/>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(App);\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\reportWebVitals.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_main\\MainPage.js",["192","193"],"import React, { Component, useState } from 'react';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport ApplicationsMain from './../sypp_applications/ApplicationsMain'\r\nimport './radio/RadioButtons.scss';\r\nimport CalendarMain from './../sypp_calendar/CalendarMain'\r\nimport './MainPage.scss'\r\n\r\nfunction MainPage() {\r\n    const [radioValue, setRadioValue] = useState('0');\r\n    const radios =     \r\n    [ \r\n        { name: 'Calendar', value: '0' },\r\n        { name: 'Applications', value: '1' },\r\n        { name: 'Companies', value: '2' },\r\n        { name: 'Templates', value: '3' },\r\n    ];\r\n\r\n    const radioChange = (e) => {\r\n      setRadioValue(e.currentTarget.value)\r\n    }\r\n\r\n    const display = () =>{\r\n      if(radioValue === '0'){\r\n          return (\r\n              <div className = \"sypp-calendar-mainPage\">\r\n                <CalendarMain/>\r\n              </div>\r\n          )\r\n      }else if(radioValue === '1'){\r\n        return(\r\n            <div>\r\n              <ApplicationsMain />\r\n            </div>\r\n        )\r\n      }     \r\n      else if(radioValue === '2'){\r\n        return(\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n      }  else if(radioValue === '3'){\r\n        return(\r\n            <div>\r\n            </div>\r\n        )\r\n      }     \r\n  }\r\n\r\n\r\n    return (\r\n      <div className = \"sypp-mainPage-radio-container\">\r\n        <ButtonGroup toggle className =\"sypp-mainRadio-container\">\r\n          {radios.map((radio, idx) => (\r\n              <div>\r\n                <ToggleButton\r\n                className={\"sypp-colorChange sypp-activeChange sypp-hoverChange sypp-text1 sypp-twoButtons\"}\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => radioChange(e, radioValue)}\r\n                >\r\n                {radio.name}\r\n                </ToggleButton>\r\n            </div>\r\n          ))}\r\n        </ButtonGroup>\r\n        {display()}\r\n      </div>\r\n    );\r\n  }\r\n  export default MainPage;\r\n\r\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\ApplicationsMain.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\ApplicationWeekview.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\application-reducer\\applicationAction.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\store.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\root-reducer.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\application-reducer\\applicationReducer.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationList.js",["194","195","196"],"import React, {Component} from 'react';\r\n\r\nimport {setApps} from './../../redux/application-reducer/applicationAction'\r\nimport {connect} from 'react-redux'\r\nimport ApplicationListComponents from './ApplicationListComponents'\r\nimport ApplicationListProgress from './ApplicationListProgress'\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n    }\r\n  }\r\n  const mapDispatchToProps = dispatch => {\r\n    return{\r\n        setApps: () => dispatch(setApps()),\r\n    }\r\n}\r\n\r\nclass ApplicationList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            applicationID : ''\r\n        }\r\n    }\r\n\r\n    onChange = (value) => {\r\n        console.log(value)\r\n        var boolean = true;\r\n        if (value == 1) {\r\n            boolean = true;\r\n        }\r\n        else{\r\n            boolean = false;\r\n        }   \r\n    }\r\n    //yields the info about application detail to application detail section\r\n\r\n    render(){\r\n        const radioValue =    \r\n        [ \r\n        { name: 'All', value: '0' },\r\n        { name: 'Starred', value: '1' },\r\n        ]\r\n        const categoryDivided = () =>{\r\n            var temp = []\r\n            for(var i=0; i<this.props.apps.length; i++){\r\n                for(var j=0; j<this.props.apps[i].Detail.Categories.length;j++){\r\n                    if(!temp.includes(this.props.apps[i].Detail.Categories[j].Type) && this.props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted.length>0){\r\n                            temp = temp.concat(this.props.apps[i].Detail.Categories[j].Type)}\r\n                    }\r\n            }\r\n            for(var i=0;i<temp.length;i++){\r\n                radioValue.push({\r\n                    name : temp[i],\r\n                    value: i+2+\"\"\r\n                })\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {categoryDivided()}\r\n                <ApplicationListComponents options = {radioValue} onChange = {this.onChange}/>\r\n                <ApplicationListProgress onClickProgressAll = {this.props.onClickProgressAll}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationList)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationListComponents.js",["197","198","199"],"import React, { Component, useState } from 'react';\r\n\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\nimport ReactTooltip from \"react-tooltip\";\r\n// import './../components/radio/RadioButtons.css';\r\nimport './../../sypp_main/radio/RadioButtons.scss'\r\n\r\nimport './CategoryButtons.scss';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {updateFilteredProgress, updateFilteredProgressTitle, updateFilteredProgressButtonValue} from './../../redux/filteredProgress-reducer/filteredProgressAction'\r\n\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      apps: state.application.applications,\r\n      filteredProgress: state.filteredProgress\r\n  }\r\n}\r\nconst mapDispatchToProps= dispatch =>{\r\n  return {\r\n    updateFilteredProgress: (applications) => dispatch(updateFilteredProgress(applications)),\r\n    updateFilteredProgressTitle: (title) => dispatch(updateFilteredProgressTitle(title)),\r\n    updateButtonValue: (value) => dispatch(updateFilteredProgressButtonValue(value))\r\n  }\r\n}\r\n\r\nfunction CategoryButtons(props) {\r\n\r\n    const [radioValue, setRadioValue] = useState(props.filteredProgress.selectedButtonValue);\r\n    const radios = props.options;\r\n    const [targetName, setTargetName] = useState('');\r\n    const [targetValue, setTargetValue] = useState('0')\r\n    const [toolTip, setToolTip] = useState(false);\r\n\r\n    const [targetTitle, setTargetTitle] = useState(props.filteredProgress.selectedTitle)   \r\n\r\n    const radioChange = (e) => {\r\n        if(e.currentTarget.value==='0'||e.currentTarget.value==='1'){\r\n            e.preventDefault();\r\n            var name = ''\r\n            for(var i=0;i<radios.length;i++){\r\n                if(radios[i].value ===  e.currentTarget.value)\r\n                name = radios[i].name\r\n            }\r\n            props.onChange(name);\r\n\r\n            // setRadioValue(e.currentTarget.value)\r\n\r\n            var filtered = [] \r\n            if(e.currentTarget.value === '0'){\r\n                filtered = props.apps\r\n                props.updateFilteredProgressTitle(\"All\")\r\n                setRadioValue('0')\r\n                props.updateButtonValue('0')\r\n            }\r\n            //isFavorite = true인 case들\r\n            else if(e.currentTarget.value === '1'){\r\n                setRadioValue('1')\r\n                props.updateButtonValue('1')\r\n                props.updateFilteredProgressTitle(\"Starred\")\r\n                for(var i=0;i<props.apps.length;i++){\r\n                if(props.apps[i].Detail.IsFavorite) \r\n                    filtered = filtered.concat(props.apps[i])\r\n                }\r\n            }\r\n\r\n            props.updateFilteredProgress(filtered)\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) =>{\r\n      setTargetName(e.target.getAttribute('name'))\r\n      setTargetValue(e.target.getAttribute('value'))\r\n      if(e.target.getAttribute('name')!=='All'&&e.target.getAttribute('name')!=='Starred'){\r\n        setToolTip(false)\r\n      }\r\n      else{\r\n        setToolTip(true)\r\n      }\r\n    }\r\n\r\n    const categoryDivided = () =>{\r\n      var temp = []\r\n      for(var i=0; i<props.apps.length; i++){\r\n          for(var j=0; j<props.apps[i].Detail.Categories.length;j++){\r\n              if(props.apps[i].Detail.Categories[j].Type === targetName){\r\n                for(var k=0; k<props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted.length;k++){\r\n                  if(!temp.includes(props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted[k])){\r\n                    temp = temp.concat(props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted[k])\r\n                  }\r\n                }    \r\n              }\r\n          }\r\n      }\r\n\r\n    return(\r\n      <div className = \"sypp-tooltip-container\">\r\n      { \r\n        temp.map((entity) => (\r\n        <button className = \"sypp-subCategory-button\" name = {entity} onClick ={e => onClickButton(e)}>{entity}</button>\r\n        ))\r\n      }\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n    const onClickButton = (e) =>{\r\n      setRadioValue(targetValue)\r\n      props.updateButtonValue(targetValue)\r\n      props.updateFilteredProgressTitle(e.target.getAttribute('name'))\r\n      setTargetTitle(e.target.getAttribute('name'))\r\n      filterProgress(e)\r\n    }\r\n\r\n    const filterProgress = (e) =>{\r\n      var filtered = [] \r\n      for(var i=0; i<props.apps.length ;i++){\r\n        //save i as an index\r\n        for(var j=0;j<props.apps[i].Detail.Categories.length;j++){\r\n          if(props.apps[i].Detail.Categories[j].Type === targetName){\r\n            for(var k=0; k<props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted.length;k++){\r\n              if(e.target.getAttribute('name') === props.apps[i].Detail.Categories[j].SuggestionsOrSeleceted[k]){\r\n                filtered = filtered.concat(props.apps[i])\r\n              }\r\n            }\r\n          }\r\n       }\r\n    }\r\n      props.updateFilteredProgress(filtered)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <ButtonGroup toggle className = \"sypp-applicationList-radio-container\">\r\n          {radios.map((radio, idx) => (\r\n                <ToggleButton\r\n                className={\"sypp-colorChange2 sypp-activeChange sypp-hoverChange sypp-text1\"}\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => radioChange(e, radioValue)}\r\n                data-for=\"radioTip\"\r\n                data-tip = ''\r\n                onMouseEnter = {e => handleChange(e)}\r\n                >\r\n                  <div className = \"sypp-category-radio-padding\" name = {radio.name} value = {radio.value}>\r\n                    {radio.name}\r\n                  </div>\r\n                </ToggleButton>\r\n\r\n          ))}\r\n          <ReactTooltip\r\n                  id={(radioValue !== 0&&radioValue.value !== 1)?\"radioTip\":\"\"}\r\n                  className = \"sypp-CategoryBox sypp-colorFix sypp-colorFixBottom sypp-colorFixBottomBefore sypp-colorFixBottomAfter\"\r\n                  effect='solid'\r\n                  delayHide={20}\r\n                  place={'bottom'}\r\n                  disable={toolTip}\r\n                  >\r\n                    {categoryDivided()}\r\n                </ReactTooltip>\r\n        </ButtonGroup>\r\n        </div>\r\n    );\r\n  }\r\n  export default connect(mapStatetoProps, mapDispatchToProps)(CategoryButtons);\r\n\r\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\filteredProgress-reducer\\filteredProgressReducer.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\redux\\filteredProgress-reducer\\filteredProgressAction.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\ApplicationListProgress.js",["200","201","202"],"import React, { Component } from 'react';\r\nimport ProgressBar from './progress/ProgressBar'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './progress/Progress.css'\r\nimport './progress/ProgressBar.scss'\r\n\r\nimport './ApplicationList.scss'\r\n// import Rating from \"@material-ui/lab/Rating\";\r\n import Rating from 'react-rating';\r\nimport {setApps} from './../../redux/application-reducer/applicationAction'\r\nimport {connect} from 'react-redux'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        filteredProgress: state.filteredProgress.applications,\r\n        selectedTitle: state.filteredProgress.selectedTitle\r\n    }\r\n}\r\nconst mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps: (applications) => dispatch(setApps(applications)),\r\n    }\r\n}\r\n\r\n\r\nexport class Progress extends Component{\r\n    constructor(){\r\n        super();\r\n        this.handleMouseHover = this.handleMouseHover.bind(this);\r\n\r\n        this.state =  {\r\n            searchField:'',\r\n            isHovering : false,\r\n        }\r\n    }\r\n    handleMouseHover(){\r\n        this.setState(this.toggleHoverState);\r\n    }\r\n    toggleHoverState(state) {\r\n        return{\r\n            isHovering: !state.isHovering,\r\n        };\r\n    }\r\n    //UID, APP ID, TASK use post call\r\n    //return task with id\r\n    onClickIsFavorite = (applicationID) =>{\r\n        var apps = this.props.apps\r\n\r\n        for(var i=0; i<apps.length;i++){\r\n            if(apps[i].applicationID+\"\" === applicationID+\"\"){\r\n                apps[i].Detail.IsFavorite = !apps[i].Detail.IsFavorite\r\n                break;\r\n            }\r\n        }\r\n        this.props.setApps(apps)\r\n        this.setState({})\r\n    }\r\n\r\n    onClickAdd = (applicationID, title, date, showDate) => {\r\n        const apps = this.props.apps\r\n        apps.map((data) => {\r\n            if(data.applicationID === applicationID){\r\n                data.Tasks = data.Tasks.concat({\r\n                    Time: date,\r\n                    Title: title,\r\n                    showDate : showDate,\r\n                    Status: false\r\n                })\r\n            }\r\n        })\r\n        this.props.setApps(apps)\r\n        this.setState({})\r\n    }\r\n\r\n    onSearchChange = (e) =>{\r\n        this.setState({\r\n            searchField: e.target.value\r\n        })\r\n        console.log(this.state.searchField)\r\n    }\r\n    onClickDelete = () =>{\r\n        console.log(\"trigger Trash Can\")\r\n    }\r\n\r\n    render(){\r\n        const searchFilteredProgress = this.props.filteredProgress.filter(application => {\r\n            return (application.Detail.CompanyName.toLowerCase().includes(this.state.searchField.toLowerCase())||application.Detail.PositionName.toLowerCase().includes(this.state.searchField.toLowerCase()) )\r\n        })\r\n\r\n        return(\r\n            <div>\r\n            <div className =\"sypp-searchBox-container\">\r\n            <input \r\n            className =\"sypp-applicationlist-searchBox\"\r\n            type='search' \r\n            placeholder = '  Search application'\r\n            onChange = {e => this.onSearchChange(e)}\r\n            value = {this.state.searchField}\r\n            />\r\n            </div>\r\n            {this.props.selectedTitle !== \"\"? <div className =\"sypp-selectedTitle\">{this.props.selectedTitle}</div>:undefined}\r\n            <div className = \"sypp-task-sortby\">Testing</div>\r\n            <div className = \"sypp-taskTitles\">\r\n                <div className=\"sypp-taskEntity\">Apply</div>\r\n                <div className=\"sypp-taskEntity\">Task</div>\r\n                <div className=\"sypp-taskEntity\">Result</div>\r\n            </div>\r\n                {\r\n                (searchFilteredProgress.length > 0)?\r\n                searchFilteredProgress.map((data) => (\r\n                        <div className = \"sypp-progress-all sypp-trashIcon-Hover\">\r\n                            <div className = \"sypp-starContainer\">\r\n                            <Rating className =\"sypp-starIcon\" applicationName = {data.applicationID} stop={1} initialRating = {data.Detail.IsFavorite?1:0} onClick = {() => this.onClickIsFavorite(data.applicationID)}\r\n                            emptySymbol=\"fa fa-star-o starSize starIcon\"\r\n                            fullSymbol = \"fa fa-star starSize starIcon\"\r\n                                />\r\n                            </div>\r\n                                <div>{console.log(data)}</div>\r\n                                <div className = \"sypp-application-name\" onClick = {() => this.props.onClickProgressAll(data.applicationID)}>\r\n                                <div className = \"sypp-appilication-name-container\" >\r\n                                    <div className = \"sypp-progress-company\"  >{data.Detail.CompanyName}</div>\r\n                                    <FontAwesomeIcon className = \"sypp-trashIcon sypp-trashIcon-Hover\" icon={faTrashAlt} onClick = {this.onClickDelete}/>\r\n                                </div>\r\n                                <div className = \"sypp-progress-position\" >{data.Detail.PositionName}</div>\r\n                                </div>\r\n                            <ProgressBar applicationID = {data.Detail.applicationID} applied = {data.applied} dates = {data.Tasks} details = {data.Detail.Status[0]} onClickAdd = {this.onClickAdd}/>\r\n                        </div>\r\n                        )):undefined\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchToProps)(Progress);","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\progress\\ProgressBar.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\progress\\Progress.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NewTask.js",["203","204"],"import React, {Component} from 'react';\r\nimport NextStep from './NextStep';\r\nimport NewDate from './NewDate';\r\nimport Page from './../../../components/page/Page'\r\nimport './NewTask.css'\r\nimport './NewTask.scss'\r\n\r\n\r\n\r\nexport class NewTask extends Component {\r\n    state = {\r\n        step: 1,\r\n        title: \"Interview\",\r\n        date: new Date(),\r\n        showDate: true\r\n    }\r\n\r\n    nextStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    calendarChange = date => {\r\n        this.setState({\r\n            date: date\r\n        });\r\n    }\r\n\r\n    onChangeOptions = (value) => {\r\n        if(value === '1'){\r\n            this.setState({\r\n                title: \"Interview\"\r\n            })\r\n        }\r\n        else if(value === '2'){\r\n            this.setState({\r\n                title: \"Challenge\"\r\n            })\r\n        }\r\n        else if(value === '3'){\r\n            this.setState({\r\n                title:\"Test\"\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                title: value\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeOption = (value) => {\r\n        var boolean = true;\r\n        if (value == 1) {\r\n            boolean = true;\r\n        }\r\n        else{\r\n            boolean = false;\r\n        }\r\n        return boolean;\r\n    }\r\n    onInterviewOptionChange = (value) => {\r\n        this.setState({\r\n            showDate: this.onChangeOption(value)\r\n        })\r\n    }\r\n    onClick = e => {\r\n        e.preventDefault();\r\n        this.props.onClickSave(this.state.title, this.state.date, this.state.showDate)\r\n    }\r\n\r\n    render(){\r\n        const{step} = this.state;\r\n        \r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <div>\r\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2]}/>\r\n                        <NextStep \r\n                            nextStep = {this.nextStep}\r\n                            onChangeOption = {this.onChangeOptions}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div>\r\n                        <Page pageNumber ={this.state.step} pageCount = {[1,2]}/>\r\n                        <NewDate\r\n                        onSaveButton = {this.onSaveButton}\r\n                        calendarChange = {this.calendarChange}\r\n                        date = {this.state.date}\r\n                        onInterviewOptionChange = {this.onInterviewOptionChange}\r\n                        title = {this.state.title}\r\n                        />\r\n                        <div className=\"sypp-next-button-container\">\r\n                            <button className = \"sypp-button-next\" \r\n                            onClick={this.onClick} >\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\nexport default NewTask","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NextStep.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_list\\newTask\\NewDate.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\calendar\\CalendarComponent.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\radio\\RadioButtons.js",["205","206","207","208","209"],"import React, { Component, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport './RadioButtons.css';\r\n\r\n\r\n\r\nfunction RadioButtons(props) {\r\n    const [checked, setChecked] = useState(false);\r\n    const [radioValue, setRadioValue] = useState('1');\r\n    const radios = props.options;\r\n\r\n    const radioChange = (e) => {\r\n      e.preventDefault();\r\n      props.onChange(e.currentTarget.value);\r\n      setRadioValue(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <ButtonGroup toggle className = {props.classContainerProps}>\r\n          {radios.map((radio, idx) => (\r\n              <div className=\"sypp-button-container sypp-button-towButtons-container\">\r\n                {props.isDisabled?\r\n                <ToggleButton\r\n                className={\"sypp-colorChange sypp-activeChange sypp-hoverChange sypp-text1 sypp-twoButtons \" + props.buttonContainerProps}\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => radioChange(e, radioValue)}\r\n                disabled\r\n                >\r\n                {radio.name}\r\n                </ToggleButton>:\r\n                <ToggleButton\r\n                className={\"sypp-colorChange sypp-activeChange sypp-hoverChange sypp-text1 sypp-twoButtons \" + props.buttonContainerProps}\r\n                key={idx}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => radioChange(e, radioValue)}\r\n                >\r\n                {radio.name}\r\n                </ToggleButton>\r\n                }\r\n            </div>\r\n          ))}\r\n        </ButtonGroup>\r\n    );\r\n  }\r\n  export default RadioButtons;\r\n\r\n","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\page\\Page.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\ApplicationDetail.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailComponents.js",["210","211"],"import React, {Component} from 'react';\r\n\r\nimport ApplicationDetailEvents from './ApplicationDetailEvents'\r\nimport ApplicationDetailChecklists from './ApplicationDetailChecklists'\r\nimport ApplicationDetailNotes from './ApplicationDetailNotes'\r\nimport ApplicationDetailFollowUp from './ApplicationDetailFollowUp'\r\nimport ApplicationDetailContacts from './ApplicationDetailContacts'\r\n\r\nimport './ApplicationDetailComponents.scss'\r\n\r\nimport {setApps} from '../../../redux/application-reducer/applicationAction'\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n    }\r\n  }\r\n  const mapDispatchToProps = dispatch => {\r\n    return{\r\n        setApps: () => dispatch(setApps()),\r\n    }\r\n}\r\n\r\n\r\nclass ApplicationDetailComponents extends Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n    onSaveEventNote = () =>{\r\n        this.setState({})\r\n    }\r\n    onSaveConversation = () =>{\r\n        this.setState({})\r\n    }\r\n    onSaveNote = () =>{\r\n        this.setState({})\r\n    }\r\n    onSaveChecklist = () =>{\r\n        this.setState({})\r\n    }\r\n    onSaveContactNote = () =>{\r\n        this.setState({})\r\n    }\r\n    display = () =>{\r\n        if(this.props.applicationID !== ''){\r\n            switch(this.props.radioValue){\r\n                case '0':\r\n                    return (\r\n                        <div class = \"container\">\r\n                            <div class = \"row\">\r\n                                <div class = \"col\">\r\n                                {\r\n                                    this.props.applicationDetail.Events.length !== 0 ? \r\n                                    <div>\r\n                                        <div className = \"sypp-applicationDetail-all-title\">Events</div>\r\n                                        {this.props.applicationDetail.Events.map((event) =>(\r\n                                            <ApplicationDetailEvents onSaveEventNote = {this.onSaveEventNote} Event = {event} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\r\n                                    </div>:\r\n                                        undefined\r\n                                }\r\n                                </div>\r\n                                <div class = \"col\">\r\n                                {\r\n                                    this.props.applicationDetail.Notes.length !== 0 ? \r\n                                    <div>\r\n                                        <div className = \"sypp-applicationDetail-all-title\">Notes</div>\r\n                                        {this.props.applicationDetail.Notes.map((note) =>(\r\n                                            <ApplicationDetailNotes onSaveNote = {this.onSaveNote}  Note = {note} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\r\n                                    </div>\r\n                                        :undefined\r\n                                }\r\n                                </div>\r\n                                <div class = \"col\">\r\n                                {\r\n                                    this.props.applicationDetail.Contacts.length !== 0 ? \r\n                                    <div>\r\n                                        <div className = \"sypp-applicationDetail-all-title\">Contacts</div>\r\n                                        {this.props.applicationDetail.Contacts.map((data) => (\r\n                                            <ApplicationDetailContacts onSaveContactNote = {this.onSaveContactNote} contact = {data} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\r\n                                    </div>:\r\n                                        undefined\r\n                                }\r\n                                </div>\r\n                                <div class = \"col\">\r\n                                {\r\n                                    this.props.applicationDetail.FollowUps.length !== 0 ? \r\n                                    <div>\r\n                                        <div className = \"sypp-applicationDetail-all-title\">Conversational Histories</div>\r\n                                        {this.props.applicationDetail.FollowUps.map((FollowUp) =>(\r\n                                            <ApplicationDetailFollowUp onSaveConversation = {this.onSaveConversation} FollowUp = {FollowUp} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\r\n                                    </div>:\r\n                                        undefined\r\n                                }\r\n                                </div>\r\n                                <div class = \"col\">\r\n                                {\r\n                                    this.props.applicationDetail.Checklists.length !== 0 ? \r\n                                    <div>\r\n                                        <div className = \"sypp-applicationDetail-all-title\">Checklist</div>\r\n                                        {this.props.applicationDetail.Checklists.map((checklist) =>(\r\n                                            <ApplicationDetailChecklists onSaveChecklist = {this.onSaveChecklist}  Checklist = {checklist} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>))}\r\n                                    </div>:\r\n                                        undefined\r\n                                }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                case '1':\r\n                    return (\r\n                        <div>\r\n                            {\r\n                            this.props.applicationDetail.Events.map((event) =>(\r\n                                <ApplicationDetailEvents onSaveEventNote = {this.onSaveEventNote} Event = {event} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\r\n                            ))\r\n                            }\r\n                        </div>\r\n                    )\r\n                case '2':\r\n                    return (\r\n                        <div>\r\n                            {\r\n                            this.props.applicationDetail.Notes.map((note) =>(\r\n                                <ApplicationDetailNotes onSaveNote = {this.onSaveNote} Note = {note} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\r\n                            ))\r\n                            }\r\n                        </div>\r\n                    )\r\n                case '3':\r\n                    return (\r\n                        <div>\r\n                            {\r\n                            this.props.applicationDetail.Contacts.map((data) => (\r\n                                <ApplicationDetailContacts onSaveContactNote = {this.onSaveContactNote} contact = {data} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\r\n                            ))\r\n                            }\r\n                        </div>                \r\n                    )\r\n                case '4':\r\n                    return (\r\n                        <div>\r\n                            {\r\n                            this.props.applicationDetail.FollowUps.map((FollowUp) =>(\r\n                                <ApplicationDetailFollowUp onSaveConversation = {this.onSaveConversation} FollowUp = {FollowUp} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\r\n                            ))\r\n                            }\r\n                        </div>\r\n                    )\r\n                case '5':\r\n                    return (\r\n                        <div>\r\n                            {\r\n                            this.props.applicationDetail.Checklists.map((checklist) =>(\r\n                                <ApplicationDetailChecklists onSaveChecklist = {this.onSaveChecklist} Checklist = {checklist} applicationID = {this.props.applicationDetail.applicationID} type ={'application'}/>\r\n                            ))\r\n                            }\r\n                        </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.display()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationDetailComponents)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailEvents.js",["212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState, convertFromRaw, contentBlocks} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './ApplicationDetailNotes.scss'\r\nimport './../ApplicationDetail.scss'\r\nimport './ApplicationDetailEvents.scss'\r\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Moment from 'moment';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport CreateEditEvent from './../../../components/create_edit_components/create_edit_event/CreateEditEvent'\r\n// import CreateEditEvent from './../create_edit_applications_components/create_edit_event/CreateEditEvent'\r\n\r\nimport {getDefaultKeyBinding, KeyBindingUtil, getSelection, getCurrentContent, editorState, changeDepth, keyBindingFn} from 'draft-js';\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        // pending: state.progress.isPending,\r\n        // categories: state.categories.categories, \r\n        // applicationDetail : state.applicationDetail.application\r\n    }\r\n  }\r\nconst {hasCommandModifier} = KeyBindingUtil;\r\n  \r\n\r\nclass ApplicationDetailEvents extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const contentBlocksArray = []\r\n        for (var i=0;i<this.props.Event.Contents.length;i++){\r\n            if(this.props.Event.Contents.length !== 0){\r\n                contentBlocksArray.push(\r\n                    new ContentBlock({\r\n                        key: this.props.Event.Contents[i].eventContentsID,\r\n                        type: 'unordered-list-item',\r\n                        depth: 0,\r\n                        text: this.props.Event.Contents[i].Header\r\n                      })\r\n                )\r\n                for(var j=0;j<this.props.Event.Contents[i].Contents_Text.length;j++){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: genKey(),\r\n                            type: 'unordered-list-item',\r\n                            depth: 1,\r\n                            text: this.props.Event.Contents[i].Contents_Text[j]\r\n                          })\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        this.state = {\r\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\r\n          show : false\r\n        };\r\n      }\r\n      currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n      currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n      myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n              }\r\n            }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({ editorState});\r\n      }\r\n    }\r\n \r\n\r\n    handleClose = () => {\r\n      this.setState({\r\n        show:false\r\n      })\r\n    }\r\n    handleOpen = (e) =>{\r\n      e.preventDefault()\r\n      this.setState({\r\n        show:true\r\n      })\r\n    }\r\n  \r\n      render() {\r\n        return (\r\n          <div className=\"sypp-ApplicationDetailNote-container sypp-EventContainer\">\r\n            <div className = \"sypp-EventDetailContainer\"  onClick={e => this.handleOpen(e)}>\r\n            {/* <div className=\"ApplicationDetailNote-title-container\"> */}\r\n              <div className = \"sypp-applicationDetailTextTitle\">{this.props.Event.Detail.Title}</div>\r\n              <div className = \"sypp-EventDateTime\">{Moment(this.props.Event.Detail.Time).format('MMM DD, YYYY - h:mma')}</div>\r\n              <div className = \"sypp-EventDateTime\">{this.props.Event.Detail.Location}</div>\r\n            {/* </div> */}\r\n            {/* <Editor \r\n              toolbarHidden\r\n              editorClassName=\"sypp-editor-class\"\r\n              editorState={this.state.editorState}\r\n              onEditorStateChange={this._handleChange}\r\n              keyBindingFn={this.myKeyBindingFn}\r\n            /> */}\r\n            {\r\n              this.props.Event.Contents.map((data) => (\r\n                <div>\r\n                <div className = \"sypp-note-text-header\">{' • ' +data.Header}</div>\r\n                {\r\n                  data.Contents_Text.length != 0 ?  \r\n                    data.Contents_Text.map((subText)=>(\r\n                      <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\r\n                    ))\r\n                  : undefined\r\n                }\r\n                </div>\r\n              ))\r\n\r\n            }\r\n            </div>\r\n\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditEvent onSaveEventNote = {this.props.onSaveEventNote} _handleChange = {this._handleChange}  Event = {this.props.Event} handleClose = {this.handleClose} editorState = {this.state.editorState} applicationID = {this.props.applicationID} type ={this.props.type} companyID = {this.props.companyID}/>\r\n                </div>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default connect(mapStatetoProps, null)(ApplicationDetailEvents)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailChecklists.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CharacterMetadata, RichUtils, ContentBlock, genKey, ContentState, EditorState, convertFromRaw, contentBlocks} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './ApplicationDetailNotes.scss'\r\nimport './../ApplicationDetail.scss'\r\nimport './ApplicationDetailChecklists.scss'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { faListAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSquare, faCheckSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n// import { Checkbox } from 'semantic-ui-react'\r\nimport CreateEditChecklist from './../../../components/create_edit_components/create_edit_checklist/CreateEditChecklist'\r\n// import CreateEditChecklist from './../create_edit_applications_components/create_edit_checklist/CreateEditChecklist'\r\n\r\nimport {getDefaultKeyBinding, KeyBindingUtil, getSelection, getCurrentContent, editorState, changeDepth, keyBindingFn} from 'draft-js';\r\nimport {connect} from 'react-redux'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\n  const {hasCommandModifier} = KeyBindingUtil;\r\n  \r\n\r\nclass ApplicationDetailChecklists extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const contentBlocksArray = []\r\n        const checkboxArray =[]\r\n        for (var i=0;i<this.props.Checklist.Contents.length;i++){\r\n            if(this.props.Checklist.Contents.length !== 0){\r\n                contentBlocksArray.push(\r\n                    new ContentBlock({\r\n                        key: this.props.Checklist.Contents[i].checklistID,\r\n                        type: 'unstyled',\r\n                        depth: 0,\r\n                        text: this.props.Checklist.Contents[i].Type\r\n                      })\r\n                )\r\n            }\r\n            checkboxArray.push({\r\n                checklistID : this.props.Checklist.Contents[i].checklistID,\r\n                checkboxBoolean: this.props.Checklist.Contents[i].Submission\r\n            })\r\n        }\r\n          this.state = {\r\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\r\n          checkboxState : checkboxArray,\r\n          show : false\r\n        };\r\n      }\r\n    \r\n    //API calls here, need to save the checkbox status to the application\r\n    onCheckBoxClick = (checkboxID) => {\r\n        var tempCheckbox = this.state.checkboxState\r\n        for(var i=0;i<this.state.checkboxState.length;i++){\r\n            if(checkboxID === this.state.checkboxState[i].checklistID){\r\n                tempCheckbox[i].checkboxBoolean = !tempCheckbox[i].checkboxBoolean\r\n            }\r\n            this.setState({\r\n                checkboxState : tempCheckbox \r\n            })\r\n        }\r\n      }\r\n    _handleChange = (editorState) =>{\r\n      this.setState({\r\n        editorState: editorState\r\n      })\r\n    }\r\n    handleClose = () => {\r\n      this.setState({\r\n        show:false\r\n      })\r\n    }\r\n    handleOpen = (e) =>{\r\n      e.preventDefault()\r\n      this.setState({\r\n          show:true\r\n      })\r\n    }\r\n\r\n    handleCheckbox = (checkboxState) =>{\r\n      this.setState({\r\n        checkboxState : checkboxState\r\n      })\r\n    }\r\n     \r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"sypp-ApplicationDetailNote-container\">\r\n            <div className=\"sypp-ApplicationDetailNote-title-container\">\r\n            <div className = \"sypp-applicationDetailTextTitle\">{this.props.Checklist.Detail.Title}</div>\r\n            </div>\r\n            <div className = \"sypp-ApplicationDetailChecklists-container\">\r\n            <div className = \"sypp-CheckList-Container\" style = {{\"height\":\"\"+this.state.checkboxState.length*16.363333333}}>\r\n            {\r\n                // className = \"Checkbox-padding checkbox-root checkboxIcomButton-root Icon-root Checkbox-Checked\" \r\n                this.state.checkboxState.map((checkbox) => (\r\n                    // <FormGroup row>\r\n                    <FormControlLabel \r\n                    className = \"sypp-FormRoot\"\r\n                    control = {\r\n                    <Checkbox \r\n                    icon=  {<FontAwesomeIcon className = \"sypp-CheckBox-icon\" icon={faSquare}/> }\r\n                    checkedIcon= {<FontAwesomeIcon className = \"sypp-CheckBox-icon sypp-checked\" icon={faCheckSquare}/> }\r\n                    className = \"sypp-Checkbox-padding sypp-Checkbox-padding2\"\r\n                    checked = {checkbox.checkboxBoolean} \r\n                    onChange = {() => this.onCheckBoxClick(checkbox.checklistID)}/>}\r\n                    />\r\n                    // </FormGroup>\r\n                ))\r\n            }\r\n            </div>\r\n            <div className = \"sypp-Editor-Container\" onClick = {this.handleOpen}>\r\n            {\r\n              this.props.Checklist.Contents.map((data) => (\r\n                <div className = \"sypp-checklist-body\">{data.Type}</div>\r\n              ))\r\n            }\r\n            </div>\r\n            </div>\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditChecklist onSaveChecklist = {this.props.onSaveChecklist} _handleChange = {this._handleChange} handleCheckbox = {this.handleCheckbox} Checklist = {this.props.Checklist} handleClose = {this.handleClose} type ={this.props.type} companyID = {this.props.companyID} applicationID = {this.props.applicationID}\r\n                    checkboxState = {this.state.checkboxState} editorState = {this.state.editorState}/>\r\n                </div>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default connect(null, null)(ApplicationDetailChecklists)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailNotes.js",["242","243","244","245","246","247","248","249","250"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './ApplicationDetailNotes.scss'\r\nimport './../ApplicationDetail.scss'\r\n\r\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\nimport {connect} from 'react-redux'\r\n// import { setCompany } from '../redux/company-reducer/companyAction';\r\nimport Modal from 'react-bootstrap/Modal';\r\n// import CreateEditNote from './../create_edit_applications_components/create_edit_note/CreateEditNote'\r\nimport CreateEditNote from './../../../components/create_edit_components/create_edit_note/CreateEditNote'\r\n\r\nconst {hasCommandModifier} = KeyBindingUtil;\r\nconst mapStatetoProps = state => {\r\n  return{\r\n      apps: state.application.applications,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps= dispatch =>{\r\n  return {\r\n      setApps: (applications) => dispatch(setApps(applications)),\r\n      // setCompany : (companies) => dispatch(setCompany(companies))\r\n  }\r\n}\r\n\r\n\r\nclass ApplicationDetailNotes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const contentBlocksArray = []\r\n        for (var i=0;i<this.props.Note.Contents.length;i++){\r\n            if(this.props.Note.Contents.length !== 0){\r\n                contentBlocksArray.push(\r\n                    new ContentBlock({\r\n                        key: this.props.Note.Contents[i].noteContentsID,\r\n                        type: 'unordered-list-item',\r\n                        depth: 0,\r\n                        text: this.props.Note.Contents[i].Header\r\n                      })\r\n                )\r\n                for(var j=0;j<this.props.Note.Contents[i].Contents_Text.length;j++){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: genKey(),\r\n                            type: 'unordered-list-item',\r\n                            depth: 1,\r\n                            text: this.props.Note.Contents[i].Contents_Text[j]\r\n                          })\r\n                    )\r\n                }\r\n            }\r\n        }\r\n          this.state = {\r\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray)),\r\n          show : false\r\n\r\n        };\r\n      }\r\n      currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n      currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n      myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({ editorState});\r\n      }\r\n    }\r\n\r\n    handleClose = () => {\r\n      this.setState({\r\n        show:false\r\n      })\r\n    }\r\n    handleOpen = (e) =>{\r\n      e.preventDefault()\r\n      this.setState({\r\n        show:true\r\n      })\r\n    }\r\n     \r\n    \r\n      render() {\r\n        return (\r\n          <div className= \"sypp-ApplicationDetailNote-container\">\r\n            <div className=\"sypp-ApplicationDetailNote-title-container\" onClick = {this.handleOpen}>\r\n            <div className = \"sypp-ApplicationDetailNote-title\">\r\n            <div className = \"sypp-applicationDetailTextTitle\">{this.props.Note.Detail.Title}</div>\r\n            </div>\r\n            <div>\r\n            {\r\n              this.props.Note.Contents.map((data) => (\r\n                <div>\r\n                <div className = \"sypp-note-text-header\">{' • ' +data.Header}</div>\r\n                {\r\n                  data.Contents_Text.length != 0 ?  \r\n                    data.Contents_Text.map((subText)=>(\r\n                      <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\r\n                    ))\r\n                  : undefined\r\n                }\r\n                </div>\r\n              ))\r\n            }\r\n            {/* <Editor \r\n              toolbarHidden\r\n              editorClassName=\"sypp-editor-class\"\r\n              editorState={this.state.editorState}\r\n              onEditorStateChange={this._handleChange}\r\n              keyBindingFn={this.myKeyBindingFn}\r\n            /> */}\r\n            </div>\r\n            </div>\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditNote  _handleChange = {this._handleChange} onSaveNote = {this.props.onSaveNote} Note = {this.props.Note} handleClose = {this.handleClose} editorState = {this.state.editorState} applicationID = {this.props.applicationID} type ={this.props.type} companyID = {this.props.companyID}/>\r\n                </div>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ApplicationDetailNotes)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailFollowUp.js",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CharacterMetadata, RichUtils, ContentBlock, genKey, ContentState, EditorState, convertFromRaw, contentBlocks} from 'draft-js';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, getSelection, getCurrentContent, editorState, changeDepth, keyBindingFn} from 'draft-js';\r\n\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './ApplicationDetailNotes.scss'\r\nimport './../ApplicationDetail.scss'\r\n\r\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Moment from 'moment';\r\nimport {connect} from 'react-redux'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport CreateEditConversation from './../../../components/create_edit_components/create_edit_conversation/CreateEditConversation'\r\n\r\nclass ApplicationDetailFollowUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n            show: false,\r\n            editorState : ''\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        const contentBlocksArray = []\r\n        for (var i=0;i<this.props.FollowUp.Description.length;i++){\r\n            if(this.props.FollowUp.Description.length !== 0){\r\n                console.log(\"Was it ever triggerd?\")\r\n                contentBlocksArray.push(\r\n                    new ContentBlock({\r\n                        key: this.props.FollowUp.Description[i].noteContentsID,\r\n                        type: 'unordered-list-item',\r\n                        depth: 0,\r\n                        text: this.props.FollowUp.Description[i].Header\r\n                    })\r\n                )\r\n                for(var j=0;j<this.props.FollowUp.Description[i].Contents_Text.length;j++){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: genKey(),\r\n                            type: 'unordered-list-item',\r\n                            depth: 1,\r\n                            text: this.props.FollowUp.Description[i].Contents_Text[j]\r\n                        })\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            editorState : EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray))\r\n        })\r\n    }\r\n    _handleChange = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n    this.setState({\r\n        show:false\r\n    })\r\n    }\r\n    handleOpen = (e) =>{\r\n    e.preventDefault()\r\n    this.setState({\r\n        show:true\r\n    })\r\n    }\r\n    days_between = (date1) => {\r\n\r\n        // The number of milliseconds in one day\r\n        var date2 = new Date();\r\n        // Convert both dates to milliseconds\r\n\r\n        var Difference_In_Time = date2.getTime() - date1.getTime(); \r\n  \r\n        // To calculate the no. of days between two dates \r\n        var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);   \r\n        // Calculate the difference in milliseconds\r\n\r\n        return Difference_In_Days\r\n    }\r\n      \r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"sypp-ApplicationDetailNote-container\">\r\n            <div onClick = {this.handleOpen}>\r\n                <div className=\"sypp-ApplicationDetailFollowup-title-container\">\r\n                    <div className = \"sypp-applicationDetailTextTitle\">{this.props.FollowUp.Personnel.Name}</div>\r\n                    <div className = \"sypp-applicationDetailTextSubTitle\">{this.props.FollowUp.Personnel.Position}</div>\r\n                    <div className = \"sypp-EventDateTime\">{Moment(this.props.FollowUp.Time).format('MMM DD, YYYY') + \" (\" +(Math.ceil((new Date().getTime() -new Date(this.props.FollowUp.Time).getTime())/(1000*3600*24)))+\" days ago)\" }</div>\r\n                </div>\r\n                    {\r\n                        this.props.FollowUp.Description.map((data) => (\r\n                        <div>\r\n                        <div className = \"sypp-note-text-header\">{' • ' +data.Header}</div>\r\n                        {\r\n                            data.Contents_Text.length != 0 ?  \r\n                            data.Contents_Text.map((subText)=>(\r\n                                <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\r\n                            ))\r\n                            : undefined\r\n                        }\r\n                        </div>\r\n                        ))\r\n                    }\r\n            </div>\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditConversation _handleChange = {this._handleChange} editorState = {this.state.editorState} onSaveConversation = {this.props.onSaveConversation} FollowUp = {this.props.FollowUp} handleClose = {this.handleClose} type ={this.props.type} applicationID = {this.props.applicationID} companyID = {this.props.companyID}/>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(null, null)(ApplicationDetailFollowUp)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_applications\\application_detail\\application_detail_components\\ApplicationDetailContacts.js",["267","268","269"],"import React, {Component, useState} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\nimport './../ApplicationDetail.scss'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport CreateEditContact from './../../../components/create_edit_components/create_edit_contact/CreateEditContact'\r\n// import CreateEditContact from './../../../components/create_edit_components/create_edit_contact/CreateEditContact'\r\n\r\n\r\nclass ApplicationDetailContacts extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            radioValue : '0',\r\n            show : false\r\n        }\r\n    }\r\n\r\n    radioChange = (e) =>{\r\n        this.setState({\r\n            radioValue : e.target.value\r\n        })\r\n    }\r\n\r\n    display = () =>{\r\n        switch(this.state.radioValue) {\r\n            case '0' :\r\n                return(\r\n                    <div className = \"sypp-applicationDetailTextBody\">\r\n                        {this.props.contact.Email.Email}\r\n                    </div>\r\n                )\r\n            case '1' :\r\n                return(\r\n                    <div className = \"sypp-applicationDetailTextBody\">\r\n                        {this.props.contact.Phone.PhoneNumber}\r\n                    </div>\r\n                )\r\n            case '2' :\r\n                return(\r\n                    <div className = \"sypp-applicationDetailTextBody\">\r\n                        {\r\n                        this.props.contact.Convo.map((data) => (\r\n                            <div>\r\n                            <div className = \"sypp-note-text-header\">{' • ' +data.Header}</div>\r\n                            {\r\n                            data.Contents_Text.length != 0 ?  \r\n                                data.Contents_Text.map((subText)=>(\r\n                                <div className = \"sypp-note-text-subText\">{' • ' +subText}</div>\r\n                                ))\r\n                            : undefined\r\n                            }\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n          show:false\r\n        })\r\n      }\r\n    handleOpen = (e) =>{\r\n    e.preventDefault()\r\n    this.setState({\r\n        show:true\r\n    })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className = \"sypp-applicationDetailContactsContainer\"  >\r\n                    <div>\r\n                        <div className = \"sypp-applicationDetailContactsTitle\">\r\n                            <div className = \"sypp-applicationDetailTextTitle\">{this.props.contact.PersonalDetail.Firstname}</div>\r\n                            <div className = \"sypp-applicationDetailTextTitle-body\">{this.props.contact.PersonalDetail.Title}</div>\r\n                        </div>\r\n                        <ButtonGroup toggle className = {this.props.classContainerProps}>\r\n                        {radios.map((radio, idx) => (\r\n                            <div className=\"sypp-button-container-applicationDetail\">\r\n                                <ToggleButton\r\n                                className={\"sypp-applicationDetialButtonGroups sypp-activeChange sypp-hoverChange sypp-text\"}\r\n                                key={idx}\r\n                                type=\"radio\"\r\n                                variant=\"secondary\"\r\n                                name={radio.name}\r\n                                value={radio.value}\r\n                                checked={this.state.radioValue === radio.value}\r\n                                onChange={(e) => this.radioChange(e, this.state.radioValue)}\r\n                                >\r\n                                <div className = \"sypp-radio-button-container-applicationDetail\" name = {radio.name} value = {radio.value}>\r\n                                    {radio.name}\r\n                                </div>\r\n                                </ToggleButton>\r\n                                </div>\r\n                        ))}\r\n                            </ButtonGroup>\r\n                        </div>\r\n                        <div onClick = {this.handleOpen}>\r\n                            {this.display()}\r\n                        </div>\r\n                </div>\r\n            <Modal \r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            centered\r\n            dialogClassName = \"sypp-create-detail-modal sypp-modal-content\"\r\n            className = \"sypp-modal-content\"\r\n            >\r\n                <div className = 'sypp-create-detail-modal-container'>\r\n                    <button className =\"sypp-button-close\" onClick={this.handleClose}>X</button>\r\n                    <CreateEditContact onSaveContactNote = {this.props.onSaveContactNote} Contact = {this.props.contact} handleClose = {this.handleClose} type ={this.props.type} companyID = {this.props.companyID} applicationID = {this.props.applicationID}/>\r\n                </div>\r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null,null)(ApplicationDetailContacts)\r\nconst radios = \r\n        [\r\n            { name: 'a', value: '0' },\r\n            { name: 'b', value: '1' },\r\n            { name: 'c', value: '2' },\r\n        ]","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_contact\\CreateEditContact.js",["270","271","272","273","274","275","276","277"],"import React, {Component} from 'react';\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n\r\n// import {setCompany} from './../../redux/company-reducer/companyAction'\r\n\r\n\r\nimport './../create_edit_event/CreateEvent.scss'\r\nimport './../CreateEditDetail.scss'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        // setCompany : (companies) => dispatch(setCompany(companies)),\r\n    }\r\n  }\r\n\r\n\r\nexport class CreateEditContact extends Component {\r\n    state = {\r\n        type: '',\r\n        contactID : '',\r\n        Firstname : '',\r\n        Title : '',\r\n        Email : '',\r\n        emailID : '',\r\n        PhoneNumber : '',\r\n        phoneID: '',\r\n        editorState : '',\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.Contact !== ''){\r\n            const contentBlocksArray = []\r\n            for (var i=0;i<this.props.Contact.Convo.length;i++){\r\n            if(this.props.Contact.Convo.length !== 0){\r\n                contentBlocksArray.push(\r\n                    new ContentBlock({\r\n                        key: this.props.Contact.Convo[i].noteContentsID,\r\n                        type: 'unordered-list-item',\r\n                        depth: 0,\r\n                        text: this.props.Contact.Convo[i].Header\r\n                      })\r\n                )\r\n                for(var j=0;j<this.props.Contact.Convo[i].Contents_Text.length;j++){\r\n                    contentBlocksArray.push(\r\n                        new ContentBlock({\r\n                            key: genKey(),\r\n                            type: 'unordered-list-item',\r\n                            depth: 1,\r\n                            text: this.props.Contact.Convo[i].Contents_Text[j]\r\n                          })\r\n                    )\r\n                }\r\n            }\r\n        }\r\n            console.log(this.props.Contact)\r\n\r\n            this.setState({\r\n                contactID : this.props.Contact.contactID,\r\n                Firstname : this.props.Contact.PersonalDetail.Firstname,\r\n                Title : this.props.Contact.PersonalDetail.Title,\r\n                Email : this.props.Contact.Email.Email,\r\n                emailID : this.props.Contact.Email.emailID,\r\n                PhoneNumber : this.props.Contact.Phone.PhoneNumber,\r\n                phoneID: this.props.Contact.Phone.phoneID,\r\n                editorState : EditorState.createWithContent(ContentState.createFromBlockArray(contentBlocksArray))\r\n            })\r\n        }\r\n    }\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n\r\n    onSaveButton = () => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n        console.log(this.state.editorState)\r\n        var newNoteContent = []\r\n        if(this.state.editorState !== ''){\r\n        newNoteContent = [{\r\n        noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\r\n        Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\r\n        Contents_Text : []\r\n      }];\r\n      var tracker = 0;\r\n        for(var i=1;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n          if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\r\n            tracker++;\r\n            newNoteContent.push({\r\n              noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n              Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n              Contents_Text : []\r\n            })\r\n          }\r\n          else{\r\n            newNoteContent[tracker].Contents_Text.push(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\r\n          }\r\n        }\r\n        }\r\n\r\n        //Creating a new event\r\n        if(this.state.contactID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    console.log(\"this one is triggeredd...\")\r\n                    apps[i].Contacts.push(  \r\n                        {\r\n                            contactID: key,\r\n                            PersonalDetail: {\r\n                                contactID: key,\r\n                                Title: this.state.Title,\r\n                                Firstname : this.state.Firstname,\r\n                            },\r\n                            Email: {\r\n                                Email: this.state.Email,\r\n                                emailID : genKey()\r\n                            },\r\n                            Phone: {\r\n                                PhoneNumber : this.state.PhoneNumber,\r\n                                phoneID : genKey()\r\n                            },\r\n                            Convo: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.contactID !== '' && this.state.type ==='application'){\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                console.log(\"this one is triggeredd?\")\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].Contacts.length;j++){\r\n                        if(this.props.apps[i].Contacts[j].contactID === this.state.contactID){\r\n                            apps[i].Contacts[j] = {\r\n                                contactID: this.state.contactID,\r\n                                PersonalDetail: {\r\n                                    contactID: this.state.contactID,\r\n                                    Title: this.state.Title,\r\n                                    Firstname : this.state.Firstname,\r\n                                },\r\n                                Email: {\r\n                                    Email: this.state.Email,\r\n                                    emailID : this.state.emailID\r\n                                },\r\n                                Phone: {\r\n                                    PhoneNumber : this.state.PhoneNumber,\r\n                                    phoneID : this.state.phoneID\r\n                                },\r\n                                Convo: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props.onSaveContactNote()\r\n        }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeName = (e) =>{\r\n        this.setState({\r\n            Firstname : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangePosition = (e) =>{\r\n        this.setState({\r\n            Title : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangeEmail = (e) =>{\r\n        this.setState({\r\n            Email : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangePhoneNumber = (e) =>{\r\n        this.setState({\r\n            PhoneNumber : e.currentTarget.value\r\n        })\r\n    }\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      console.log(this.state.editorState)\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({editorState});\r\n      }\r\n    }\r\n\r\n    \r\n    render(){\r\n       return (\r\n        <div>\r\n            <div className = \"sypp-create-edit-detail-container\">\r\n            <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.onChangeName(e)}\r\n                value={this.state.Firstname}\r\n                />\r\n                <input\r\n                className = \"sypp-contact-name-subTitle\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.onChangePosition(e)}\r\n                value={this.state.Title}\r\n                />\r\n             <div className =\"sypp-event-seperateLine\"></div>\r\n            <div className = \"sypp-event-title\">Email</div>\r\n            <input\r\n                className = \"sypp-contact-name-body\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.onChangeEmail(e)}\r\n                value={this.state.Email}\r\n            />\r\n            <div className = \"sypp-event-title\">PhoneNumber</div>\r\n            <input\r\n                className = \"sypp-contact-name-body\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.onChangePhoneNumber(e)}\r\n                value={this.state.PhoneNumber}\r\n            />\r\n            <div className = \"sypp-event-title\">Notes</div>\r\n\r\n            <div style={{overflowY: 'scroll', height: '170px'}}>\r\n                <Editor \r\n                    placeholder = \"      Text Here\"\r\n                    toolbarHidden\r\n                    editorClassName=\"sypp-editor-class\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this._handleChange}\r\n                    keyBindingFn={this.myKeyBindingFn}\r\n                />\r\n            </div>\r\n            </div>\r\n            <div className = \"sypp-event-bottom-options-container\">\r\n                <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSaveButton}>Save</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n            </div>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditContact)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_checklist\\CreateEditChecklist.js",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],"import React, {Component} from 'react';\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n// import {setCompany} from './../../redux/company-reducer/companyAction'\r\nimport './../create_edit_event/CreateEvent.scss'\r\nimport './../CreateEditDetail.scss'\r\n\r\n\r\nimport { faListAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSquare, faCheckSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        // pending: state.progress.isPending,\r\n        // categories: state.categories.categories, \r\n        // companies: state.companies.companies,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        // setCompany : (companies) => dispatch(setCompany(companies)),\r\n\r\n    }\r\n  }\r\n\r\n\r\nexport class CreateEditChecklist extends Component {\r\n    state = {\r\n        type: '',\r\n        checkListsID : '',\r\n        Title : '',\r\n        Time : '',\r\n        editorState : '',\r\n        checkboxState : []\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.Checklist !== ''){\r\n            this.setState({\r\n                checkListsID : this.props.Checklist.checkListsID,\r\n                Title : this.props.Checklist.Detail.Title,\r\n                Time : this.props.Checklist.Detail.Time,\r\n                editorState : this.props.editorState,\r\n                checkboxState : this.props.checkboxState\r\n            })\r\n        }\r\n    }\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n    onSaveButton = () => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n        var newNoteContent = []\r\n        if(this.state.editorState !== ''){\r\n            for(var i=0;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n                newNoteContent.push({\r\n                    checklistID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n                    Type : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n                    Submission : this.state.checkboxState[i].checkboxBoolean,\r\n                    Files : 'null'\r\n                })\r\n            }\r\n        }\r\n        //Creating a new event\r\n        if(this.state.checkListsID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    apps[i].Checklists.push(  \r\n                        {\r\n                            checkListsID: key,\r\n                            Detail: {\r\n                                checkListsID: key,\r\n                                Time: new Date(),\r\n                                Title: this.state.Title\r\n                            },\r\n                            Contents: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.checkListsID !== '' && this.state.type ==='application'){\r\n            this.props.handleCheckbox(this.state.checkboxState)\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                console.log(\"this one is triggeredd?\")\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].Checklists.length;j++){\r\n                        if(this.props.apps[i].Checklists[j].checkListsID === this.state.checkListsID){\r\n                            apps[i].Checklists[j] = {\r\n                                checkListsID: this.state.noteID,\r\n                                Detail: {\r\n                                    checkListsID: this.state.noteID,\r\n                                    Time: new Date(),\r\n                                    Title: this.state.Title \r\n                                },\r\n                                Contents: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props._handleChange(this.state.editorState)\r\n            this.props.onSaveChecklist()\r\n        }\r\n        //company detail fixing part, when it doesnt exist \r\n        else if(this.state.checkListsID === '' && this.state.type ==='company'){\r\n            var companies = this.props.companies\r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    const key = genKey()\r\n                    console.log(\"this one is triggeredd...\")\r\n                    companies[i].Checklists.push(  \r\n                        {\r\n                            checkListsID: key,\r\n                            Detail: {\r\n                                checkListsID: key,\r\n                                Time: new Date(),\r\n                                Title: this.state.Title\r\n                            },\r\n                            Contents: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n        }\r\n        else if(this.state.checkListsID !== '' && this.state.type ==='company'){\r\n            this.props.handleCheckbox(this.state.checkboxState)\r\n            var companies = this.props.companies \r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                console.log(\"this one is triggeredd?\")\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    for(var j=0; j<this.props.companies[i].Checklists.length;j++){\r\n                        if(this.props.companies[i].Checklists[j].checkListsID === this.state.checkListsID){\r\n                            companies[i].Checklists[j] = {\r\n                                checkListsID: this.state.checkListsID,\r\n                                Detail: {\r\n                                    checkListsID: this.state.checkListsID,\r\n                                    Time: new Date(),\r\n                                    Title: this.state.Title\r\n                                },\r\n                                Contents: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n            this.props._handleChange(this.state.editorState)\r\n            this.props.onSaveChecklist()\r\n        }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeTitle = (e) =>{\r\n        this.setState({\r\n            Title : e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    handleEditorState = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    _handleChange = (editorState) => {      \r\n            this.setState({editorState});\r\n            console.log(\"editor state = \")\r\n            if(this.state.editorState!==''){\r\n            if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length > this.state.checkboxState.length){\r\n                var tempCheckbox = \r\n                [\r\n                    ...this.state.checkboxState.slice(0, this.currentBlockIndex()),\r\n                    {\r\n                        checklistID: this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][0],\r\n                        checkboxBoolean: false\r\n                    },\r\n                    ...this.state.checkboxState.slice(this.currentBlockIndex())\r\n                ]\r\n               this.setState({\r\n                checkboxState : tempCheckbox\r\n               })\r\n               console.log(this.state.checkboxState)\r\n            }\r\n            else if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length < this.state.checkboxState.length){\r\n                var tempCheckbox = []\r\n                for(var i = 0; i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n                    for(var j=0;j< this.state.checkboxState.length;j++){\r\n                        if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0]===this.state.checkboxState[j].checklistID){\r\n                            tempCheckbox.push(this.state.checkboxState[j])\r\n                        }\r\n                    }\r\n                }\r\n               this.setState({\r\n                checkboxState : tempCheckbox\r\n               })\r\n            }\r\n        }\r\n            this.setState({})\r\n        }\r\n\r\n    onCheckBoxClick = (checkboxID) => {\r\n        var tempCheckbox = this.state.checkboxState\r\n        for(var i=0;i<this.state.checkboxState.length;i++){\r\n            if(checkboxID === this.state.checkboxState[i].checklistID){\r\n                tempCheckbox[i].checkboxBoolean = !tempCheckbox[i].checkboxBoolean\r\n            }\r\n            this.setState({\r\n                checkboxState : tempCheckbox \r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n       return (\r\n        <div>\r\n            <div className = \"sypp-create-edit-detail-container\">\r\n            <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Checklist Name\"\r\n                onChange={e => this.onChangeTitle(e)}\r\n                value={this.state.Title}\r\n                />\r\n             <div className =\"sypp-event-seperateLine\"></div>\r\n            <div className = \"sypp-ApplicationDetailChecklists-container\" style={{overflowY: 'scroll', height: '340px'}}>\r\n            <div className = \"sypp-CheckList-Container\" style = {{\"height\":\"\"+this.state.checkboxState.length*16.35}}>\r\n            {\r\n                this.state.checkboxState.length === 0 ? \r\n                <div className = \"sypp-emptybody-checkbox-container\">\r\n                    <FormControlLabel \r\n                    className = \"sypp-FormRoot\"\r\n                    control = {\r\n                    <Checkbox \r\n                    icon=  {<FontAwesomeIcon className = \"sypp-CheckBox-icon\" icon={faSquare}/> }\r\n                    checkedIcon= {<FontAwesomeIcon className = \" sypp-checked sypp-emptybody-checkbox\" icon={faCheckSquare}/> }\r\n                    className = \"sypp-Checkbox-padding sypp-Checkbox-padding2\"\r\n                    checked = {true} \r\n                    />}\r\n                    />\r\n                </div>\r\n                :this.state.checkboxState.map((checkbox) => (\r\n                    // <FormGroup row>\r\n                    <FormControlLabel \r\n                    className = \"sypp-FormRoot\"\r\n                    control = {\r\n                    <Checkbox \r\n                    icon=  {<FontAwesomeIcon className = \"sypp-CheckBox-icon\" icon={faSquare}/> }\r\n                    checkedIcon= {<FontAwesomeIcon className = \"sypp-CheckBox-icon sypp-checked\" icon={faCheckSquare}/> }\r\n                    className = \"sypp-Checkbox-padding sypp-Checkbox-padding2\"\r\n                    checked = {checkbox.checkboxBoolean} \r\n                    onChange = {() => this.onCheckBoxClick(checkbox.checklistID)}/>}\r\n                    />\r\n                    // </FormGroup>\r\n                ))\r\n            }\r\n            </div>\r\n            <div className = \"sypp-Editor-Container\">\r\n                <Editor \r\n                toolbarHidden\r\n                editorClassName=\"sypp-editor-class\"\r\n                placeholder = \"Checklist Items\"\r\n                editorState={this.state.editorState}\r\n                onEditorStateChange={this._handleChange}\r\n                //   keyBindingFn={this.myKeyBindingFn}\r\n                />\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className = \"sypp-event-bottom-options-container\">\r\n                <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSaveButton}>Save</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n            </div>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditChecklist)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\CreateEditEvent.js",["295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310"],"import React, {Component} from 'react';\r\nimport EventDetail from './EventDetail'\r\nimport EventSelectDate from './EventSelectDate'\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n// import {setCompany} from './../../redux/company-reducer/companyAction'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n        // companies: state.companies.companies,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        // setCompany : (companies) => dispatch(setCompany(companies)),\r\n        // updateApplicationDetail: (applications) => dispatch(updateApplicationDetail(applications)),\r\n    }\r\n  }\r\n\r\n\r\nexport class CreateEditEvent extends Component {\r\n    state = {\r\n        type: '',\r\n        step: 1,\r\n        eventID : '',\r\n        eventName : '',\r\n        eventLocation :'',\r\n        eventNote : '',\r\n        eventDate : '',\r\n        eventHour : 0,\r\n        eventMinute : 0,\r\n        eventTimeConvert : '',\r\n        editorState : ''\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.Event !== ''){            \r\n            this.setState({\r\n                eventID: this.props.Event.eventID,\r\n                eventName : this.props.Event.Detail.Title,\r\n                eventLocation :this.props.Event.Detail.Location,\r\n                eventNote : '',\r\n                eventDate : this.props.Event.Detail.Time,\r\n                eventHour : 0,\r\n                eventMinute : 0,\r\n                eventTimeConvert : '',\r\n                editorState : this.props.editorState\r\n            })\r\n        }\r\n    }\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n    onSaveButton = (editorState) => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n    var newNoteContent = []\r\n    if(editorState !== ''){\r\n        newNoteContent = [{\r\n        eventContentsID : editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\r\n        Header : editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\r\n        Contents_Text : []\r\n      }];\r\n      var tracker = 0;\r\n        for(var i=1;i<editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n          if(editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\r\n            tracker++;\r\n            newNoteContent.push({\r\n              eventContentsID : editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n              Header : editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n              Contents_Text : []\r\n            })\r\n          }\r\n          else{\r\n            newNoteContent[tracker].Contents_Text.push(editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\r\n          }\r\n        }\r\n    }\r\n        //Creating a new event\r\n        if(this.state.eventID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    apps[i].Events.push(  \r\n                        {\r\n                            eventID: key,\r\n                            Detail: {\r\n                                eventID: key,\r\n                                applicationID: this.props.applicationID,\r\n                                Time: this.state.eventDate,\r\n                                Location: this.state.eventLocation,\r\n                                Title: this.state.eventName\r\n                            },\r\n                            Contents: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.eventID !== '' && this.state.type ==='application'){\r\n            console.log(this.state.eventID)\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].Events.length;j++){\r\n                        if(this.props.apps[i].Events[j].eventID === this.state.eventID){\r\n                            console.log(\"this one is triggeredd?\")\r\n                            apps[i].Events[j] = {\r\n                                eventID: this.state.eventID,\r\n                                Detail: {\r\n                                    eventID: this.state.eventID,\r\n                                    applicationID: this.props.applicationID,\r\n                                    Time: this.state.eventDate,\r\n                                    Location: this.state.eventLocation,\r\n                                    Title: this.state.eventName\r\n                                },\r\n                                Contents: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props.onSaveEventNote()\r\n            this.props._handleChange(editorState)\r\n\r\n        }\r\n        else if(this.state.eventID === '' && this.state.type ==='company'){\r\n            var companies = this.props.companies\r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    const key = genKey()\r\n                    companies[i].Events.push(  \r\n                        {\r\n                            eventID: key,\r\n                            Detail: {\r\n                                eventID: key,\r\n                                applicationID: this.props.companyID,\r\n                                Time: this.state.eventDate,\r\n                                Location: this.state.eventLocation,\r\n                                Title: this.state.eventName\r\n                            },\r\n                            Contents: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.onSaveEventNote()\r\n            this.props.setCompany(companies)\r\n            this.setState({})\r\n        }\r\n        else if(this.state.eventID !== '' && this.state.type ==='company'){\r\n            console.log(this.state.eventID)\r\n            var companies = this.props.companies \r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    for(var j=0; j<this.props.companies[i].Events.length;j++){\r\n                        if(this.props.companies[i].Events[j].eventID === this.state.eventID){\r\n                            console.log(\"this one is triggeredd?\")\r\n                            companies[i].Events[j] = {\r\n                                eventID: this.state.eventID,\r\n                                Detail: {\r\n                                    eventID: this.state.eventID,\r\n                                    applicationID: this.props.companyID,\r\n                                    Time: this.state.eventDate,\r\n                                    Location: this.state.eventLocation,\r\n                                    Title: this.state.eventName\r\n                                },\r\n                                Contents: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n            this.props.onSaveEventNote()\r\n            this.props._handleChange(editorState)\r\n            this.setState({})\r\n        }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeName = (e) =>{\r\n        this.setState({\r\n            eventName : e.currentTarget.value\r\n        })\r\n        console.log(this.state.eventName)\r\n    }\r\n    onChangeLocation = (e) =>{\r\n        this.setState({\r\n            eventLocation : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangeDate = (date) =>{\r\n        this.setState({\r\n            eventDate : date\r\n        })\r\n        console.log(date)\r\n    }\r\n    onChangeHour = (hour) =>{\r\n        this.setState({\r\n            eventHour : hour\r\n        })\r\n    }\r\n    onChangeMinute = (minute) =>{\r\n        this.setState({\r\n            eventMinute : minute\r\n        })\r\n    }\r\n    nextStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n    prevStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    handleEditorState = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    render(){\r\n        const{step} = this.state;\r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <div>\r\n                        <EventDetail \r\n                            nextStep = {this.nextStep}\r\n                            eventName = {this.state.eventName}\r\n                            onChangeName = {this.onChangeName}\r\n                            eventLocation = {this.state.eventLocation}\r\n                            onChangeLocation = {this.onChangeLocation}\r\n                            handleClose = {this.props.handleClose}\r\n                            eventDate = {this.state.eventDate}\r\n                            editorState = {this.props.editorState}\r\n                            handleEditorState = {this.handleEditorState}\r\n                            onSaveButton = {this.onSaveButton}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div>\r\n                        <EventSelectDate\r\n                        prevStep = {this.prevStep}\r\n                        onChangeDate = {this.onChangeDate}\r\n                        onChangeHour = {this.onChangeHour}\r\n                        onChangeMinute = {this.onChangeMinute}\r\n                        handleClose = {this.props.handleClose}\r\n                        eventDate = {this.state.eventDate}\r\n                        eventHour = {this.state.eventHour}\r\n                        eventMinute = {this.state.eventMinute}\r\n                        />\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditEvent)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\EventSelectDate.js",["311","312","313","314"],"import React, {Component} from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport CalendarComponent from './../../calendar/CalendarComponent';\r\n// import { Dropdown } from 'semantic-ui-react'\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport './CreateEvent.scss'\r\nimport { min } from 'moment';\r\n\r\nclass EventSelectDate extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            visible : true,\r\n            hourDropDown: false,\r\n            minuteDropDown: false,\r\n            hour : '',\r\n            minute : '',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.eventHour != 0){\r\n            this.setState({\r\n                hour : this.props.eventHour\r\n            })\r\n        }\r\n        if(this.props.eventMinute != 0){\r\n            this.setState({\r\n                minute : this.props.eventMinute\r\n            })\r\n        }\r\n    }\r\n\r\n    expandCalendar = () =>{\r\n        this.setState({\r\n            visible : true,\r\n            hourDropDown : false,\r\n            minuteDropDown: false,\r\n        })\r\n    }\r\n    onClickDropDownHour = () =>{\r\n        this.setState({\r\n            visible : false\r\n        })\r\n        if(!this.state.hourDropDown){\r\n        this.setState({\r\n            hourDropDown : true,\r\n        })\r\n        }\r\n        else{\r\n            this.setState({\r\n                hourDropDown : false,\r\n            })\r\n        }\r\n    }\r\n    onClickDropDownMin = () =>{\r\n        this.setState({\r\n            visible : false\r\n        })\r\n        if(!this.state.minuteDropDown){\r\n        this.setState({\r\n            minuteDropDown : true,\r\n        })\r\n        }\r\n        else{\r\n            this.setState({\r\n                minuteDropDown : false,\r\n            })\r\n        }\r\n    }\r\n    onSelectHour = (e) =>{\r\n        console.log('triggered?')\r\n        this.setState({\r\n            hour: e.target.getAttribute('value')\r\n        })\r\n    }\r\n    onSelectMin = (e) =>{\r\n        console.log('triggered?')\r\n        this.setState({\r\n            minute: e.target.getAttribute('value')\r\n        })\r\n    }\r\n    onChangeTime = (e) => {\r\n        this.setState({\r\n            hour : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangeMinute = (e) => {\r\n        this.setState({\r\n            minute : e.currentTarget.value\r\n        })\r\n    }\r\n    onClickSelectDate = () => {\r\n        var hour = this.state.hour\r\n        var minute = this.state.minute\r\n        if(this.state.hour === ''){\r\n            hour = 0\r\n        }\r\n        if(this.state.minute === ''){\r\n            minute = 0\r\n        }\r\n        var date = this.props.eventDate;\r\n        if(this.props.eventDate === ''){\r\n            date = new Date()\r\n        }\r\n        date.setHours(hour);\r\n        date.setMinutes(minute)\r\n        const time = hour +\":\"+ minute\r\n        console.log(time)\r\n        this.props.onChangeHour(this.state.hour)\r\n        this.props.onChangeMinute(this.state.minute)\r\n        this.props.onChangeDate(date)\r\n        this.props.prevStep();\r\n    }\r\n    onClickRemoveSelection = () => {\r\n        this.setState({\r\n            hour:'',\r\n            minute: ''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className = \"sypp-event-date-title\">Date</div>\r\n                <div className = \"sypp-event-calendar\">\r\n                {this.state.visible?<CalendarComponent calendarChange = {this.props.onChangeDate}/> : <div className = \"sypp-event-calendar-collapsed\" onClick = {this.expandCalendar}>...</div> }\r\n                </div>\r\n                <div className = \"sypp-event-date-title2\">Time</div>\r\n                <div  className = \"sypp-time-container\">\r\n                <div className = \"sypp-time-hour-container\">\r\n                    <input placeholder = \"HH\" value = {this.state.hour} className = \"sypp-time-inputfield\" onChange = {e => this.onChangeTime(e)}/> \r\n                    {/* <button onClick = {this.onClickDropDownHour}>D</button> */}\r\n                    <FontAwesomeIcon className =\"sypp-event-dropdown-button\" icon={faCaretUp} onClick = {this.onClickDropDownHour}/>  \r\n                    {this.state.hourDropDown? \r\n                        <div className = \"sypp-dropdown-container\" style={{overflowY: 'scroll', height: '200px'}}>\r\n                        {(hour.map((data) => (\r\n                        <button className = \"sypp-timepicking-button\" onClick = {e => this.onSelectHour(e)} value = {data.value}> {data.text} </button>\r\n                        )))}\r\n                        </div> :undefined\r\n                    }\r\n                    </div>\r\n                    <div>\r\n                    <input placeholder = \"MM\" value = {this.state.minute} className = \"sypp-time-inputfield\" onChange = {e => this.onChangeMinute(e)}/> \r\n                    {/* <button onClick = {this.onClickDropDownMin}>D</button> */}\r\n                    <FontAwesomeIcon className =\"sypp-event-dropdown-button\" icon={faCaretUp} onClick = {this.onClickDropDownMin}/>  \r\n\r\n                    {this.state.minuteDropDown? \r\n                        <div className = \"sypp-dropdown-container\" style={{overflowY: 'scroll', height: '200px'}}>\r\n                        {(minute.map((data) => (\r\n                        <button className = \"sypp-timepicking-button\" onClick = {e => this.onSelectMin(e)} value = {data.value}> {data.text} </button>\r\n                        )))}\r\n                        </div> :undefined\r\n                    }\r\n                    </div>\r\n                </div>\r\n                <div className = \"sypp-event-bottom-options-container\">\r\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page2\" onClick = {this.onClickRemoveSelection}>\r\n                        Remove Selection\r\n                    </button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page2\" onClick = {this.onClickSelectDate}>\r\n                        {\"Select Date & Time\"}\r\n                    </button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page2\" onClick = {e => this.props.handleClose()}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EventSelectDate\r\n\r\nconst hour = [\r\n    {\r\n    key: '0',\r\n    text: '0',\r\n    value: '0',\r\n    },\r\n    {\r\n    key: '1',\r\n    text: '1',\r\n    value: '1',\r\n    },\r\n    {\r\n    key: '2',\r\n    text: '2',\r\n    value: '2',\r\n    },\r\n    {\r\n    key: '3',\r\n    text: '3',\r\n    value: '3',\r\n    },\r\n    {\r\n    key: '4',\r\n    text: '4',\r\n    value: '4',\r\n    },\r\n    {\r\n    key: '5',\r\n    text: '5',\r\n    value: '5',\r\n    },\r\n    {\r\n    key: '6',\r\n    text: '6',\r\n    value: '6',\r\n    },\r\n    {\r\n    key: '7',\r\n    text: '7',\r\n    value: '7',\r\n    },\r\n    {\r\n    key: '8',\r\n    text: '8',\r\n    value: '8',\r\n    },\r\n    {\r\n    key: '9',\r\n    text: '9',\r\n    value: '9',\r\n    },\r\n    {\r\n    key: '10',\r\n    text: '10',\r\n    value: '0',\r\n    },\r\n    {\r\n    key: '11',\r\n    text: '11',\r\n    value: '11',\r\n    },\r\n    {\r\n    key: '12',\r\n    text: '12',\r\n    value: '12',\r\n    },\r\n    {\r\n    key: '13',\r\n    text: '13',\r\n    value: '13',\r\n    },\r\n    {\r\n    key: '14',\r\n    text: '14',\r\n    value: '14',\r\n    },\r\n    {\r\n    key: '15',\r\n    text: '15',\r\n    value: '15',\r\n    },\r\n    {\r\n    key: '16',\r\n    text: '16',\r\n    value: '16',\r\n    },\r\n    {\r\n    key: '17',\r\n    text: '17',\r\n    value: '17',\r\n    },\r\n    {\r\n    key: '18',\r\n    text: '18',\r\n    value: '18',\r\n    },\r\n    {\r\n    key: '19',\r\n    text: '19',\r\n    value: '19',\r\n    },\r\n    {\r\n    key: '20',\r\n    text: '20',\r\n    value: '20',\r\n    },\r\n    {\r\n    key: '21',\r\n    text: '21',\r\n    value: '21',\r\n    },\r\n    {\r\n    key: '22',\r\n    text: '22',\r\n    value: '22',\r\n    },\r\n    {\r\n    key: '23',\r\n    text: '23',\r\n    value: '23',\r\n    },\r\n    {\r\n    key: '24',\r\n    text: '24',\r\n    value: '24',\r\n    },\r\n]\r\n\r\nconst minute = [\r\n    {\r\n    key: '0',\r\n    text: '0',\r\n    value: '0',\r\n    },\r\n    {\r\n    key: '1',\r\n    text: '1',\r\n    value: '1',\r\n    },\r\n    {\r\n    key: '2',\r\n    text: '2',\r\n    value: '2',\r\n    },\r\n    {\r\n    key: '3',\r\n    text: '3',\r\n    value: '3',\r\n    },\r\n    {\r\n    key: '4',\r\n    text: '4',\r\n    value: '4',\r\n    },\r\n    {\r\n    key: '5',\r\n    text: '5',\r\n    value: '5',\r\n    },\r\n    {\r\n    key: '6',\r\n    text: '6',\r\n    value: '6',\r\n    },\r\n    {\r\n    key: '7',\r\n    text: '7',\r\n    value: '7',\r\n    },\r\n    {\r\n    key: '8',\r\n    text: '8',\r\n    value: '8',\r\n    },\r\n    {\r\n    key: '9',\r\n    text: '9',\r\n    value: '9',\r\n    },\r\n    {\r\n    key: '10',\r\n    text: '10',\r\n    value: '10',\r\n    },\r\n    {\r\n    key: '11',\r\n    text: '11',\r\n    value: '11',\r\n    },\r\n    {\r\n    key: '12',\r\n    text: '12',\r\n    value: '12',\r\n    },\r\n    {\r\n    key: '13',\r\n    text: '13',\r\n    value: '13',\r\n    },\r\n    {\r\n    key: '14',\r\n    text: '14',\r\n    value: '14',\r\n    },\r\n    {\r\n    key: '15',\r\n    text: '15',\r\n    value: '15',\r\n    },\r\n    {\r\n    key: '16',\r\n    text: '16',\r\n    value: '16',\r\n    },\r\n    {\r\n    key: '17',\r\n    text: '17',\r\n    value: '17',\r\n    },\r\n    {\r\n    key: '18',\r\n    text: '18',\r\n    value: '18',\r\n    },\r\n    {\r\n    key: '19',\r\n    text: '19',\r\n    value: '19',\r\n    },\r\n    {\r\n    key: '20',\r\n    text: '20',\r\n    value: '20',\r\n    },\r\n    {\r\n    key: '21',\r\n    text: '21',\r\n    value: '21',\r\n    },\r\n    {\r\n    key: '22',\r\n    text: '22',\r\n    value: '22',\r\n    },\r\n    {\r\n    key: '23',\r\n    text: '23',\r\n    value: '23',\r\n    },\r\n    {\r\n    key: '24',\r\n    text: '24',\r\n    value: '24',\r\n    },\r\n    {\r\n    key: '25',\r\n    text: '25',\r\n    value: '25',\r\n    },\r\n    {\r\n    key: '26',\r\n    text: '26',\r\n    value: '26',\r\n    },\r\n    {\r\n    key: '27',\r\n    text: '27',\r\n    value: '27',\r\n    },\r\n    {\r\n    key: '28',\r\n    text: '28',\r\n    value: '28',\r\n    },\r\n    {\r\n    key: '29',\r\n    text: '29',\r\n    value: '29',\r\n    },\r\n    {\r\n    key: '30',\r\n    text: '30',\r\n    value: '30',\r\n    },\r\n    {\r\n    key: '31',\r\n    text: '31',\r\n    value: '31',\r\n    },\r\n    {\r\n    key: '32',\r\n    text: '32',\r\n    value: '32',\r\n    },\r\n    {\r\n    key: '33',\r\n    text: '33',\r\n    value: '33',\r\n    },\r\n    {\r\n    key: '34',\r\n    text: '34',\r\n    value: '34',\r\n    },\r\n    {\r\n    key: '35',\r\n    text: '35',\r\n    value: '35',\r\n    },\r\n    {\r\n    key: '35',\r\n    text: '36',\r\n    value: '36',\r\n    },\r\n    {\r\n    key: '37',\r\n    text: '37',\r\n    value: '37',\r\n    },\r\n    {\r\n    key: '38',\r\n    text: '38',\r\n    value: '38',\r\n    },\r\n    {\r\n    key: '39',\r\n    text: '39',\r\n    value: '39',\r\n    },\r\n    {\r\n    key: '40',\r\n    text: '40',\r\n    value: '40',\r\n    },\r\n    {\r\n    key: '41',\r\n    text: '41',\r\n    value: '41',\r\n    },\r\n    {\r\n    key: '42',\r\n    text: '42',\r\n    value: '42',\r\n    },\r\n    {\r\n    key: '43',\r\n    text: '43',\r\n    value: '43',\r\n    },\r\n    {\r\n    key: '44',\r\n    text: '44',\r\n    value: '44',\r\n    },\r\n    {\r\n    key: '45',\r\n    text: '45',\r\n    value: '45',\r\n    },\r\n    {\r\n    key: '46',\r\n    text: '46',\r\n    value: '46',\r\n    },\r\n    {\r\n    key: '47',\r\n    text: '47',\r\n    value: '47',\r\n    },\r\n    {\r\n    key: '48',\r\n    text: '48',\r\n    value: '48',\r\n    },\r\n    {\r\n    key: '49',\r\n    text: '49',\r\n    value: '49',\r\n    },\r\n    {\r\n    key: '50',\r\n    text: '50',\r\n    value: '50',\r\n    },\r\n    {\r\n    key: '51',\r\n    text: '51',\r\n    value: '51',\r\n    },\r\n    {\r\n    key: '52',\r\n    text: '52',\r\n    value: '52',\r\n    },\r\n    {\r\n    key: '53',\r\n    text: '53',\r\n    value: '53',\r\n    },\r\n    {\r\n    key: '54',\r\n    text: '54',\r\n    value: '54',\r\n    },\r\n    {\r\n    key: '55',\r\n    text: '55',\r\n    value: '55',\r\n    },\r\n    {\r\n    key: '56',\r\n    text: '56',\r\n    value: '56',\r\n    },\r\n    {\r\n    key: '57',\r\n    text: '57',\r\n    value: '57',\r\n    },\r\n    {\r\n    key: '58',\r\n    text: '58',\r\n    value: '58',\r\n    },\r\n    {\r\n    key: '59',\r\n    text: '59',\r\n    value: '59',\r\n    },\r\n    {\r\n    key: '60',\r\n    text: '60',\r\n    value: '60',\r\n    },\r\n]","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_event\\EventDetail.js",["315","316","317","318","319","320","321","322"],"import React, {Component} from 'react';\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\nimport Moment from 'moment';\r\n\r\n\r\nclass EventDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n          editorState: ''\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.editorState !== ''){\r\n            this.setState({\r\n                editorState : this.props.editorState\r\n            })\r\n        }\r\n    }\r\n    onSave = () =>{\r\n      this.props.handleEditorState(this.state.editorState);\r\n      this.props.onSaveButton(this.state.editorState);\r\n      console.log(this.state.editorState)\r\n    }\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      console.log(this.state.editorState)\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({editorState});\r\n      }\r\n    }\r\n    render(){\r\n        return(\r\n            <div >\r\n                <div className = \"sypp-event-detail-container\">\r\n                <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Event Name Here\"\r\n                onChange={e => this.props.onChangeName(e)}\r\n                value={this.props.eventName}\r\n                />\r\n                <div className =\"sypp-event-seperateLine\"></div>\r\n                <div className = \"sypp-event-title\">Date and Time</div>\r\n                {this.props.eventDate === ''?                 \r\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\r\n                    Select Date and Time\r\n                </button>:\r\n                <div className = \"sypp-event-datepick-resultDate-container\">\r\n                <div className = \"sypp-event-datepick-resultDate\">{Moment(this.props.eventDate).format('MMM DD, YYYY • h:mma')}</div>\r\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\r\n                Edit Date and Time\r\n                </button>\r\n                </div>\r\n                }\r\n                <div className = \"sypp-event-title\">Location</div>                \r\n                <input\r\n                className = \"sypp-event-location\"\r\n                placeholder=\"Location Here\"\r\n                onChange={e => this.props.onChangeLocation(e)}\r\n                value={this.props.eventLocation}\r\n                />  \r\n                <div className =\"sypp-event-seperateLine\"></div>\r\n\r\n                <div className = \"sypp-event-title\">Note</div>    \r\n                <div style={{overflowY: 'scroll', height: '165px'}}>            \r\n                <Editor \r\n                  placeholder = \"      Text Here\"\r\n                  toolbarHidden\r\n                  editorClassName=\"sypp-editor-class\"\r\n                  editorState={this.state.editorState}\r\n                  onEditorStateChange={this._handleChange}\r\n                  keyBindingFn={this.myKeyBindingFn}\r\n                />\r\n                </div>\r\n                </div>\r\n                <div className = \"sypp-event-bottom-options-container\">\r\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSave}>Save</button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EventDetail","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\CreateEditConversation.js",["323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"import React, {Component} from 'react';\r\nimport ConversationDetail from './ConversationDetail'\r\nimport ConversationDate from './ConversationDate'\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n\r\n// import {setCompany} from '../../redux/company-reducer/companyAction'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,\r\n    \r\n        // companies: state.companies.companies,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        // setCompany : (companies) => dispatch(setCompany(companies)),\r\n        // updateApplicationDetail: (applications) => dispatch(updateApplicationDetail(applications)),\r\n    }\r\n  }\r\nexport class CreateEditConversation extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = \r\n        {\r\n            step : 1,\r\n            type: '',\r\n            followUpID : '',\r\n            time : '',\r\n            name : '',\r\n            position : '',\r\n            editorState : ''\r\n        }\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.FollowUp !== ''){\r\n            this.setState({\r\n                followUpID : this.props.FollowUp.followUpID,\r\n                name : this.props.FollowUp.Personnel.Name,\r\n                time : this.props.FollowUp.Time,\r\n                position : this.props.FollowUp.Personnel.Position,\r\n                editorState : this.props.editorState\r\n            })\r\n        }\r\n}\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n    onSaveButton = () => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n    var newNoteContent = []\r\n    if(this.state.editorState !== ''){\r\n        newNoteContent = [{\r\n        noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\r\n        Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\r\n        Contents_Text : []\r\n      }];\r\n      var tracker = 0;\r\n        for(var i=1;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n          if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\r\n            tracker++;\r\n            newNoteContent.push({\r\n            noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n              Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n              Contents_Text : []\r\n            })\r\n          }\r\n          else{\r\n            newNoteContent[tracker].Contents_Text.push(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\r\n          }\r\n        }\r\n    }\r\n        //Creating a new event\r\n        if(this.state.followUpID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    apps[i].FollowUps.push(  \r\n                        {\r\n                            followUpID : key,\r\n                            Time : this.state.time,\r\n                            Personnel: {\r\n                                followUpID : key,\r\n                                Name: this.state.name,\r\n                                Position: this.state.position,\r\n                            },\r\n                            Description: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.followUpID !== '' && this.state.type ==='application'){\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].FollowUps.length;j++){\r\n                        if(this.props.apps[i].FollowUps[j].followUpID === this.state.followUpID){\r\n                            console.log(\"this one is triggeredd?\")\r\n                            apps[i].FollowUps[j] = {\r\n                                followUpID: this.state.followUpID,\r\n                                Time : this.state.time,\r\n                                    Personnel: {\r\n                                        followUpID : this.state.followUpID,\r\n                                        Name: this.state.name,\r\n                                        Position: this.state.position,\r\n                                    },\r\n                                Description: newNoteContent\r\n                                }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props.onSaveConversation()\r\n            this.props._handleChange(this.state.editorState)\r\n            this.setState({})\r\n        }\r\n        else if(this.state.followUpID === '' && this.state.type ==='company'){\r\n            var companies = this.props.companies\r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    const key = genKey()\r\n                    companies[i].FollowUps.push(  \r\n                        {\r\n                            followUpID : key,\r\n                            Time : this.state.time,\r\n                            Personnel: {\r\n                                followUpID : key,\r\n                                Name: this.state.name,\r\n                                Position: this.state.position,\r\n                            },\r\n                            Description: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n            this.setState({})\r\n        }\r\n        else if(this.state.followUpID !== '' && this.state.type ==='company'){\r\n            console.log(this.state.eventID)\r\n            var companies = this.props.companies \r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    for(var j=0; j<this.props.companies[i].FollowUps.length;j++){\r\n                        if(this.props.companies[i].FollowUps[j].followUpID === this.state.followUpID){\r\n                            console.log(\"this one is triggeredd?\")\r\n                            companies[i].FollowUps[j] = {\r\n                                followUpID : this.state.followUpID,\r\n                                Time : this.state.time,\r\n                                Personnel: {\r\n                                    followUpID : this.state.followUpID,\r\n                                    Name: this.state.name,\r\n                                    Position: this.state.position,\r\n                                },\r\n                                Description: newNoteContent\r\n                                }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n            this.props.onSaveConversation()\r\n            this.props._handleChange(this.state.editorState)\r\n            this.setState({})\r\n        }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeName = (e) =>{\r\n        this.setState({\r\n            name : e.currentTarget.value\r\n        })\r\n        console.log(this.state.eventName)\r\n    }\r\n    onChangePosition = (e) =>{\r\n        this.setState({\r\n            position : e.currentTarget.value\r\n        })\r\n    }\r\n    onChangeDate = (date) =>{\r\n        this.setState({\r\n            time : date\r\n        })\r\n    }\r\n    nextStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n    prevStep = () =>{\r\n        const {step}  = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    handleEditorState = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const{step} = this.state;\r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <div>\r\n                        <ConversationDetail \r\n                            nextStep = {this.nextStep}\r\n                            name = {this.state.name}\r\n                            onChangeName = {this.onChangeName}\r\n                            position = {this.state.position}\r\n                            onChangePosition = {this.onChangePosition}\r\n                            handleClose = {this.props.handleClose}\r\n                            time = {this.state.time}\r\n                            editorState = {this.props.editorState}\r\n                            handleEditorState = {this.handleEditorState}\r\n                            onSaveButton = {this.onSaveButton}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div>\r\n                        <ConversationDate\r\n                        prevStep = {this.prevStep}\r\n                        onChangeDate = {this.onChangeDate}\r\n                        handleClose = {this.props.handleClose}\r\n                        time = {this.state.time}\r\n                        />\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditConversation)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\ConversationDetail.js",["339","340","341","342","343","344","345","346"],"import React, {Component} from 'react';\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\nimport Moment from 'moment';\r\n\r\n\r\nclass ConversationDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n          editorState: ''\r\n        };\r\n    }\r\n    componentDidMount(){\r\n      console.log(\"previous editor State???\")\r\n      console.log(this.props.editorState)\r\n        if(this.props.editorState !== ''){\r\n            this.setState({\r\n                editorState : this.props.editorState\r\n            })\r\n        }\r\n    }\r\n\r\n    onSave = () =>{\r\n      this.props.onSaveButton(this.state.editorState);\r\n    }\r\n\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    \r\n    _handleChange = (editorState) => {\r\n      console.log(this.state.editorState)\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({editorState});\r\n      }\r\n      this.props.handleEditorState(this.state.editorState);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div >\r\n                <div className = \"sypp-event-detail-container\">\r\n                <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Contact Name Here\"\r\n                onChange={e => this.props.onChangeName(e)}\r\n                value={this.props.name}\r\n                />\r\n                <input\r\n                className = \"sypp-contact-name-subTitle\"\r\n                placeholder=\"Contact Position Here\"\r\n                onChange={e => this.props.onChangePosition(e)}\r\n                value={this.props.position}\r\n                />\r\n                <div className =\"sypp-event-seperateLine\"></div>\r\n                <div className = \"sypp-event-title\">Conversation Date</div>\r\n                {this.props.time === ''?                 \r\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\r\n                    Select Date\r\n                </button>:\r\n                <div className = \"sypp-event-datepick-resultDate-container\">\r\n                <div className = \"sypp-event-datepick-resultDate\">{Moment(this.props.time).format('MMM DD, YYYY • h:mma')}</div>\r\n                <button className = \"sypp-event-datePick-button\" onClick = {this.props.nextStep}>\r\n                Edit Date\r\n                </button>\r\n                </div>\r\n                }\r\n                <div className =\"sypp-event-seperateLine\"></div>\r\n\r\n                <div className = \"sypp-event-title\">Note</div>  \r\n                <div style={{overflowY: 'scroll', height: '200px'}}>\r\n                  <Editor \r\n                  placeholder = \"      Text Here\"\r\n                  toolbarHidden\r\n                  editorClassName=\"sypp-editor-class\"\r\n                  editorState={this.state.editorState}\r\n                  onEditorStateChange={this._handleChange}\r\n                  keyBindingFn={this.myKeyBindingFn}\r\n                  />\r\n                </div>\r\n                </div>\r\n                <div className = \"sypp-event-bottom-options-container\">\r\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSave}>Save</button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ConversationDetail","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_conversation\\ConversationDate.js",["347","348","349","350"],"import React, {Component} from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport CalendarComponent from './../../calendar/CalendarComponent';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport './CreateEditConversation.scss'\r\nimport { min } from 'moment';\r\n\r\nclass ConversationDate extends Component {\r\n\r\n    onClickRemoveSelection = () => {\r\n        this.setState({})\r\n        this.props.onChangeDate(new Date())\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className = \"sypp-event-date-title\">Date</div>\r\n                <div className = \"sypp-event-calendar\">\r\n                <CalendarComponent calendarChange = {this.props.onChangeDate}/> \r\n                </div>\r\n                <div className = \"sypp-event-bottom-options-container\">\r\n                    <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page2\" onClick = {this.onClickRemoveSelection}>\r\n                        Remove Date\r\n                    </button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page2\" onClick = {this.props.prevStep}>\r\n                        {\"Select Date\"}\r\n                    </button>\r\n                    <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page2\" onClick = {this.props.handleClose}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ConversationDate","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\components\\create_edit_components\\create_edit_note\\CreateEditNote.js",["351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"import React, {Component} from 'react';\r\n\r\nimport { RichUtils, ContentBlock, genKey, ContentState, EditorState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {getDefaultKeyBinding, KeyBindingUtil, keyBindingFn} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {connect} from 'react-redux'\r\nimport {setApps} from './../../../redux/application-reducer/applicationAction'\r\n// import {setCompany} from './../../redux/company-reducer/companyAction'\r\n\r\nimport '../create_edit_event/CreateEvent.scss'\r\nimport '../CreateEditDetail.scss'\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        apps: state.application.applications,       \r\n        // companies: state.companies.companies,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps= dispatch =>{\r\n    return {\r\n        setApps : (applications) => dispatch(setApps(applications)),\r\n        // setCompany : (companies) => dispatch(setCompany(companies)),\r\n    }\r\n  }\r\n\r\n\r\nexport class CreateEditNote extends Component {\r\n    state = {\r\n        type: '',\r\n        noteID : '',\r\n        noteDate : new Date(),\r\n        noteName : '',\r\n        editorState : ''\r\n    }\r\n\r\n    //componentDidMount will determine if this is a new Event\r\n    //if this is not a new event, will call exisitng features and save them to the state\r\n    componentDidMount(){\r\n        this.setState({\r\n            type : this.props.type\r\n        })\r\n        if(this.props.Note !== ''){\r\n            this.setState({\r\n                noteID: this.props.Note.noteID,\r\n                noteName : this.props.Note.Detail.Title,\r\n                noteDate : this.props.Note.Detail.Time,\r\n                editorState : this.props.editorState\r\n            })\r\n        }\r\n    }\r\n\r\n//API CALL HERE\r\n// //Send Post request, close modal(save button)\r\n\r\n    onSaveButton = () => {\r\n        // this.props.postNewApp(this.props.addApp)\r\n        var newNoteContent = []\r\n        if(this.state.editorState !== ''){\r\n            var newNoteContent = [{\r\n            noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][0],\r\n            Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[0][1].text,\r\n            Contents_Text : []\r\n        }];\r\n            var tracker = 0;\r\n            for(var i=1;i<this.state.editorState._immutable.currentContent.blockMap._list._tail.array.length;i++){\r\n                if(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].depth === 0){\r\n                    tracker++;\r\n                    newNoteContent.push({\r\n                    noteContentsID : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][0],\r\n                    Header : this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text,\r\n                    Contents_Text : []\r\n                    })\r\n                }\r\n                else{\r\n                    newNoteContent[tracker].Contents_Text.push(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[i][1].text)\r\n                }\r\n            }\r\n        }\r\n\r\n        //Creating a new event\r\n        if(this.state.noteID === '' && this.state.type ==='application'){\r\n            var apps = this.props.apps\r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    const key = genKey()\r\n                    apps[i].Notes.push(  \r\n                        {\r\n                            noteID: key,\r\n                            Detail: {\r\n                                noteID: key,\r\n                                Time: this.state.noteDate,\r\n                                Title: this.state.noteName\r\n                            },\r\n                            Contents: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n        }\r\n        //editing an existing event, app\r\n        else if(this.state.noteID !== '' && this.state.type ==='application'){\r\n            var apps = this.props.apps \r\n            for(var i=0;i<this.props.apps.length;i++){\r\n                console.log(\"this one is triggeredd?\")\r\n                if(this.props.apps[i].applicationID === this.props.applicationID){\r\n                    for(var j=0; j<this.props.apps[i].Notes.length;j++){\r\n                        if(this.props.apps[i].Notes[j].noteID === this.state.noteID){\r\n                            apps[i].Notes[j] = {\r\n                                noteID: this.state.noteID,\r\n                                Detail: {\r\n                                    noteID: this.state.noteID,\r\n                                    Time: this.state.noteDate,\r\n                                    Title: this.state.noteName\r\n                                },\r\n                                Contents: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props.setApps(apps)\r\n            this.props._handleChange(this.state.editorState)\r\n            this.props.onSaveNote()\r\n        }\r\n        //company detail fixing part, when it doesnt exist \r\n        else if(this.state.noteID === '' && this.state.type ==='company'){\r\n            var companies = this.props.companies\r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    const key = genKey()\r\n                    console.log(\"this one is triggeredd...\")\r\n                    companies[i].Notes.push(  \r\n                        {\r\n                            noteID: key,\r\n                            Detail: {\r\n                                noteID: key,\r\n                                Time: this.state.noteDate,\r\n                                Title: this.state.noteName\r\n                            },\r\n                            Contents: newNoteContent\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n            this.props.setCompany(companies)\r\n        }\r\n        else if(this.state.noteID !== '' && this.state.type ==='company'){\r\n            var companies = this.props.companies \r\n            for(var i=0;i<this.props.companies.length;i++){\r\n                console.log(\"this one is triggeredd?\")\r\n                if(this.props.companies[i].companyID === this.props.companyID){\r\n                    for(var j=0; j<this.props.companies[i].Notes.length;j++){\r\n                        if(this.props.companies[i].Notes[j].noteID === this.state.noteID){\r\n                            companies[i].Notes[j] = {\r\n                                noteID: this.state.noteID,\r\n                                Detail: {\r\n                                    noteID: this.state.noteID,\r\n                                    Time: this.state.noteDate,\r\n                                    Title: this.state.noteName\r\n                                },\r\n                                Contents: newNoteContent\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.props._handleChange(this.state.editorState)\r\n            this.props.setCompany(companies)\r\n            this.props.onSaveNote()\r\n        }\r\n        this.props.handleClose()\r\n    }\r\n\r\n    onChangeName = (e) =>{\r\n        this.setState({\r\n            noteName : e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    handleEditorState = (editorState) =>{\r\n        this.setState({\r\n            editorState: editorState\r\n        })\r\n    }\r\n    currentBlockKey = () => this.state.editorState.getSelection().getStartKey()\r\n      \r\n    currentBlockIndex = () => this.state.editorState.getCurrentContent().getBlockMap().keySeq().findIndex(k => k === this.currentBlockKey())\r\n      \r\n    myKeyBindingFn = (e) => {\r\n        switch (e.keyCode) {\r\n          case 9: // TAB\r\n            if(this.currentBlockIndex() == 0){\r\n              return undefined\r\n            }\r\n            else {\r\n            const newEditorState = RichUtils.onTab(\r\n              e,\r\n              this.state.editorState,\r\n              1 /* maxDepth */,\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n              this.setState({\r\n                editorState: newEditorState\r\n              })\r\n              return null;\r\n            }\r\n          }\r\n          default: \r\n            return getDefaultKeyBinding(e);      \r\n      }\r\n    }\r\n        //       console.log(this.state.editorState._immutable.currentContent.blockMap._list._tail.array[this.currentBlockIndex()][1].depth)\r\n    _handleChange = (editorState) => {\r\n      console.log(this.state.editorState)\r\n      if(RichUtils.getCurrentBlockType(editorState) !== 'unordered-list-item'){\r\n        const newEditorState = RichUtils.toggleBlockType(editorState, 'unordered-list-item')\r\n        this.setState({editorState: newEditorState})\r\n      }\r\n      else{\r\n        this.setState({editorState});\r\n      }\r\n    }\r\n\r\n    \r\n    render(){\r\n       return (\r\n        <div>\r\n            <div className = \"sypp-create-edit-detail-container\">\r\n            <input\r\n                className = \"sypp-event-name\"\r\n                placeholder=\"Note Title Here\"\r\n                onChange={e => this.onChangeName(e)}\r\n                value={this.state.noteName}\r\n                />\r\n             <div className =\"sypp-event-seperateLine\"></div>\r\n            <div className = \"sypp-event-title\">Notes</div>\r\n            <Editor \r\n                placeholder = \"      Text Here\"\r\n                toolbarHidden\r\n                editorClassName=\"sypp-editor-class\"\r\n                editorState={this.state.editorState}\r\n                onEditorStateChange={this._handleChange}\r\n                keyBindingFn={this.myKeyBindingFn}\r\n            />\r\n            </div>\r\n            <div className = \"sypp-event-bottom-options-container\">\r\n                <button className = \"sypp-event-bottom-option sypp-option1 sypp-option1-page1\">Delete</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option2 sypp-option2-page1\" onClick = {this.onSaveButton}>Save</button>\r\n                <button className = \"sypp-event-bottom-option sypp-option3 sypp-option3-page1\" onClick = {this.props.handleClose}>Close</button>\r\n            </div>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateEditNote)","C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarMain.js",[],"C:\\Users\\Jay Choi\\Desktop\\SYPP_Web_personal\\src\\sypp_calendar\\CalendarDetail.js",["367","368","369"],{"ruleId":"370","replacedBy":"371"},{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","severity":1,"message":"375","line":20,"column":11,"nodeType":"376","messageId":"377","endLine":20,"endColumn":15},{"ruleId":"374","severity":1,"message":"378","line":1,"column":17,"nodeType":"376","messageId":"377","endLine":1,"endColumn":26},{"ruleId":"374","severity":1,"message":"379","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":25},{"ruleId":"380","severity":1,"message":"381","line":30,"column":19,"nodeType":"382","messageId":"383","endLine":30,"endColumn":21},{"ruleId":"374","severity":1,"message":"384","line":34,"column":13,"nodeType":"376","messageId":"377","endLine":34,"endColumn":20},{"ruleId":"385","severity":1,"message":"386","line":53,"column":21,"nodeType":"376","messageId":"387","endLine":53,"endColumn":22},{"ruleId":"374","severity":1,"message":"378","line":1,"column":17,"nodeType":"376","messageId":"377","endLine":1,"endColumn":26},{"ruleId":"374","severity":1,"message":"388","line":39,"column":12,"nodeType":"376","messageId":"377","endLine":39,"endColumn":23},{"ruleId":"385","severity":1,"message":"386","line":65,"column":25,"nodeType":"376","messageId":"387","endLine":65,"endColumn":26},{"ruleId":"374","severity":1,"message":"389","line":3,"column":8,"nodeType":"376","messageId":"377","endLine":3,"endColumn":11},{"ruleId":"374","severity":1,"message":"390","line":4,"column":8,"nodeType":"376","messageId":"377","endLine":4,"endColumn":15},{"ruleId":"391","severity":1,"message":"392","line":69,"column":25,"nodeType":"393","messageId":"394","endLine":69,"endColumn":27},{"ruleId":"380","severity":1,"message":"381","line":63,"column":19,"nodeType":"382","messageId":"383","endLine":63,"endColumn":21},{"ruleId":"395","severity":1,"message":"396","line":84,"column":9,"nodeType":"397","messageId":"398","endLine":114,"endColumn":10},{"ruleId":"374","severity":1,"message":"378","line":1,"column":17,"nodeType":"376","messageId":"377","endLine":1,"endColumn":26},{"ruleId":"374","severity":1,"message":"399","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"379","line":3,"column":8,"nodeType":"376","messageId":"377","endLine":3,"endColumn":25},{"ruleId":"374","severity":1,"message":"400","line":11,"column":12,"nodeType":"376","messageId":"377","endLine":11,"endColumn":19},{"ruleId":"374","severity":1,"message":"401","line":11,"column":21,"nodeType":"376","messageId":"377","endLine":11,"endColumn":31},{"ruleId":"402","severity":1,"message":"403","line":27,"column":5,"nodeType":"404","messageId":"405","endLine":29,"endColumn":6},{"ruleId":"395","severity":1,"message":"396","line":47,"column":13,"nodeType":"397","messageId":"398","endLine":160,"endColumn":14},{"ruleId":"374","severity":1,"message":"406","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":16},{"ruleId":"374","severity":1,"message":"407","line":3,"column":70,"nodeType":"376","messageId":"377","endLine":3,"endColumn":84},{"ruleId":"374","severity":1,"message":"408","line":3,"column":86,"nodeType":"376","messageId":"377","endLine":3,"endColumn":99},{"ruleId":"374","severity":1,"message":"409","line":4,"column":10,"nodeType":"376","messageId":"377","endLine":4,"endColumn":16},{"ruleId":"374","severity":1,"message":"410","line":9,"column":10,"nodeType":"376","messageId":"377","endLine":9,"endColumn":19},{"ruleId":"374","severity":1,"message":"411","line":10,"column":10,"nodeType":"376","messageId":"377","endLine":10,"endColumn":25},{"ruleId":"374","severity":1,"message":"412","line":17,"column":47,"nodeType":"376","messageId":"377","endLine":17,"endColumn":59},{"ruleId":"374","severity":1,"message":"413","line":17,"column":61,"nodeType":"376","messageId":"377","endLine":17,"endColumn":78},{"ruleId":"374","severity":1,"message":"414","line":17,"column":80,"nodeType":"376","messageId":"377","endLine":17,"endColumn":91},{"ruleId":"374","severity":1,"message":"415","line":17,"column":93,"nodeType":"376","messageId":"377","endLine":17,"endColumn":104},{"ruleId":"374","severity":1,"message":"416","line":17,"column":106,"nodeType":"376","messageId":"377","endLine":17,"endColumn":118},{"ruleId":"374","severity":1,"message":"417","line":28,"column":8,"nodeType":"376","messageId":"377","endLine":28,"endColumn":26},{"ruleId":"380","severity":1,"message":"381","line":69,"column":41,"nodeType":"382","messageId":"383","endLine":69,"endColumn":43},{"ruleId":"418","severity":1,"message":"419","line":85,"column":11,"nodeType":"420","messageId":"421","endLine":86,"endColumn":44},{"ruleId":"380","severity":1,"message":"422","line":134,"column":45,"nodeType":"382","messageId":"383","endLine":134,"endColumn":47},{"ruleId":"374","severity":1,"message":"406","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":16},{"ruleId":"374","severity":1,"message":"423","line":3,"column":10,"nodeType":"376","messageId":"377","endLine":3,"endColumn":27},{"ruleId":"374","severity":1,"message":"424","line":3,"column":29,"nodeType":"376","messageId":"377","endLine":3,"endColumn":38},{"ruleId":"374","severity":1,"message":"425","line":3,"column":54,"nodeType":"376","messageId":"377","endLine":3,"endColumn":60},{"ruleId":"374","severity":1,"message":"407","line":3,"column":89,"nodeType":"376","messageId":"377","endLine":3,"endColumn":103},{"ruleId":"374","severity":1,"message":"408","line":3,"column":105,"nodeType":"376","messageId":"377","endLine":3,"endColumn":118},{"ruleId":"374","severity":1,"message":"409","line":4,"column":10,"nodeType":"376","messageId":"377","endLine":4,"endColumn":16},{"ruleId":"374","severity":1,"message":"410","line":12,"column":10,"nodeType":"376","messageId":"377","endLine":12,"endColumn":19},{"ruleId":"374","severity":1,"message":"426","line":21,"column":9,"nodeType":"376","messageId":"377","endLine":21,"endColumn":29},{"ruleId":"374","severity":1,"message":"412","line":21,"column":47,"nodeType":"376","messageId":"377","endLine":21,"endColumn":59},{"ruleId":"374","severity":1,"message":"413","line":21,"column":61,"nodeType":"376","messageId":"377","endLine":21,"endColumn":78},{"ruleId":"374","severity":1,"message":"414","line":21,"column":80,"nodeType":"376","messageId":"377","endLine":21,"endColumn":91},{"ruleId":"374","severity":1,"message":"415","line":21,"column":93,"nodeType":"376","messageId":"377","endLine":21,"endColumn":104},{"ruleId":"374","severity":1,"message":"416","line":21,"column":106,"nodeType":"376","messageId":"377","endLine":21,"endColumn":118},{"ruleId":"374","severity":1,"message":"417","line":26,"column":10,"nodeType":"376","messageId":"377","endLine":26,"endColumn":28},{"ruleId":"374","severity":1,"message":"406","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":16},{"ruleId":"374","severity":1,"message":"409","line":4,"column":10,"nodeType":"376","messageId":"377","endLine":4,"endColumn":16},{"ruleId":"374","severity":1,"message":"410","line":9,"column":10,"nodeType":"376","messageId":"377","endLine":9,"endColumn":19},{"ruleId":"374","severity":1,"message":"411","line":10,"column":10,"nodeType":"376","messageId":"377","endLine":10,"endColumn":25},{"ruleId":"374","severity":1,"message":"416","line":12,"column":47,"nodeType":"376","messageId":"377","endLine":12,"endColumn":59},{"ruleId":"374","severity":1,"message":"417","line":20,"column":8,"nodeType":"376","messageId":"377","endLine":20,"endColumn":26},{"ruleId":"380","severity":1,"message":"381","line":74,"column":41,"nodeType":"382","messageId":"383","endLine":74,"endColumn":43},{"ruleId":"418","severity":1,"message":"419","line":90,"column":11,"nodeType":"420","messageId":"421","endLine":91,"endColumn":44},{"ruleId":"380","severity":1,"message":"422","line":131,"column":45,"nodeType":"382","messageId":"383","endLine":131,"endColumn":47},{"ruleId":"374","severity":1,"message":"406","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":16},{"ruleId":"374","severity":1,"message":"423","line":3,"column":10,"nodeType":"376","messageId":"377","endLine":3,"endColumn":27},{"ruleId":"374","severity":1,"message":"424","line":3,"column":29,"nodeType":"376","messageId":"377","endLine":3,"endColumn":38},{"ruleId":"374","severity":1,"message":"407","line":3,"column":89,"nodeType":"376","messageId":"377","endLine":3,"endColumn":103},{"ruleId":"374","severity":1,"message":"408","line":3,"column":105,"nodeType":"376","messageId":"377","endLine":3,"endColumn":118},{"ruleId":"374","severity":1,"message":"426","line":4,"column":9,"nodeType":"376","messageId":"377","endLine":4,"endColumn":29},{"ruleId":"374","severity":1,"message":"427","line":4,"column":31,"nodeType":"376","messageId":"377","endLine":4,"endColumn":45},{"ruleId":"374","severity":1,"message":"412","line":4,"column":47,"nodeType":"376","messageId":"377","endLine":4,"endColumn":59},{"ruleId":"374","severity":1,"message":"413","line":4,"column":61,"nodeType":"376","messageId":"377","endLine":4,"endColumn":78},{"ruleId":"374","severity":1,"message":"414","line":4,"column":80,"nodeType":"376","messageId":"377","endLine":4,"endColumn":91},{"ruleId":"374","severity":1,"message":"415","line":4,"column":93,"nodeType":"376","messageId":"377","endLine":4,"endColumn":104},{"ruleId":"374","severity":1,"message":"416","line":4,"column":106,"nodeType":"376","messageId":"377","endLine":4,"endColumn":118},{"ruleId":"374","severity":1,"message":"409","line":6,"column":10,"nodeType":"376","messageId":"377","endLine":6,"endColumn":16},{"ruleId":"374","severity":1,"message":"410","line":11,"column":10,"nodeType":"376","messageId":"377","endLine":11,"endColumn":19},{"ruleId":"374","severity":1,"message":"411","line":12,"column":10,"nodeType":"376","messageId":"377","endLine":12,"endColumn":25},{"ruleId":"380","severity":1,"message":"422","line":103,"column":55,"nodeType":"382","messageId":"383","endLine":103,"endColumn":57},{"ruleId":"374","severity":1,"message":"428","line":1,"column":27,"nodeType":"376","messageId":"377","endLine":1,"endColumn":35},{"ruleId":"395","severity":1,"message":"396","line":28,"column":9,"nodeType":"397","messageId":"398","endLine":60,"endColumn":10},{"ruleId":"380","severity":1,"message":"422","line":49,"column":55,"nodeType":"382","messageId":"383","endLine":49,"endColumn":57},{"ruleId":"374","severity":1,"message":"427","line":5,"column":31,"nodeType":"376","messageId":"377","endLine":5,"endColumn":45},{"ruleId":"374","severity":1,"message":"416","line":5,"column":47,"nodeType":"376","messageId":"377","endLine":5,"endColumn":59},{"ruleId":"374","severity":1,"message":"429","line":8,"column":16,"nodeType":"376","messageId":"377","endLine":8,"endColumn":22},{"ruleId":"385","severity":1,"message":"386","line":124,"column":21,"nodeType":"376","messageId":"387","endLine":124,"endColumn":22},{"ruleId":"385","severity":1,"message":"430","line":153,"column":17,"nodeType":"376","messageId":"387","endLine":153,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":154,"column":21,"nodeType":"376","messageId":"387","endLine":154,"endColumn":22},{"ruleId":"380","severity":1,"message":"381","line":213,"column":41,"nodeType":"382","messageId":"383","endLine":213,"endColumn":43},{"ruleId":"418","severity":1,"message":"419","line":229,"column":11,"nodeType":"420","messageId":"421","endLine":230,"endColumn":44},{"ruleId":"374","severity":1,"message":"424","line":3,"column":10,"nodeType":"376","messageId":"377","endLine":3,"endColumn":19},{"ruleId":"374","severity":1,"message":"431","line":3,"column":21,"nodeType":"376","messageId":"377","endLine":3,"endColumn":33},{"ruleId":"374","severity":1,"message":"432","line":3,"column":43,"nodeType":"376","messageId":"377","endLine":3,"endColumn":55},{"ruleId":"374","severity":1,"message":"433","line":3,"column":57,"nodeType":"376","messageId":"377","endLine":3,"endColumn":68},{"ruleId":"374","severity":1,"message":"426","line":5,"column":9,"nodeType":"376","messageId":"377","endLine":5,"endColumn":29},{"ruleId":"374","severity":1,"message":"427","line":5,"column":31,"nodeType":"376","messageId":"377","endLine":5,"endColumn":45},{"ruleId":"374","severity":1,"message":"416","line":5,"column":47,"nodeType":"376","messageId":"377","endLine":5,"endColumn":59},{"ruleId":"374","severity":1,"message":"429","line":8,"column":16,"nodeType":"376","messageId":"377","endLine":8,"endColumn":22},{"ruleId":"374","severity":1,"message":"410","line":16,"column":10,"nodeType":"376","messageId":"377","endLine":16,"endColumn":19},{"ruleId":"385","severity":1,"message":"386","line":86,"column":21,"nodeType":"376","messageId":"387","endLine":86,"endColumn":22},{"ruleId":"385","severity":1,"message":"430","line":107,"column":17,"nodeType":"376","messageId":"387","endLine":107,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":108,"column":21,"nodeType":"376","messageId":"387","endLine":108,"endColumn":22},{"ruleId":"385","severity":1,"message":"386","line":133,"column":21,"nodeType":"376","messageId":"387","endLine":133,"endColumn":22},{"ruleId":"385","severity":1,"message":"434","line":154,"column":17,"nodeType":"376","messageId":"387","endLine":154,"endColumn":26},{"ruleId":"385","severity":1,"message":"386","line":155,"column":21,"nodeType":"376","messageId":"387","endLine":155,"endColumn":22},{"ruleId":"385","severity":1,"message":"435","line":158,"column":29,"nodeType":"376","messageId":"387","endLine":158,"endColumn":30},{"ruleId":"385","severity":1,"message":"436","line":215,"column":21,"nodeType":"376","messageId":"387","endLine":215,"endColumn":33},{"ruleId":"374","severity":1,"message":"424","line":5,"column":10,"nodeType":"376","messageId":"377","endLine":5,"endColumn":19},{"ruleId":"374","severity":1,"message":"431","line":5,"column":21,"nodeType":"376","messageId":"377","endLine":5,"endColumn":33},{"ruleId":"374","severity":1,"message":"432","line":5,"column":43,"nodeType":"376","messageId":"377","endLine":5,"endColumn":55},{"ruleId":"374","severity":1,"message":"433","line":5,"column":57,"nodeType":"376","messageId":"377","endLine":5,"endColumn":68},{"ruleId":"374","severity":1,"message":"409","line":6,"column":10,"nodeType":"376","messageId":"377","endLine":6,"endColumn":16},{"ruleId":"374","severity":1,"message":"426","line":7,"column":9,"nodeType":"376","messageId":"377","endLine":7,"endColumn":29},{"ruleId":"374","severity":1,"message":"427","line":7,"column":31,"nodeType":"376","messageId":"377","endLine":7,"endColumn":45},{"ruleId":"374","severity":1,"message":"416","line":7,"column":47,"nodeType":"376","messageId":"377","endLine":7,"endColumn":59},{"ruleId":"385","severity":1,"message":"386","line":96,"column":21,"nodeType":"376","messageId":"387","endLine":96,"endColumn":22},{"ruleId":"385","severity":1,"message":"430","line":119,"column":17,"nodeType":"376","messageId":"387","endLine":119,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":120,"column":21,"nodeType":"376","messageId":"387","endLine":120,"endColumn":22},{"ruleId":"385","severity":1,"message":"386","line":147,"column":21,"nodeType":"376","messageId":"387","endLine":147,"endColumn":22},{"ruleId":"385","severity":1,"message":"434","line":171,"column":17,"nodeType":"376","messageId":"387","endLine":171,"endColumn":26},{"ruleId":"385","severity":1,"message":"386","line":172,"column":21,"nodeType":"376","messageId":"387","endLine":172,"endColumn":22},{"ruleId":"385","severity":1,"message":"435","line":174,"column":29,"nodeType":"376","messageId":"387","endLine":174,"endColumn":30},{"ruleId":"395","severity":1,"message":"396","line":250,"column":9,"nodeType":"397","messageId":"398","endLine":283,"endColumn":10},{"ruleId":"374","severity":1,"message":"437","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":16},{"ruleId":"374","severity":1,"message":"438","line":11,"column":10,"nodeType":"376","messageId":"377","endLine":11,"endColumn":13},{"ruleId":"380","severity":1,"message":"422","line":25,"column":33,"nodeType":"382","messageId":"383","endLine":25,"endColumn":35},{"ruleId":"380","severity":1,"message":"422","line":30,"column":35,"nodeType":"382","messageId":"383","endLine":30,"endColumn":37},{"ruleId":"374","severity":1,"message":"431","line":2,"column":21,"nodeType":"376","messageId":"377","endLine":2,"endColumn":33},{"ruleId":"374","severity":1,"message":"425","line":2,"column":35,"nodeType":"376","messageId":"377","endLine":2,"endColumn":41},{"ruleId":"374","severity":1,"message":"432","line":2,"column":43,"nodeType":"376","messageId":"377","endLine":2,"endColumn":55},{"ruleId":"374","severity":1,"message":"433","line":2,"column":57,"nodeType":"376","messageId":"377","endLine":2,"endColumn":68},{"ruleId":"374","severity":1,"message":"427","line":4,"column":31,"nodeType":"376","messageId":"377","endLine":4,"endColumn":45},{"ruleId":"374","severity":1,"message":"416","line":4,"column":47,"nodeType":"376","messageId":"377","endLine":4,"endColumn":59},{"ruleId":"380","severity":1,"message":"381","line":35,"column":41,"nodeType":"382","messageId":"383","endLine":35,"endColumn":43},{"ruleId":"418","severity":1,"message":"419","line":51,"column":11,"nodeType":"420","messageId":"421","endLine":52,"endColumn":44},{"ruleId":"374","severity":1,"message":"424","line":5,"column":10,"nodeType":"376","messageId":"377","endLine":5,"endColumn":19},{"ruleId":"374","severity":1,"message":"431","line":5,"column":21,"nodeType":"376","messageId":"377","endLine":5,"endColumn":33},{"ruleId":"374","severity":1,"message":"432","line":5,"column":43,"nodeType":"376","messageId":"377","endLine":5,"endColumn":55},{"ruleId":"374","severity":1,"message":"433","line":5,"column":57,"nodeType":"376","messageId":"377","endLine":5,"endColumn":68},{"ruleId":"374","severity":1,"message":"409","line":6,"column":10,"nodeType":"376","messageId":"377","endLine":6,"endColumn":16},{"ruleId":"374","severity":1,"message":"426","line":7,"column":9,"nodeType":"376","messageId":"377","endLine":7,"endColumn":29},{"ruleId":"374","severity":1,"message":"427","line":7,"column":31,"nodeType":"376","messageId":"377","endLine":7,"endColumn":45},{"ruleId":"374","severity":1,"message":"416","line":7,"column":47,"nodeType":"376","messageId":"377","endLine":7,"endColumn":59},{"ruleId":"385","severity":1,"message":"386","line":93,"column":21,"nodeType":"376","messageId":"387","endLine":93,"endColumn":22},{"ruleId":"385","severity":1,"message":"430","line":114,"column":17,"nodeType":"376","messageId":"387","endLine":114,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":115,"column":21,"nodeType":"376","messageId":"387","endLine":115,"endColumn":22},{"ruleId":"385","severity":1,"message":"386","line":141,"column":21,"nodeType":"376","messageId":"387","endLine":141,"endColumn":22},{"ruleId":"385","severity":1,"message":"434","line":163,"column":17,"nodeType":"376","messageId":"387","endLine":163,"endColumn":26},{"ruleId":"385","severity":1,"message":"386","line":164,"column":21,"nodeType":"376","messageId":"387","endLine":164,"endColumn":22},{"ruleId":"385","severity":1,"message":"435","line":166,"column":29,"nodeType":"376","messageId":"387","endLine":166,"endColumn":30},{"ruleId":"395","severity":1,"message":"396","line":228,"column":9,"nodeType":"397","messageId":"398","endLine":257,"endColumn":10},{"ruleId":"374","severity":1,"message":"431","line":2,"column":21,"nodeType":"376","messageId":"377","endLine":2,"endColumn":33},{"ruleId":"374","severity":1,"message":"425","line":2,"column":35,"nodeType":"376","messageId":"377","endLine":2,"endColumn":41},{"ruleId":"374","severity":1,"message":"432","line":2,"column":43,"nodeType":"376","messageId":"377","endLine":2,"endColumn":55},{"ruleId":"374","severity":1,"message":"433","line":2,"column":57,"nodeType":"376","messageId":"377","endLine":2,"endColumn":68},{"ruleId":"374","severity":1,"message":"427","line":4,"column":31,"nodeType":"376","messageId":"377","endLine":4,"endColumn":45},{"ruleId":"374","severity":1,"message":"416","line":4,"column":47,"nodeType":"376","messageId":"377","endLine":4,"endColumn":59},{"ruleId":"380","severity":1,"message":"381","line":36,"column":41,"nodeType":"382","messageId":"383","endLine":36,"endColumn":43},{"ruleId":"418","severity":1,"message":"419","line":52,"column":11,"nodeType":"420","messageId":"421","endLine":53,"endColumn":44},{"ruleId":"374","severity":1,"message":"437","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":16},{"ruleId":"374","severity":1,"message":"439","line":6,"column":10,"nodeType":"376","messageId":"377","endLine":6,"endColumn":19},{"ruleId":"374","severity":1,"message":"411","line":7,"column":10,"nodeType":"376","messageId":"377","endLine":7,"endColumn":25},{"ruleId":"374","severity":1,"message":"438","line":10,"column":10,"nodeType":"376","messageId":"377","endLine":10,"endColumn":13},{"ruleId":"374","severity":1,"message":"431","line":3,"column":21,"nodeType":"376","messageId":"377","endLine":3,"endColumn":33},{"ruleId":"374","severity":1,"message":"432","line":3,"column":43,"nodeType":"376","messageId":"377","endLine":3,"endColumn":55},{"ruleId":"374","severity":1,"message":"433","line":3,"column":57,"nodeType":"376","messageId":"377","endLine":3,"endColumn":68},{"ruleId":"374","severity":1,"message":"427","line":5,"column":31,"nodeType":"376","messageId":"377","endLine":5,"endColumn":45},{"ruleId":"374","severity":1,"message":"416","line":5,"column":47,"nodeType":"376","messageId":"377","endLine":5,"endColumn":59},{"ruleId":"374","severity":1,"message":"429","line":8,"column":16,"nodeType":"376","messageId":"377","endLine":8,"endColumn":22},{"ruleId":"385","severity":1,"message":"440","line":63,"column":17,"nodeType":"376","messageId":"387","endLine":63,"endColumn":31},{"ruleId":"385","severity":1,"message":"386","line":87,"column":21,"nodeType":"376","messageId":"387","endLine":87,"endColumn":22},{"ruleId":"385","severity":1,"message":"430","line":107,"column":17,"nodeType":"376","messageId":"387","endLine":107,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":108,"column":21,"nodeType":"376","messageId":"387","endLine":108,"endColumn":22},{"ruleId":"385","severity":1,"message":"386","line":133,"column":21,"nodeType":"376","messageId":"387","endLine":133,"endColumn":22},{"ruleId":"385","severity":1,"message":"434","line":153,"column":17,"nodeType":"376","messageId":"387","endLine":153,"endColumn":26},{"ruleId":"385","severity":1,"message":"386","line":154,"column":21,"nodeType":"376","messageId":"387","endLine":154,"endColumn":22},{"ruleId":"385","severity":1,"message":"435","line":157,"column":29,"nodeType":"376","messageId":"387","endLine":157,"endColumn":30},{"ruleId":"380","severity":1,"message":"381","line":197,"column":41,"nodeType":"382","messageId":"383","endLine":197,"endColumn":43},{"ruleId":"418","severity":1,"message":"419","line":213,"column":11,"nodeType":"420","messageId":"421","endLine":214,"endColumn":44},{"ruleId":"374","severity":1,"message":"441","line":5,"column":9,"nodeType":"376","messageId":"377","endLine":5,"endColumn":16},{"ruleId":"374","severity":1,"message":"442","line":7,"column":7,"nodeType":"376","messageId":"377","endLine":7,"endColumn":22},{"ruleId":"374","severity":1,"message":"443","line":12,"column":9,"nodeType":"376","messageId":"377","endLine":12,"endColumn":27},"no-native-reassign",["444"],"no-negated-in-lhs",["445"],"no-unused-vars","'apps' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","'ToggleButtonGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'boolean' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'targetTitle' is assigned a value but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Button' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ReactDOM' is defined but never used.","'convertFromRaw' is defined but never used.","'contentBlocks' is defined but never used.","'Editor' is defined but never used.","'faListAlt' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'getSelection' is defined but never used.","'getCurrentContent' is defined but never used.","'editorState' is defined but never used.","'changeDepth' is defined but never used.","'keyBindingFn' is defined but never used.","'hasCommandModifier' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","Expected '!==' and instead saw '!='.","'CharacterMetadata' is defined but never used.","'RichUtils' is defined but never used.","'genKey' is defined but never used.","'getDefaultKeyBinding' is defined but never used.","'KeyBindingUtil' is defined but never used.","'useState' is defined but never used.","'uuidv4' is defined but never used.","'apps' is already defined.","'ContentBlock' is defined but never used.","'ContentState' is defined but never used.","'EditorState' is defined but never used.","'companies' is already defined.","'j' is already defined.","'tempCheckbox' is already defined.","'Calendar' is defined but never used.","'min' is defined but never used.","'faCaretUp' is defined but never used.","'newNoteContent' is already defined.","'connect' is defined but never used.","'mapStatetoProps' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]